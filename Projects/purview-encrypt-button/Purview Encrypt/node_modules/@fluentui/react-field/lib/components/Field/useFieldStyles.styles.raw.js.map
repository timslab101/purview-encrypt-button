{"version":3,"sources":["../src/components/Field/useFieldStyles.styles.ts"],"sourcesContent":["'use client';\n\nimport { tokens, typographyStyles } from '@fluentui/react-theme';\nimport type { SlotClassNames } from '@fluentui/react-utilities';\nimport { makeResetStyles, makeStyles, mergeClasses } from '@griffel/react';\nimport type { FieldSlots, FieldState } from './Field.types';\n\nexport const fieldClassNames: SlotClassNames<FieldSlots> = {\n  root: `fui-Field`,\n  label: `fui-Field__label`,\n  validationMessage: `fui-Field__validationMessage`,\n  validationMessageIcon: `fui-Field__validationMessageIcon`,\n  hint: `fui-Field__hint`,\n};\n\n// Size of the icon in the validation message\nconst iconSize = '12px';\n\n/**\n * Styles for the root slot\n */\nconst useRootStyles = makeStyles({\n  base: {\n    display: 'grid',\n  },\n\n  // In horizontal layout, the field is a grid with the label taking up the entire first column.\n  // The last row is slack space in case the label is taller than the rest of the content.\n  horizontal: {\n    gridTemplateColumns: '33% 1fr',\n    gridTemplateRows: 'auto auto auto 1fr',\n  },\n\n  // In horizontal layout without a label, replace the label's column with padding.\n  // This lets grid auto-flow properly place the other children, and keeps fields with and without labels aligned.\n  horizontalNoLabel: {\n    paddingLeft: '33%',\n    gridTemplateColumns: '1fr',\n  },\n});\n\nconst useLabelStyles = makeStyles({\n  vertical: {\n    paddingTop: tokens.spacingVerticalXXS,\n    paddingBottom: tokens.spacingVerticalXXS,\n    marginBottom: tokens.spacingVerticalXXS,\n  },\n\n  verticalLarge: {\n    paddingTop: '1px',\n    paddingBottom: '1px',\n    marginBottom: tokens.spacingVerticalXS,\n  },\n\n  horizontal: {\n    paddingTop: tokens.spacingVerticalSNudge,\n    paddingBottom: tokens.spacingVerticalSNudge,\n    marginRight: tokens.spacingHorizontalM,\n    gridRowStart: '1',\n    gridRowEnd: '-1',\n  },\n\n  horizontalSmall: {\n    paddingTop: tokens.spacingVerticalXS,\n    paddingBottom: tokens.spacingVerticalXS,\n  },\n\n  horizontalLarge: {\n    // To align the label text with the Input text, it should be centered within the 40px height of the Input.\n    // This is (40px - lineHeightBase400) / 2 = 9px. Hardcoded since there is no 9px padding token.\n    paddingTop: '9px',\n    paddingBottom: '9px',\n  },\n});\n\nconst useSecondaryTextBaseClassName = makeResetStyles({\n  marginTop: tokens.spacingVerticalXXS,\n  color: tokens.colorNeutralForeground3,\n  ...typographyStyles.caption1,\n});\n\nconst useSecondaryTextStyles = makeStyles({\n  error: {\n    color: tokens.colorPaletteRedForeground1,\n  },\n\n  withIcon: {\n    // Add a gutter for the icon, to allow multiple lines of text to line up to the right of the icon.\n    paddingLeft: `calc(${iconSize} + ${tokens.spacingHorizontalXS})`,\n  },\n});\n\nconst useValidationMessageIconBaseClassName = makeResetStyles({\n  display: 'inline-block',\n  fontSize: iconSize,\n  // Negative left margin puts the icon in the gutter of the validation message div's withIcon style.\n  marginLeft: `calc(-${iconSize} - ${tokens.spacingHorizontalXS})`,\n  marginRight: tokens.spacingHorizontalXS,\n  // Line height of 0 prevents the verticalAlign from affecting the line height of the text.\n  lineHeight: '0',\n  // Negative verticalAlign shifts the inline icon down to align with the text (effectively top padding).\n  verticalAlign: '-1px',\n});\n\nconst useValidationMessageIconStyles = makeStyles({\n  error: {\n    color: tokens.colorPaletteRedForeground1,\n  },\n  warning: {\n    color: tokens.colorPaletteDarkOrangeForeground1,\n  },\n  success: {\n    color: tokens.colorPaletteGreenForeground1,\n  },\n});\n\n/**\n * Apply styling to the Field slots based on the state\n */\nexport const useFieldStyles_unstable = (state: FieldState): FieldState => {\n  'use no memo';\n\n  const { validationState, size } = state;\n  const horizontal = state.orientation === 'horizontal';\n\n  const rootStyles = useRootStyles();\n  state.root.className = mergeClasses(\n    fieldClassNames.root,\n    rootStyles.base,\n    horizontal && rootStyles.horizontal,\n    horizontal && !state.label && rootStyles.horizontalNoLabel,\n    state.root.className,\n  );\n\n  const labelStyles = useLabelStyles();\n  if (state.label) {\n    state.label.className = mergeClasses(\n      fieldClassNames.label,\n      horizontal && labelStyles.horizontal,\n      horizontal && size === 'small' && labelStyles.horizontalSmall,\n      horizontal && size === 'large' && labelStyles.horizontalLarge,\n      !horizontal && labelStyles.vertical,\n      !horizontal && size === 'large' && labelStyles.verticalLarge,\n      state.label.className,\n    );\n  }\n\n  const validationMessageIconBaseClassName = useValidationMessageIconBaseClassName();\n  const validationMessageIconStyles = useValidationMessageIconStyles();\n  if (state.validationMessageIcon) {\n    state.validationMessageIcon.className = mergeClasses(\n      fieldClassNames.validationMessageIcon,\n      validationMessageIconBaseClassName,\n      validationState !== 'none' && validationMessageIconStyles[validationState],\n      state.validationMessageIcon.className,\n    );\n  }\n\n  const secondaryTextBaseClassName = useSecondaryTextBaseClassName();\n  const secondaryTextStyles = useSecondaryTextStyles();\n  if (state.validationMessage) {\n    state.validationMessage.className = mergeClasses(\n      fieldClassNames.validationMessage,\n      secondaryTextBaseClassName,\n      validationState === 'error' && secondaryTextStyles.error,\n      !!state.validationMessageIcon && secondaryTextStyles.withIcon,\n      state.validationMessage.className,\n    );\n  }\n\n  if (state.hint) {\n    state.hint.className = mergeClasses(fieldClassNames.hint, secondaryTextBaseClassName, state.hint.className);\n  }\n\n  return state;\n};\n"],"names":["tokens","typographyStyles","makeResetStyles","makeStyles","mergeClasses","fieldClassNames","root","label","validationMessage","validationMessageIcon","hint","iconSize","useRootStyles","base","display","horizontal","gridTemplateColumns","gridTemplateRows","horizontalNoLabel","paddingLeft","useLabelStyles","vertical","paddingTop","spacingVerticalXXS","paddingBottom","marginBottom","verticalLarge","spacingVerticalXS","spacingVerticalSNudge","marginRight","spacingHorizontalM","gridRowStart","gridRowEnd","horizontalSmall","horizontalLarge","useSecondaryTextBaseClassName","marginTop","color","colorNeutralForeground3","caption1","useSecondaryTextStyles","error","colorPaletteRedForeground1","withIcon","spacingHorizontalXS","useValidationMessageIconBaseClassName","fontSize","marginLeft","lineHeight","verticalAlign","useValidationMessageIconStyles","warning","colorPaletteDarkOrangeForeground1","success","colorPaletteGreenForeground1","useFieldStyles_unstable","state","validationState","size","orientation","rootStyles","className","labelStyles","validationMessageIconBaseClassName","validationMessageIconStyles","secondaryTextBaseClassName","secondaryTextStyles"],"mappings":"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"}