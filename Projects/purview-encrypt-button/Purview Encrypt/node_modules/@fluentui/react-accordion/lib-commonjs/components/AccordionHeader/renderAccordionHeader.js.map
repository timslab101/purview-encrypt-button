{"version":3,"sources":["../src/components/AccordionHeader/renderAccordionHeader.tsx"],"sourcesContent":["/** @jsxRuntime automatic */\n/** @jsxImportSource @fluentui/react-jsx-runtime */\n\nimport { assertSlots } from '@fluentui/react-utilities';\nimport type { JSXElement } from '@fluentui/react-utilities';\nimport type { AccordionHeaderState, AccordionHeaderSlots, AccordionHeaderContextValues } from './AccordionHeader.types';\nimport { AccordionHeaderProvider } from '../../contexts/accordionHeader';\n\n/**\n * Function that renders the final JSX of the component\n */\nexport const renderAccordionHeader_unstable = (\n  state: AccordionHeaderState,\n  contextValues: AccordionHeaderContextValues,\n): JSXElement => {\n  assertSlots<AccordionHeaderSlots>(state);\n\n  return (\n    <AccordionHeaderProvider value={contextValues.accordionHeader}>\n      <state.root>\n        <state.button>\n          {state.expandIconPosition === 'start' && state.expandIcon && <state.expandIcon />}\n          {state.icon && <state.icon />}\n          {state.root.children}\n          {state.expandIconPosition === 'end' && state.expandIcon && <state.expandIcon />}\n        </state.button>\n      </state.root>\n    </AccordionHeaderProvider>\n  );\n};\n"],"names":["assertSlots","AccordionHeaderProvider","renderAccordionHeader_unstable","state","contextValues","value","accordionHeader","root","button","expandIconPosition","expandIcon","icon","children"],"mappings":";;;;+BAWaE;;;;;;4BAVb,iCAAiD;gCAErB,4BAA4B;iCAGhB,iCAAiC;AAKlE,uCAAuC,CAC5CC,OACAC;QAEAJ,2BAAAA,EAAkCG;IAElC,OAAA,WAAA,OACE,eAAA,EAACF,wCAAAA,EAAAA;QAAwBI,OAAOD,cAAcE,eAAe;kBAC3D,WAAA,GAAA,mBAAA,EAACH,MAAMI,IAAI,EAAA;sBACT,WAAA,OAAA,gBAAA,EAACJ,MAAMK,MAAM,EAAA;;oBACVL,MAAMM,kBAAkB,KAAK,WAAWN,MAAMO,UAAU,IAAA,WAAA,OAAI,eAAA,EAACP,MAAMO,UAAU,EAAA,CAAA;oBAC7EP,MAAMQ,IAAI,IAAA,WAAA,OAAI,eAAA,EAACR,MAAMQ,IAAI,EAAA,CAAA;oBACzBR,MAAMI,IAAI,CAACK,QAAQ;oBACnBT,MAAMM,kBAAkB,KAAK,SAASN,MAAMO,UAAU,IAAA,WAAA,OAAI,eAAA,EAACP,MAAMO,UAAU,EAAA,CAAA;;;;;AAKtF,EAAE"}