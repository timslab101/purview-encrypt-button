{"version":3,"sources":["../src/focus/focusVisiblePolyfill.ts"],"sourcesContent":["import { isHTMLElement } from '@fluentui/react-utilities';\nimport { KEYBORG_FOCUSIN, KeyborgFocusInEvent, createKeyborg, disposeKeyborg } from 'keyborg';\n\nimport { FOCUS_VISIBLE_ATTR } from './constants';\n\n/**\n * Because `addEventListener` type override falls back to 2nd definition (evt name is unknown string literal)\n * evt is being typed as a base class of MouseEvent -> `Event`.\n * This type is used to override `listener` calls to make TS happy\n */\ntype ListenerOverride = (evt: Event) => void;\n\ntype FocusVisibleState = {\n  /**\n   * Current element with focus visible in state\n   */\n  current: HTMLElement | undefined;\n};\n\ntype HTMLElementWithFocusVisibleScope = {\n  focusVisible: boolean | undefined;\n} & HTMLElement;\n\n/**\n * @internal\n * @param scope - Applies the ponyfill to all DOM children\n * @param targetWindow - window\n */\nexport function applyFocusVisiblePolyfill(scope: HTMLElement, targetWindow: Window): () => void {\n  if (alreadyInScope(scope)) {\n    // Focus visible polyfill already applied at this scope\n    return () => undefined;\n  }\n\n  const state: FocusVisibleState = {\n    current: undefined,\n  };\n\n  const keyborg = createKeyborg(targetWindow);\n\n  function registerElementIfNavigating(el: EventTarget | HTMLElement | null) {\n    if (keyborg.isNavigatingWithKeyboard() && isHTMLElement(el)) {\n      state.current = el;\n      el.setAttribute(FOCUS_VISIBLE_ATTR, '');\n    }\n  }\n\n  function disposeCurrentElement() {\n    if (state.current) {\n      state.current.removeAttribute(FOCUS_VISIBLE_ATTR);\n      state.current = undefined;\n    }\n  }\n\n  // When navigation mode changes remove the focus-visible selector\n  keyborg.subscribe(isNavigatingWithKeyboard => {\n    if (!isNavigatingWithKeyboard) {\n      disposeCurrentElement();\n    } else {\n      registerElementIfNavigating(targetWindow.document.activeElement);\n    }\n  });\n\n  // Keyborg's focusin event is delegated so it's only registered once on the window\n  // and contains metadata about the focus event\n  const keyborgListener = (e: KeyborgFocusInEvent) => {\n    disposeCurrentElement();\n    const target = e.composedPath()[0];\n    registerElementIfNavigating(target);\n  };\n\n  // Make sure that when focus leaves the scope, the focus visible class is removed\n  const blurListener = (e: FocusEvent) => {\n    if (!e.relatedTarget || (isHTMLElement(e.relatedTarget) && !scope.contains(e.relatedTarget))) {\n      disposeCurrentElement();\n    }\n  };\n\n  scope.addEventListener(KEYBORG_FOCUSIN, keyborgListener as ListenerOverride);\n  scope.addEventListener('focusout', blurListener);\n  (scope as HTMLElementWithFocusVisibleScope).focusVisible = true;\n\n  if (scope.contains(targetWindow.document.activeElement)) {\n    registerElementIfNavigating(targetWindow.document.activeElement);\n  }\n\n  // Return disposer\n  return () => {\n    disposeCurrentElement();\n\n    scope.removeEventListener(KEYBORG_FOCUSIN, keyborgListener as ListenerOverride);\n    scope.removeEventListener('focusout', blurListener);\n    (scope as HTMLElementWithFocusVisibleScope).focusVisible = undefined;\n\n    disposeKeyborg(keyborg);\n  };\n}\n\nfunction alreadyInScope(el: HTMLElement | null | undefined): boolean {\n  if (!el) {\n    return false;\n  }\n\n  if ((el as HTMLElementWithFocusVisibleScope).focusVisible) {\n    return true;\n  }\n\n  return alreadyInScope(el?.parentElement);\n}\n"],"names":["applyFocusVisiblePolyfill","scope","targetWindow","alreadyInScope","undefined","state","current","keyborg","createKeyborg","registerElementIfNavigating","el","isNavigatingWithKeyboard","isHTMLElement","setAttribute","FOCUS_VISIBLE_ATTR","disposeCurrentElement","removeAttribute","subscribe","document","activeElement","keyborgListener","e","target","composedPath","blurListener","relatedTarget","contains","addEventListener","KEYBORG_FOCUSIN","focusVisible","removeEventListener","disposeKeyborg","parentElement"],"mappings":";;;;+BA4BgBA;;;eAAAA;;;gCA5Bc;yBACsD;2BAEjD;AAyB5B,SAASA,0BAA0BC,KAAkB,EAAEC,YAAoB;IAChF,IAAIC,eAAeF,QAAQ;QACzB,uDAAuD;QACvD,OAAO,IAAMG;IACf;IAEA,MAAMC,QAA2B;QAC/BC,SAASF;IACX;IAEA,MAAMG,UAAUC,IAAAA,sBAAa,EAACN;IAE9B,SAASO,4BAA4BC,EAAoC;QACvE,IAAIH,QAAQI,wBAAwB,MAAMC,IAAAA,6BAAa,EAACF,KAAK;YAC3DL,MAAMC,OAAO,GAAGI;YAChBA,GAAGG,YAAY,CAACC,6BAAkB,EAAE;QACtC;IACF;IAEA,SAASC;QACP,IAAIV,MAAMC,OAAO,EAAE;YACjBD,MAAMC,OAAO,CAACU,eAAe,CAACF,6BAAkB;YAChDT,MAAMC,OAAO,GAAGF;QAClB;IACF;IAEA,iEAAiE;IACjEG,QAAQU,SAAS,CAACN,CAAAA;QAChB,IAAI,CAACA,0BAA0B;YAC7BI;QACF,OAAO;YACLN,4BAA4BP,aAAagB,QAAQ,CAACC,aAAa;QACjE;IACF;IAEA,kFAAkF;IAClF,8CAA8C;IAC9C,MAAMC,kBAAkB,CAACC;QACvBN;QACA,MAAMO,SAASD,EAAEE,YAAY,EAAE,CAAC,EAAE;QAClCd,4BAA4Ba;IAC9B;IAEA,iFAAiF;IACjF,MAAME,eAAe,CAACH;QACpB,IAAI,CAACA,EAAEI,aAAa,IAAKb,IAAAA,6BAAa,EAACS,EAAEI,aAAa,KAAK,CAACxB,MAAMyB,QAAQ,CAACL,EAAEI,aAAa,GAAI;YAC5FV;QACF;IACF;IAEAd,MAAM0B,gBAAgB,CAACC,wBAAe,EAAER;IACxCnB,MAAM0B,gBAAgB,CAAC,YAAYH;IAClCvB,MAA2C4B,YAAY,GAAG;IAE3D,IAAI5B,MAAMyB,QAAQ,CAACxB,aAAagB,QAAQ,CAACC,aAAa,GAAG;QACvDV,4BAA4BP,aAAagB,QAAQ,CAACC,aAAa;IACjE;IAEA,kBAAkB;IAClB,OAAO;QACLJ;QAEAd,MAAM6B,mBAAmB,CAACF,wBAAe,EAAER;QAC3CnB,MAAM6B,mBAAmB,CAAC,YAAYN;QACrCvB,MAA2C4B,YAAY,GAAGzB;QAE3D2B,IAAAA,uBAAc,EAACxB;IACjB;AACF;AAEA,SAASJ,eAAeO,EAAkC;IACxD,IAAI,CAACA,IAAI;QACP,OAAO;IACT;IAEA,IAAI,AAACA,GAAwCmB,YAAY,EAAE;QACzD,OAAO;IACT;IAEA,OAAO1B,eAAeO,eAAAA,yBAAAA,GAAIsB,aAAa;AACzC"}