{"version":3,"sources":["../src/components/BreadcrumbButton/useBreadcrumbButtonStyles.styles.ts"],"sourcesContent":["'use client';\n\nimport { makeStyles, mergeClasses } from '@griffel/react';\nimport type { BreadcrumbButtonSlots, BreadcrumbButtonState } from './BreadcrumbButton.types';\nimport type { SlotClassNames } from '@fluentui/react-utilities';\nimport { useButtonStyles_unstable, buttonClassNames } from '@fluentui/react-button';\nimport { tokens, typographyStyles } from '@fluentui/react-theme';\nimport { iconFilledClassName, iconRegularClassName } from '@fluentui/react-icons';\n\n/**\n * Static CSS class names used internally for the component slots.\n */\nexport const breadcrumbButtonClassNames: SlotClassNames<BreadcrumbButtonSlots> = {\n  root: 'fui-BreadcrumbButton',\n  icon: 'fui-BreadcrumbButton__icon',\n};\n\n/**\n * CSS variable names used internally for styling in the Breadcrumb.\n */\nconst breadcrumbCSSVars = {\n  breadcrumbIconSizeVar: '--fui-Breadcrumb--icon-size',\n  breadcrumbIconLineHeightVar: '--fui-Breadcrumb--icon-line-height',\n};\n\nconst useIconStyles = makeStyles({\n  base: {\n    fontSize: `var(${breadcrumbCSSVars.breadcrumbIconSizeVar})`,\n    height: `var(${breadcrumbCSSVars.breadcrumbIconSizeVar})`,\n    lineHeight: `var(${breadcrumbCSSVars.breadcrumbIconLineHeightVar})`,\n    width: `var(${breadcrumbCSSVars.breadcrumbIconSizeVar})`,\n    marginRight: tokens.spacingHorizontalXS,\n  },\n  small: {\n    [breadcrumbCSSVars.breadcrumbIconSizeVar]: '12px',\n    [breadcrumbCSSVars.breadcrumbIconLineHeightVar]: tokens.lineHeightBase200,\n  },\n  medium: {\n    [breadcrumbCSSVars.breadcrumbIconSizeVar]: '16px',\n    [breadcrumbCSSVars.breadcrumbIconLineHeightVar]: tokens.lineHeightBase400,\n  },\n  large: {\n    [breadcrumbCSSVars.breadcrumbIconSizeVar]: '20px',\n    [breadcrumbCSSVars.breadcrumbIconLineHeightVar]: tokens.lineHeightBase600,\n  },\n});\n\nconst defaultButtonStyles = {\n  backgroundColor: tokens.colorTransparentBackground,\n  color: tokens.colorNeutralForeground2,\n  cursor: 'auto',\n};\n\nconst currentIconStyles = {\n  ...defaultButtonStyles,\n  [`& .${buttonClassNames.icon}`]: {\n    color: 'unset',\n  },\n  [`& .${iconFilledClassName}`]: {\n    display: 'none',\n  },\n  [`& .${iconRegularClassName}`]: {\n    display: 'inline',\n  },\n};\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 'unset',\n    textWrap: 'nowrap',\n  },\n  small: {\n    height: '24px',\n    ...typographyStyles.caption1,\n    padding: tokens.spacingHorizontalSNudge,\n  },\n  medium: {\n    height: '32px',\n    ...typographyStyles.body1,\n    padding: tokens.spacingHorizontalSNudge,\n  },\n  large: {\n    height: '40px',\n    ...typographyStyles.body2,\n    padding: tokens.spacingHorizontalS,\n  },\n  current: {\n    ':hover': {\n      ...currentIconStyles,\n    },\n    ':hover:active': {\n      ...currentIconStyles,\n    },\n    ':disabled': {\n      ...currentIconStyles,\n    },\n  },\n  currentSmall: {\n    ...typographyStyles.caption1Strong,\n  },\n  currentMedium: {\n    ...typographyStyles.body1Strong,\n  },\n  currentLarge: {\n    ...typographyStyles.subtitle2,\n  },\n});\n\n/**\n * Apply styling to the BreadcrumbButton slots based on the state\n */\nexport const useBreadcrumbButtonStyles_unstable = (state: BreadcrumbButtonState): BreadcrumbButtonState => {\n  'use no memo';\n\n  const styles = useStyles();\n  const iconStyles = useIconStyles();\n\n  const currentSizeMap = {\n    small: styles.currentSmall,\n    medium: styles.currentMedium,\n    large: styles.currentLarge,\n  };\n  state.root.className = mergeClasses(\n    breadcrumbButtonClassNames.root,\n    styles[state.size],\n    styles.root,\n    state.current && currentSizeMap[state.size],\n    state.current && styles.current,\n    state.root.className,\n  );\n\n  if (state.icon) {\n    state.icon.className = mergeClasses(iconStyles.base, iconStyles[state.size], state.icon.className);\n  }\n\n  useButtonStyles_unstable(state);\n\n  return state;\n};\n"],"names":["makeStyles","mergeClasses","useButtonStyles_unstable","buttonClassNames","tokens","typographyStyles","iconFilledClassName","iconRegularClassName","breadcrumbButtonClassNames","root","icon","breadcrumbCSSVars","breadcrumbIconSizeVar","breadcrumbIconLineHeightVar","useIconStyles","base","fontSize","height","lineHeight","width","marginRight","spacingHorizontalXS","small","lineHeightBase200","medium","lineHeightBase400","large","lineHeightBase600","defaultButtonStyles","backgroundColor","colorTransparentBackground","color","colorNeutralForeground2","cursor","currentIconStyles","display","useStyles","minWidth","textWrap","caption1","padding","spacingHorizontalSNudge","body1","body2","spacingHorizontalS","current","currentSmall","caption1Strong","currentMedium","body1Strong","currentLarge","subtitle2","useBreadcrumbButtonStyles_unstable","state","styles","iconStyles","currentSizeMap","className","size"],"mappings":"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"}