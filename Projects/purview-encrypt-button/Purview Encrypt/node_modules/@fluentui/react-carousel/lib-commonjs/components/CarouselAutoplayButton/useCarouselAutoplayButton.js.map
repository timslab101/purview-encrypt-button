{"version":3,"sources":["../src/components/CarouselAutoplayButton/useCarouselAutoplayButton.tsx"],"sourcesContent":["'use client';\n\nimport type { ARIAButtonElement } from '@fluentui/react-aria';\nimport { useToggleButton_unstable } from '@fluentui/react-button';\nimport { PlayCircleRegular, PauseCircleRegular } from '@fluentui/react-icons';\nimport { mergeCallbacks, slot, useControllableState, useEventCallback } from '@fluentui/react-utilities';\nimport * as React from 'react';\n\nimport type { CarouselAutoplayButtonProps, CarouselAutoplayButtonState } from './CarouselAutoplayButton.types';\nimport { useCarouselContext_unstable as useCarouselContext } from '../CarouselContext';\n\n/**\n * Create the state required to render CarouselAutoplayButton.\n *\n * The returned state can be modified with hooks such as useCarouselAutoplayButtonStyles_unstable,\n * before being passed to renderCarouselAutoplayButton_unstable.\n *\n * @param props - props from this instance of CarouselAutoplayButton\n * @param ref - reference to root HTMLDivElement of CarouselAutoplayButton\n */\nexport const useCarouselAutoplayButton_unstable = (\n  props: CarouselAutoplayButtonProps,\n  ref: React.Ref<ARIAButtonElement>,\n): CarouselAutoplayButtonState => {\n  const { onCheckedChange, checked, defaultChecked } = props;\n\n  const [autoplay, setAutoplay] = useControllableState({\n    state: checked,\n    defaultState: defaultChecked,\n    initialState: false,\n  });\n  const enableAutoplay = useCarouselContext(ctx => ctx.enableAutoplay);\n\n  React.useEffect(() => {\n    // Initialize carousel autoplay based on button state\n    enableAutoplay(autoplay);\n\n    return () => {\n      // We uninitialize autoplay if the button gets unmounted.\n      enableAutoplay(false);\n    };\n  }, [autoplay, enableAutoplay]);\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement & HTMLAnchorElement>) => {\n    if (event.isDefaultPrevented()) {\n      return;\n    }\n\n    const newValue = !autoplay;\n\n    setAutoplay(newValue);\n    onCheckedChange?.(event, { event, type: 'click', checked: newValue });\n  };\n\n  return {\n    // We lean on react-button class to handle styling and icon enhancements\n    ...useToggleButton_unstable(\n      {\n        icon: slot.optional(props.icon, {\n          defaultProps: {\n            children: autoplay ? <PauseCircleRegular /> : <PlayCircleRegular />,\n          },\n          renderByDefault: true,\n          elementType: 'span',\n        }),\n        ...props,\n        checked: autoplay,\n        onClick: useEventCallback(mergeCallbacks(handleClick, props.onClick)),\n      },\n      ref as React.Ref<HTMLButtonElement>,\n    ),\n  };\n};\n"],"names":["useToggleButton_unstable","PlayCircleRegular","PauseCircleRegular","mergeCallbacks","slot","useControllableState","useEventCallback","React","useCarouselContext_unstable","useCarouselContext","useCarouselAutoplayButton_unstable","props","ref","onCheckedChange","checked","defaultChecked","autoplay","setAutoplay","state","defaultState","initialState","enableAutoplay","ctx","useEffect","handleClick","event","isDefaultPrevented","newValue","type","icon","optional","defaultProps","children","renderByDefault","elementType","onClick"],"mappings":"AAAA;;;;;+BAoBaU;;;;;;;6BAjB4B,yBAAyB;4BACZ,wBAAwB;gCACD,4BAA4B;iEAClF,QAAQ;iCAGmC,qBAAqB;AAWhF,2CAA2C,CAChDC,OACAC;IAEA,MAAM,EAAEC,eAAe,EAAEC,OAAO,EAAEC,cAAc,EAAE,GAAGJ;IAErD,MAAM,CAACK,UAAUC,YAAY,GAAGZ,wCAAAA,EAAqB;QACnDa,OAAOJ;QACPK,cAAcJ;QACdK,cAAc;IAChB;IACA,MAAMC,qBAAiBZ,4CAAAA,EAAmBa,CAAAA,MAAOA,IAAID,cAAc;IAEnEd,OAAMgB,SAAS,CAAC;QACd,qDAAqD;QACrDF,eAAeL;QAEf,OAAO;YACL,yDAAyD;YACzDK,eAAe;QACjB;IACF,GAAG;QAACL;QAAUK;KAAe;IAE7B,MAAMG,cAAc,CAACC;QACnB,IAAIA,MAAMC,kBAAkB,IAAI;YAC9B;QACF;QAEA,MAAMC,WAAW,CAACX;QAElBC,YAAYU;QACZd,oBAAAA,QAAAA,oBAAAA,KAAAA,IAAAA,KAAAA,IAAAA,gBAAkBY,OAAO;YAAEA;YAAOG,MAAM;YAASd,SAASa;QAAS;IACrE;IAEA,OAAO;QACL,wEAAwE;QACxE,OAAG3B,qCAAAA,EACD;YACE6B,MAAMzB,oBAAAA,CAAK0B,QAAQ,CAACnB,MAAMkB,IAAI,EAAE;gBAC9BE,cAAc;oBACZC,UAAUhB,WAAAA,WAAAA,GAAW,OAAA,aAAA,CAACd,8BAAAA,EAAAA,QAAAA,WAAAA,GAAwB,OAAA,aAAA,CAACD,6BAAAA,EAAAA;gBACjD;gBACAgC,iBAAiB;gBACjBC,aAAa;YACf;YACA,GAAGvB,KAAK;YACRG,SAASE;YACTmB,aAAS7B,gCAAAA,MAAiBH,8BAAAA,EAAeqB,aAAab,MAAMwB,OAAO;QACrE,GACAvB,IACD;IACH;AACF,EAAE"}