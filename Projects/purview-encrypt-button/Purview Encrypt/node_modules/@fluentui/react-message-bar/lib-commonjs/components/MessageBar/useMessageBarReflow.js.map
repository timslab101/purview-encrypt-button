{"version":3,"sources":["../src/components/MessageBar/useMessageBarReflow.ts"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\nimport { isHTMLElement } from '@fluentui/react-utilities';\n\nexport function useMessageBarReflow(enabled: boolean = false): {\n  ref: React.RefCallback<HTMLElement>;\n  reflowing: boolean;\n} {\n  const { targetDocument } = useFluent();\n  const forceUpdate = React.useReducer(() => ({}), {})[1];\n  const reflowingRef = React.useRef(false);\n  // TODO: exclude types from this lint rule: https://github.com/microsoft/fluentui/issues/31286\n\n  const resizeObserverRef = React.useRef<ResizeObserver | null>(null);\n  const prevInlineSizeRef = React.useRef(-1);\n\n  const handleResize: ResizeObserverCallback = React.useCallback(\n    entries => {\n      // Resize observer is only owned by this component - one resize observer entry expected\n      // No need to support multiple fragments - one border box entry expected\n      if (process.env.NODE_ENV !== 'production' && entries.length > 1) {\n        // eslint-disable-next-line no-console\n        console.error(\n          [\n            'useMessageBarReflow: Resize observer should only have one entry. ',\n            'If multiple entries are observed, the first entry will be used.',\n            'This is a bug, please report it to the Fluent UI team.',\n          ].join(' '),\n        );\n      }\n\n      const entry = entries[0];\n      // `borderBoxSize` is not supported before Chrome 84, Firefox 92, nor Safari 15.4\n      const inlineSize = entry?.borderBoxSize?.[0]?.inlineSize ?? entry?.target.getBoundingClientRect().width;\n\n      if (inlineSize === undefined || !entry) {\n        return;\n      }\n\n      const { target } = entry;\n\n      if (!isHTMLElement(target)) {\n        return;\n      }\n\n      let nextReflowing: boolean | undefined;\n\n      // No easy way to really determine when the single line layout will fit\n      // Just keep try to set single line layout as long as the size is growing\n      // Will cause flickering when size is being adjusted gradually (i.e. drag) - but this should not be a common case\n      if (reflowingRef.current) {\n        if (prevInlineSizeRef.current < inlineSize) {\n          nextReflowing = false;\n        }\n      } else {\n        const scrollWidth = target.scrollWidth;\n        if (inlineSize < scrollWidth) {\n          nextReflowing = true;\n        }\n      }\n\n      prevInlineSizeRef.current = inlineSize;\n      if (typeof nextReflowing !== 'undefined' && reflowingRef.current !== nextReflowing) {\n        reflowingRef.current = nextReflowing;\n        forceUpdate();\n      }\n    },\n    [forceUpdate],\n  );\n\n  const ref = React.useCallback(\n    (el: HTMLElement | null) => {\n      if (!enabled || !el || !targetDocument?.defaultView) {\n        return;\n      }\n\n      resizeObserverRef.current?.disconnect();\n\n      const win = targetDocument.defaultView;\n      const resizeObserver = new win.ResizeObserver(handleResize);\n      resizeObserverRef.current = resizeObserver;\n      resizeObserver.observe(el, { box: 'border-box' });\n    },\n    [targetDocument, handleResize, enabled],\n  );\n\n  React.useEffect(() => {\n    return () => {\n      resizeObserverRef.current?.disconnect();\n    };\n  }, []);\n\n  return { ref, reflowing: reflowingRef.current };\n}\n"],"names":["React","useFluent_unstable","useFluent","isHTMLElement","useMessageBarReflow","enabled","targetDocument","forceUpdate","useReducer","reflowingRef","useRef","resizeObserverRef","prevInlineSizeRef","handleResize","useCallback","entries","entry","process","env","NODE_ENV","length","console","error","join","inlineSize","borderBoxSize","target","getBoundingClientRect","width","undefined","nextReflowing","current","scrollWidth","ref","el","defaultView","disconnect","win","resizeObserver","ResizeObserver","observe","box","useEffect","reflowing"],"mappings":"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"}