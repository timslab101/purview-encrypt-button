{"version":3,"sources":["../src/components/MessageBarActions/useMessageBarActionsStyles.styles.ts"],"sourcesContent":["'use client';\n\nimport { makeResetStyles, makeStyles, mergeClasses } from '@griffel/react';\nimport type { SlotClassNames } from '@fluentui/react-utilities';\nimport { tokens } from '@fluentui/react-theme';\nimport type { MessageBarActionsSlots, MessageBarActionsState } from './MessageBarActions.types';\n\nexport const messageBarActionsClassNames: SlotClassNames<MessageBarActionsSlots> = {\n  root: 'fui-MessageBarActions',\n  containerAction: 'fui-MessageBarActions__containerAction',\n};\n\n/**\n * Styles for the root slot\n */\nconst useRootBaseStyles = makeResetStyles({\n  gridArea: 'secondaryActions',\n  display: 'flex',\n  columnGap: tokens.spacingHorizontalM,\n  paddingRight: tokens.spacingHorizontalM,\n});\n\nconst useContainerActionBaseStyles = makeResetStyles({\n  gridArea: 'actions',\n  paddingRight: tokens.spacingHorizontalM,\n});\n\nconst useMultilineStyles = makeStyles({\n  root: {\n    justifyContent: 'end',\n    marginTop: tokens.spacingVerticalMNudge,\n    marginBottom: tokens.spacingVerticalS,\n    marginRight: '0px',\n    paddingRight: tokens.spacingVerticalM,\n  },\n\n  noActions: {\n    display: 'none',\n  },\n});\n\n/**\n * Apply styling to the MessageBarActions slots based on the state\n */\nexport const useMessageBarActionsStyles_unstable = (state: MessageBarActionsState): MessageBarActionsState => {\n  'use no memo';\n\n  const rootBaseStyles = useRootBaseStyles();\n  const containerActionBaseStyles = useContainerActionBaseStyles();\n  const multilineStyles = useMultilineStyles();\n  state.root.className = mergeClasses(\n    messageBarActionsClassNames.root,\n    rootBaseStyles,\n    state.layout === 'multiline' && multilineStyles.root,\n    !state.hasActions && multilineStyles.noActions,\n    state.root.className,\n  );\n\n  if (state.containerAction) {\n    state.containerAction.className = mergeClasses(\n      messageBarActionsClassNames.containerAction,\n      containerActionBaseStyles,\n      state.containerAction.className,\n    );\n  }\n\n  return state;\n};\n"],"names":["makeResetStyles","makeStyles","mergeClasses","tokens","messageBarActionsClassNames","root","containerAction","useRootBaseStyles","gridArea","display","columnGap","spacingHorizontalM","paddingRight","useContainerActionBaseStyles","useMultilineStyles","justifyContent","marginTop","spacingVerticalMNudge","marginBottom","spacingVerticalS","marginRight","spacingVerticalM","noActions","useMessageBarActionsStyles_unstable","state","rootBaseStyles","containerActionBaseStyles","multilineStyles","className","layout","hasActions"],"mappings":"AAAA;;;;;;;;;;;;IAOaI,2BAAAA;;;IAqCAmB,mCAAAA;;;;uBA1C6C,iBAAiB;4BAEpD,wBAAwB;AAGxC,oCAA4E;IACjFlB,MAAM;IACNC,iBAAiB;AACnB,EAAE;AAEF;;CAEC,GACD,MAAMC,wBAAoBP,sBAAAA,EAAgB;IACxCQ,UAAU;IACVC,SAAS;IACTC,WAAWP,kBAAAA,CAAOQ,kBAAkB;IACpCC,cAAcT,kBAAAA,CAAOQ,kBAAkB;AACzC;AAEA,MAAME,mCAA+Bb,sBAAAA,EAAgB;IACnDQ,UAAU;IACVI,cAAcT,kBAAAA,CAAOQ,kBAAkB;AACzC;AAEA,MAAMG,yBAAqBb,iBAAAA,EAAW;IACpCI,MAAM;QACJU,gBAAgB;QAChBC,WAAWb,kBAAAA,CAAOc,qBAAqB;QACvCC,cAAcf,kBAAAA,CAAOgB,gBAAgB;QACrCC,aAAa;QACbR,cAAcT,kBAAAA,CAAOkB,gBAAgB;IACvC;IAEAC,WAAW;QACTb,SAAS;IACX;AACF;AAKO,4CAA4C,CAACe;IAClD;IAEA,MAAMC,iBAAiBlB;IACvB,MAAMmB,4BAA4Bb;IAClC,MAAMc,kBAAkBb;IACxBU,MAAMnB,IAAI,CAACuB,SAAS,OAAG1B,mBAAAA,EACrBE,4BAA4BC,IAAI,EAChCoB,gBACAD,MAAMK,MAAM,KAAK,eAAeF,gBAAgBtB,IAAI,EACpD,CAACmB,MAAMM,UAAU,IAAIH,gBAAgBL,SAAS,EAC9CE,MAAMnB,IAAI,CAACuB,SAAS;IAGtB,IAAIJ,MAAMlB,eAAe,EAAE;QACzBkB,MAAMlB,eAAe,CAACsB,SAAS,OAAG1B,mBAAAA,EAChCE,4BAA4BE,eAAe,EAC3CoB,2BACAF,MAAMlB,eAAe,CAACsB,SAAS;IAEnC;IAEA,OAAOJ;AACT,EAAE"}