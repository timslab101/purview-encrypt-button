{"version":3,"sources":["useMessageBarActionsStyles.styles.js"],"sourcesContent":["'use client';\nimport { makeResetStyles, makeStyles, mergeClasses } from '@griffel/react';\nimport { tokens } from '@fluentui/react-theme';\nexport const messageBarActionsClassNames = {\n    root: 'fui-MessageBarActions',\n    containerAction: 'fui-MessageBarActions__containerAction'\n};\n/**\n * Styles for the root slot\n */ const useRootBaseStyles = makeResetStyles({\n    gridArea: 'secondaryActions',\n    display: 'flex',\n    columnGap: tokens.spacingHorizontalM,\n    paddingRight: tokens.spacingHorizontalM\n});\nconst useContainerActionBaseStyles = makeResetStyles({\n    gridArea: 'actions',\n    paddingRight: tokens.spacingHorizontalM\n});\nconst useMultilineStyles = makeStyles({\n    root: {\n        justifyContent: 'end',\n        marginTop: tokens.spacingVerticalMNudge,\n        marginBottom: tokens.spacingVerticalS,\n        marginRight: '0px',\n        paddingRight: tokens.spacingVerticalM\n    },\n    noActions: {\n        display: 'none'\n    }\n});\n/**\n * Apply styling to the MessageBarActions slots based on the state\n */ export const useMessageBarActionsStyles_unstable = (state)=>{\n    'use no memo';\n    const rootBaseStyles = useRootBaseStyles();\n    const containerActionBaseStyles = useContainerActionBaseStyles();\n    const multilineStyles = useMultilineStyles();\n    state.root.className = mergeClasses(messageBarActionsClassNames.root, rootBaseStyles, state.layout === 'multiline' && multilineStyles.root, !state.hasActions && multilineStyles.noActions, state.root.className);\n    if (state.containerAction) {\n        state.containerAction.className = mergeClasses(messageBarActionsClassNames.containerAction, containerActionBaseStyles, state.containerAction.className);\n    }\n    return state;\n};\n"],"names":["__resetStyles","__styles","mergeClasses","tokens","messageBarActionsClassNames","root","containerAction","useRootBaseStyles","useContainerActionBaseStyles","useMultilineStyles","Brf1p80","B6of3ja","jrapky","t21cq0","z189sj","noActions","mc9l5x","d","useMessageBarActionsStyles_unstable","state","rootBaseStyles","containerActionBaseStyles","multilineStyles","className","layout","hasActions"],"mappings":"AAAA,YAAY;;;;;;;;;;;;IAGCI,2BAA2B;;;uCA8BY;eAAnCc;;;uBAhCyC,gBAAgB;AAEnE,oCAAoC;IACvCb,IAAI,EAAE,uBAAuB;IAC7BC,eAAe,EAAE;AACrB,CAAC;AACD;;CAEA,GAAI,MAAMC,iBAAiB,GAAA,WAAA,OAAGP,oBAAA,EAAA,YAAA,YAAA;IAAA;IAAA;CAK7B,CAAC;AACF,MAAMQ,4BAA4B,GAAA,WAAA,OAAGR,oBAAA,EAAA,WAAA,YAAA;IAAA;IAAA;CAGpC,CAAC;AACF,MAAMS,kBAAkB,GAAA,WAAA,OAAGR,eAAA,EAAA;IAAAI,IAAA,EAAA;QAAAK,OAAA,EAAA;QAAAC,OAAA,EAAA;QAAAC,MAAA,EAAA;QAAAC,MAAA,EAAA;YAAA;YAAA;SAAA;QAAAC,MAAA,EAAA;YAAA;YAAA;SAAA;IAAA;IAAAC,SAAA,EAAA;QAAAC,MAAA,EAAA;IAAA;AAAA,GAAA;IAAAC,CAAA,EAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;KAAA;AAAA,CAW1B,CAAC;AAGS,6CAA6CE,KAAK,IAAG;IAC5D,aAAa;IACb,MAAMC,cAAc,GAAGb,iBAAiB,CAAC,CAAC;IAC1C,MAAMc,yBAAyB,GAAGb,4BAA4B,CAAC,CAAC;IAChE,MAAMc,eAAe,GAAGb,kBAAkB,CAAC,CAAC;IAC5CU,KAAK,CAACd,IAAI,CAACkB,SAAS,OAAGrB,mBAAY,EAACE,2BAA2B,CAACC,IAAI,EAAEe,cAAc,EAAED,KAAK,CAACK,MAAM,KAAK,WAAW,IAAIF,eAAe,CAACjB,IAAI,EAAE,CAACc,KAAK,CAACM,UAAU,IAAIH,eAAe,CAACP,SAAS,EAAEI,KAAK,CAACd,IAAI,CAACkB,SAAS,CAAC;IACjN,IAAIJ,KAAK,CAACb,eAAe,EAAE;QACvBa,KAAK,CAACb,eAAe,CAACiB,SAAS,OAAGrB,mBAAY,EAACE,2BAA2B,CAACE,eAAe,EAAEe,yBAAyB,EAAEF,KAAK,CAACb,eAAe,CAACiB,SAAS,CAAC;IAC3J;IACA,OAAOJ,KAAK;AAChB,CAAC"}