{"version":3,"sources":["useTagPickerOptionStyles.styles.js"],"sourcesContent":["'use client';\nimport { makeResetStyles, makeStyles, mergeClasses } from '@griffel/react';\nimport { useOptionStyles_unstable } from '@fluentui/react-combobox';\nimport { typographyStyles } from '@fluentui/react-theme';\nexport const tagPickerOptionClassNames = {\n    root: 'fui-TagPickerOption',\n    media: 'fui-TagPickerOption__media',\n    secondaryContent: 'fui-TagPickerOption__secondaryContent'\n};\nconst useRootBaseStyle = makeResetStyles({\n    display: 'flex',\n    alignItems: 'center'\n});\nconst useRootStyles = makeStyles({\n    secondaryContent: {\n        display: 'grid',\n        gridTemplateColumns: 'auto 1fr'\n    }\n});\nconst useSecondaryContentBaseStyle = makeResetStyles({\n    gridColumnStart: 2,\n    gridRowStart: 2,\n    ...typographyStyles.caption1\n});\nconst useMediaBaseStyle = makeResetStyles({\n    gridRowStart: 'span 2'\n});\n/**\n * Apply styling to the TagPickerOption slots based on the state\n */ export const useTagPickerOptionStyles_unstable = (state)=>{\n    'use no memo';\n    const rootBaseStyle = useRootBaseStyle();\n    const rootStyles = useRootStyles();\n    const secondaryContentBaseStyle = useSecondaryContentBaseStyle();\n    const mediaBaseStyle = useMediaBaseStyle();\n    state.root.className = mergeClasses(tagPickerOptionClassNames.root, rootBaseStyle, state.secondaryContent && rootStyles.secondaryContent, state.root.className);\n    useOptionStyles_unstable({\n        ...state,\n        active: false,\n        disabled: false,\n        focusVisible: false,\n        checkIcon: undefined,\n        selected: false\n    });\n    if (state.media) {\n        state.media.className = mergeClasses(tagPickerOptionClassNames.media, mediaBaseStyle, state.media.className);\n    }\n    if (state.secondaryContent) {\n        state.secondaryContent.className = mergeClasses(tagPickerOptionClassNames.secondaryContent, secondaryContentBaseStyle, state.secondaryContent.className);\n    }\n    return state;\n};\n"],"names":["__resetStyles","__styles","mergeClasses","useOptionStyles_unstable","typographyStyles","tagPickerOptionClassNames","root","media","secondaryContent","useRootBaseStyle","useRootStyles","mc9l5x","Budl1dq","d","useSecondaryContentBaseStyle","useMediaBaseStyle","useTagPickerOptionStyles_unstable","state","rootBaseStyle","rootStyles","secondaryContentBaseStyle","mediaBaseStyle","className","active","disabled","focusVisible","checkIcon","undefined","selected"],"mappings":"AAAA,YAAY;;;;;;;;;;;;IAICK,yBAAyB;;;qCAyBY;eAAjCW;;;uBA5ByC,gBAAgB;+BACjC,0BAA0B;AAE5D,kCAAkC;IACrCV,IAAI,EAAE,qBAAqB;IAC3BC,KAAK,EAAE,4BAA4B;IACnCC,gBAAgB,EAAE;AACtB,CAAC;AACD,MAAMC,gBAAgB,GAAA,WAAA,OAAGT,oBAAA,EAAA,WAAA,MAAA;IAAA;CAGxB,CAAC;AACF,MAAMU,aAAa,GAAA,WAAA,OAAGT,eAAA,EAAA;IAAAO,gBAAA,EAAA;QAAAG,MAAA,EAAA;QAAAC,OAAA,EAAA;IAAA;AAAA,GAAA;IAAAC,CAAA,EAAA;QAAA;QAAA;KAAA;AAAA,CAKrB,CAAC;AACF,MAAMC,4BAA4B,GAAA,WAAA,OAAGd,oBAAA,EAAA,YAAA,MAAA;IAAA;CAIpC,CAAC;AACF,MAAMe,iBAAiB,GAAA,WAAA,OAAGf,oBAAA,EAAA,WAAA,MAAA;IAAA;CAEzB,CAAC;AAGS,2CAA2CiB,KAAK,IAAG;IAC1D,aAAa;IACb,MAAMC,aAAa,GAAGT,gBAAgB,CAAC,CAAC;IACxC,MAAMU,UAAU,GAAGT,aAAa,CAAC,CAAC;IAClC,MAAMU,yBAAyB,GAAGN,4BAA4B,CAAC,CAAC;IAChE,MAAMO,cAAc,GAAGN,iBAAiB,CAAC,CAAC;IAC1CE,KAAK,CAACX,IAAI,CAACgB,SAAS,OAAGpB,mBAAY,EAACG,yBAAyB,CAACC,IAAI,EAAEY,aAAa,EAAED,KAAK,CAACT,gBAAgB,IAAIW,UAAU,CAACX,gBAAgB,EAAES,KAAK,CAACX,IAAI,CAACgB,SAAS,CAAC;QAC/JnB,uCAAwB,EAAC;QACrB,GAAGc,KAAK;QACRM,MAAM,EAAE,KAAK;QACbC,QAAQ,EAAE,KAAK;QACfC,YAAY,EAAE,KAAK;QACnBC,SAAS,EAAEC,SAAS;QACpBC,QAAQ,EAAE;IACd,CAAC,CAAC;IACF,IAAIX,KAAK,CAACV,KAAK,EAAE;QACbU,KAAK,CAACV,KAAK,CAACe,SAAS,GAAGpB,uBAAY,EAACG,yBAAyB,CAACE,KAAK,EAAEc,cAAc,EAAEJ,KAAK,CAACV,KAAK,CAACe,SAAS,CAAC;IAChH;IACA,IAAIL,KAAK,CAACT,gBAAgB,EAAE;QACxBS,KAAK,CAACT,gBAAgB,CAACc,SAAS,OAAGpB,mBAAY,EAACG,yBAAyB,CAACG,gBAAgB,EAAEY,yBAAyB,EAAEH,KAAK,CAACT,gBAAgB,CAACc,SAAS,CAAC;IAC5J;IACA,OAAOL,KAAK;AAChB,CAAC"}