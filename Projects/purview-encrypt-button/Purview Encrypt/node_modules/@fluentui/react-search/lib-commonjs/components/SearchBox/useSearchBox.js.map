{"version":3,"sources":["../src/components/SearchBox/useSearchBox.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport {\n  isResolvedShorthand,\n  mergeCallbacks,\n  slot,\n  useControllableState,\n  useEventCallback,\n  useMergedRefs,\n} from '@fluentui/react-utilities';\nimport { useInput_unstable } from '@fluentui/react-input';\nimport { DismissRegular, SearchRegular } from '@fluentui/react-icons';\nimport type { ExtractSlotProps } from '@fluentui/react-utilities';\nimport type { SearchBoxSlots, SearchBoxProps, SearchBoxState } from './SearchBox.types';\n\n/**\n * Create the state required to render SearchBox.\n *\n * The returned state can be modified with hooks such as useSearchBoxStyles_unstable,\n * before being passed to renderSearchBox_unstable.\n *\n * @param props - props from this instance of SearchBox\n * @param ref - reference to root HTMLElement of SearchBox\n */\nexport const useSearchBox_unstable = (props: SearchBoxProps, ref: React.Ref<HTMLInputElement>): SearchBoxState => {\n  const {\n    size = 'medium',\n    disabled = false,\n    root,\n    contentBefore,\n    dismiss,\n    contentAfter,\n    value,\n    defaultValue,\n    ...inputProps\n  } = props;\n\n  const searchBoxRootRef = React.useRef<HTMLDivElement>(null);\n  const searchBoxRef = React.useRef<HTMLInputElement>(null);\n\n  const [internalValue, setInternalValue] = useControllableState({\n    state: value,\n    defaultState: defaultValue,\n    initialState: '',\n  });\n\n  // Tracks the focus of the component for the contentAfter and dismiss button\n  const [focused, setFocused] = React.useState(false);\n\n  const onFocus = React.useCallback(() => {\n    setFocused(true);\n  }, [setFocused]);\n\n  const onBlur: React.FocusEventHandler<HTMLSpanElement> = React.useCallback(\n    ev => {\n      setFocused(!!searchBoxRootRef.current?.contains(ev.relatedTarget));\n    },\n    [setFocused],\n  );\n\n  const rootProps = slot.resolveShorthand(root);\n\n  const handleDismissClick = useEventCallback((event: React.MouseEvent<HTMLSpanElement>) => {\n    if (isResolvedShorthand(dismiss)) {\n      dismiss.onClick?.(event);\n    }\n    const newValue = '';\n    setInternalValue(newValue);\n    props.onChange?.(event, { value: newValue });\n\n    searchBoxRef.current?.focus();\n  });\n\n  const inputState = useInput_unstable(\n    {\n      type: 'search',\n      disabled,\n      size,\n      value: internalValue,\n      root: slot.always<ExtractSlotProps<SearchBoxSlots['root']>>(\n        {\n          ...rootProps,\n          ref: useMergedRefs(rootProps?.ref, searchBoxRootRef),\n          onFocus: mergeCallbacks(rootProps?.onFocus, onFocus),\n          onBlur: mergeCallbacks(rootProps?.onBlur, onBlur),\n        },\n        {\n          elementType: 'span',\n        },\n      ),\n      contentBefore: slot.optional(contentBefore, {\n        renderByDefault: true,\n        defaultProps: {\n          children: <SearchRegular />,\n        },\n        elementType: 'span',\n      }),\n      contentAfter: slot.optional(contentAfter, {\n        renderByDefault: true,\n        elementType: 'span',\n      }),\n      ...inputProps,\n      onChange: useEventCallback(ev => {\n        const newValue = ev.target.value;\n        props.onChange?.(ev, { value: newValue });\n        setInternalValue(newValue);\n      }),\n    },\n    useMergedRefs(searchBoxRef, ref),\n  );\n\n  const state: SearchBoxState = {\n    ...inputState,\n    components: {\n      // eslint-disable-next-line @typescript-eslint/no-deprecated\n      ...inputState.components,\n      dismiss: 'span',\n    },\n    dismiss: slot.optional(dismiss, {\n      defaultProps: {\n        children: <DismissRegular />,\n        role: 'button',\n        'aria-label': 'clear',\n        tabIndex: -1,\n      },\n      renderByDefault: true,\n      elementType: 'span',\n    }),\n    disabled,\n    focused,\n    size,\n  };\n\n  if (state.dismiss) {\n    state.dismiss.onClick = handleDismissClick;\n  }\n\n  return state;\n};\n"],"names":["React","isResolvedShorthand","mergeCallbacks","slot","useControllableState","useEventCallback","useMergedRefs","useInput_unstable","DismissRegular","SearchRegular","useSearchBox_unstable","props","ref","size","disabled","root","contentBefore","dismiss","contentAfter","value","defaultValue","inputProps","searchBoxRootRef","useRef","searchBoxRef","internalValue","setInternalValue","state","defaultState","initialState","focused","setFocused","useState","onFocus","useCallback","onBlur","ev","current","contains","relatedTarget","rootProps","resolveShorthand","handleDismissClick","event","onClick","newValue","onChange","focus","inputState","type","always","elementType","optional","renderByDefault","defaultProps","children","target","components","role","tabIndex"],"mappings":"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"}