'use client';
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    hamburgerClassNames: function() {
        return hamburgerClassNames;
    },
    useHamburgerStyles_unstable: function() {
        return useHamburgerStyles_unstable;
    }
});
const _react = require("@griffel/react");
const _reactbutton = require("@fluentui/react-button");
const _sharedNavStylesstyles = require("../sharedNavStyles.styles");
const hamburgerClassNames = {
    root: 'fui-Hamburger',
    icon: 'fui-Hamburger__icon'
};
/**
 * Styles for the root slot
 */ const useStyles = (0, _react.makeStyles)({
    root: {
        textDecorationLine: 'none',
        backgroundColor: _sharedNavStylesstyles.navItemTokens.backgroundColor,
        ..._react.shorthands.border('none'),
        ':hover': {
            backgroundColor: _sharedNavStylesstyles.navItemTokens.backgroundColorHover
        },
        ':active': {
            backgroundColor: _sharedNavStylesstyles.navItemTokens.backgroundColorPressed
        }
    }
});
const useHamburgerStyles_unstable = (state)=>{
    'use no memo';
    (0, _reactbutton.useButtonStyles_unstable)(state);
    const styles = useStyles();
    state.root.className = (0, _react.mergeClasses)(hamburgerClassNames.root, styles.root, state.root.className);
    if (state.icon) {
        state.icon.className = (0, _react.mergeClasses)(hamburgerClassNames.icon, state.icon.className);
    }
    return state;
};
