'use client';
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    NavProvider: function() {
        return NavProvider;
    },
    useNavContext_unstable: function() {
        return useNavContext_unstable;
    }
});
const _interop_require_wildcard = require("@swc/helpers/_/_interop_require_wildcard");
const _react = /*#__PURE__*/ _interop_require_wildcard._(require("react"));
const navContextDefaultValue = {
    selectedValue: undefined,
    selectedCategoryValue: undefined,
    onRegister: ()=>{
    /* noop */ },
    onUnregister: ()=>{
    /* noop */ },
    onSelect: ()=>{
    /* noop */ },
    getRegisteredNavItems: ()=>{
        return {
            registeredNavItems: {}
        };
    },
    onRequestNavCategoryItemToggle () {
    /* noop */ },
    /**
   * The list of opened panels by index
   */ openCategories: [],
    /**
   * Indicates if Nav supports multiple open Categories at the same time.
   */ multiple: true,
    /**
   * Indicates the vertical density and density of the Nav.
   */ density: 'medium',
    /**
   * By default, the Nav is a single tab stop with only arrow key navigation
   */ tabbable: false
};
const NavContext = /*#__PURE__*/ _react.createContext(undefined);
const NavProvider = NavContext.Provider;
const useNavContext_unstable = ()=>_react.useContext(NavContext) || navContextDefaultValue;
