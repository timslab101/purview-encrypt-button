{"version":3,"sources":["../src/hooks/useSafeZoneArea/useSafeZoneArea.tsx"],"sourcesContent":["'use client';\n\nimport { useAnimationFrame, useEventCallback, useMergedRefs, useTimeout } from '@fluentui/react-utilities';\nimport type { JSXElement, RefObjectFunction } from '@fluentui/react-utilities';\nimport * as React from 'react';\n\nimport { createSafeZoneAreaStateStore } from './createSafeZoneAreaStateStore';\nimport { type SafeZoneAreaImperativeHandle, SafeZoneArea } from './SafeZoneArea';\n\nexport type UseSafeZoneOptions = {\n  /** Enables debug mode: makes drawn shapes visible. */\n  debug?: boolean;\n\n  /** Disables the safe zone area. */\n  disabled?: boolean;\n\n  /** The time in milliseconds to wait before clearing the safe zone. */\n  timeout?: number;\n\n  /** Called when the mouse enters the safe zone. */\n  onSafeZoneEnter?: (e: React.MouseEvent) => void;\n\n  /** Called when the mouse moves within the safe zone. */\n  onSafeZoneMove?: (e: React.MouseEvent) => void;\n\n  /** Called when the mouse leaves the safe zone. */\n  onSafeZoneLeave?: (e: React.MouseEvent) => void;\n\n  /** Called when the safe zone times out, even if a cursor is still over a safe zone. */\n  onSafeZoneTimeout?: () => void;\n};\n\n/**\n * Time in milliseconds after which the safe zone area will be cleared if no mouse movement is detected.\n *\n * Only affects the target element, not the safe zone area itself.\n */\nconst MOUSE_MOVE_TARGET_POLLING_TIMEOUT = 2000;\n\n// ---\n\nexport function useSafeZoneArea({\n  debug = false,\n  disabled = false,\n\n  onSafeZoneEnter,\n  onSafeZoneMove,\n  onSafeZoneLeave,\n  onSafeZoneTimeout,\n\n  timeout = 1500,\n}: UseSafeZoneOptions = {}): {\n  containerRef: RefObjectFunction<HTMLElement>;\n  targetRef: RefObjectFunction<HTMLElement>;\n  elementToRender: JSXElement | null;\n} {\n  const [stateStore] = React.useState(createSafeZoneAreaStateStore);\n\n  const safeZoneAreaRef = React.useRef<SafeZoneAreaImperativeHandle>(null);\n  const containerRef = React.useRef<HTMLElement>(null);\n  const targetRef = React.useRef<HTMLElement>(null);\n\n  const [setSafeZoneCloseTimeout, clearSafeZoneCloseTimeout] = useTimeout();\n  const [requestUpdateFrame, clearUpdateFrame] = useAnimationFrame();\n\n  const mouseCoordinatesRef = React.useRef<{ x: number; y: number }>({ x: 0, y: 0 });\n\n  const containerListenerRef = React.useMemo(() => {\n    if (disabled) {\n      return () => {\n        // do nothing\n      };\n    }\n\n    let containerEl: HTMLElement | null = null;\n\n    function onContainerMouseEnter() {\n      clearSafeZoneCloseTimeout();\n      stateStore.toggleActive(false);\n    }\n\n    return (el: HTMLElement | null) => {\n      if (el === null) {\n        containerEl?.removeEventListener('mouseenter', onContainerMouseEnter);\n      }\n\n      containerEl = el;\n      el?.addEventListener('mouseenter', onContainerMouseEnter);\n    };\n  }, [clearSafeZoneCloseTimeout, disabled, stateStore]);\n\n  const targetListenerRef = React.useMemo(() => {\n    if (disabled) {\n      return () => {\n        // do nothing\n      };\n    }\n\n    let targetEl: HTMLElement | null = null;\n\n    function onTargetMouseMove(e: MouseEvent) {\n      mouseCoordinatesRef.current = { x: e.clientX, y: e.clientY };\n\n      if (!stateStore.isActive()) {\n        stateStore.toggleActive(true);\n      }\n\n      setSafeZoneCloseTimeout(() => {\n        stateStore.toggleActive(false);\n      }, MOUSE_MOVE_TARGET_POLLING_TIMEOUT);\n    }\n\n    return (el: HTMLElement | null) => {\n      if (el === null) {\n        clearUpdateFrame();\n        clearSafeZoneCloseTimeout();\n\n        targetEl?.removeEventListener('mousemove', onTargetMouseMove);\n      }\n\n      targetEl = el;\n      el?.addEventListener('mousemove', onTargetMouseMove);\n    };\n  }, [clearUpdateFrame, clearSafeZoneCloseTimeout, disabled, stateStore, setSafeZoneCloseTimeout]);\n\n  const onSvgMouseEnter = useEventCallback((e: React.MouseEvent) => {\n    onSafeZoneEnter?.(e);\n\n    setSafeZoneCloseTimeout(() => {\n      stateStore.toggleActive(false);\n      onSafeZoneTimeout?.();\n    }, timeout);\n  });\n\n  const onSvgMouseMove = useEventCallback((e: React.MouseEvent) => {\n    setSafeZoneCloseTimeout(() => {\n      stateStore.toggleActive(false);\n      onSafeZoneTimeout?.();\n    }, timeout);\n    onSafeZoneMove?.(e);\n  });\n\n  const onSvgMouseLeave = useEventCallback((e: React.MouseEvent) => {\n    onSafeZoneLeave?.(e);\n  });\n\n  React.useEffect(() => {\n    return stateStore.subscribe(isActive => {\n      if (isActive) {\n        function updateSVGs() {\n          const containerEl = containerRef.current;\n          const targetEl = targetRef.current;\n\n          if (containerEl && targetEl) {\n            safeZoneAreaRef.current?.updateSVG({\n              containerRect: containerEl.getBoundingClientRect(),\n              mouseCoordinates: [mouseCoordinatesRef.current.x, mouseCoordinatesRef.current.y],\n              targetRect: targetEl.getBoundingClientRect(),\n            });\n          }\n\n          requestUpdateFrame(updateSVGs);\n        }\n\n        updateSVGs();\n        return;\n      }\n\n      clearUpdateFrame();\n    });\n  }, [clearUpdateFrame, requestUpdateFrame, stateStore]);\n\n  return {\n    containerRef: useMergedRefs(containerRef, containerListenerRef),\n    targetRef: useMergedRefs(targetRef, targetListenerRef),\n\n    elementToRender: React.useMemo(\n      () =>\n        disabled ? null : (\n          <SafeZoneArea\n            debug={debug}\n            onMouseEnter={onSvgMouseEnter}\n            onMouseMove={onSvgMouseMove}\n            onMouseLeave={onSvgMouseLeave}\n            imperativeRef={safeZoneAreaRef}\n            stateStore={stateStore}\n          />\n        ),\n      [disabled, debug, onSvgMouseEnter, onSvgMouseMove, onSvgMouseLeave, stateStore],\n    ),\n  };\n}\n"],"names":["useAnimationFrame","useEventCallback","useMergedRefs","useTimeout","React","createSafeZoneAreaStateStore","SafeZoneArea","MOUSE_MOVE_TARGET_POLLING_TIMEOUT","useSafeZoneArea","debug","disabled","onSafeZoneEnter","onSafeZoneMove","onSafeZoneLeave","onSafeZoneTimeout","timeout","stateStore","useState","safeZoneAreaRef","useRef","containerRef","targetRef","setSafeZoneCloseTimeout","clearSafeZoneCloseTimeout","requestUpdateFrame","clearUpdateFrame","mouseCoordinatesRef","x","y","containerListenerRef","useMemo","containerEl","onContainerMouseEnter","toggleActive","el","removeEventListener","addEventListener","targetListenerRef","targetEl","onTargetMouseMove","e","current","clientX","clientY","isActive","onSvgMouseEnter","onSvgMouseMove","onSvgMouseLeave","useEffect","subscribe","updateSVGs","updateSVG","containerRect","getBoundingClientRect","mouseCoordinates","targetRect","elementToRender","onMouseEnter","onMouseMove","onMouseLeave","imperativeRef"],"mappings":"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"}