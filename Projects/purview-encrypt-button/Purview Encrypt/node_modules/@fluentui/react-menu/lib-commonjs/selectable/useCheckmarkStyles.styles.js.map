{"version":3,"sources":["useCheckmarkStyles.styles.js"],"sourcesContent":["'use client';\nimport { mergeClasses, makeStyles } from '@griffel/react';\nconst useStyles = makeStyles({\n    root: {\n        width: '16px',\n        height: '16px',\n        visibility: 'hidden',\n        flexShrink: 0\n    },\n    rootChecked: {\n        visibility: 'visible',\n        flexShrink: 0\n    }\n});\n/**\n * Applies styles to a checkmark slot for selectable menu items\n *\n * @param state - should contain a `checkmark` slot\n */ export const useCheckmarkStyles_unstable = (state)=>{\n    'use no memo';\n    const styles = useStyles();\n    if (state.checkmark) {\n        state.checkmark.className = mergeClasses(styles.root, state.checked && styles.rootChecked, state.checkmark.className);\n    }\n};\n"],"names":["mergeClasses","__styles","useStyles","root","a9b677","Bqenvij","Bcdw1i0","Bnnss6s","rootChecked","d","useCheckmarkStyles_unstable","state","styles","checkmark","className","checked"],"mappings":"AAAA,YAAY;;;;;+BAkBKU,2BAA2B;;;;;;uBAjBH,gBAAgB;AACzD,MAAMR,SAAS,GAAA,WAAA,OAAGD,eAAA,EAAA;IAAAE,IAAA,EAAA;QAAAC,MAAA,EAAA;QAAAC,OAAA,EAAA;QAAAC,OAAA,EAAA;QAAAC,OAAA,EAAA;IAAA;IAAAC,WAAA,EAAA;QAAAF,OAAA,EAAA;QAAAC,OAAA,EAAA;IAAA;AAAA,GAAA;IAAAE,CAAA,EAAA;QAAA;QAAA;QAAA;QAAA;QAAA;KAAA;AAAA,CAWjB,CAAC;AAKS,qCAAqCE,KAAK,IAAG;IACpD,aAAa;IACb,MAAMC,MAAM,GAAGV,SAAS,CAAC,CAAC;IAC1B,IAAIS,KAAK,CAACE,SAAS,EAAE;QACjBF,KAAK,CAACE,SAAS,CAACC,SAAS,OAAGd,mBAAY,EAACY,MAAM,CAACT,IAAI,EAAEQ,KAAK,CAACI,OAAO,IAAIH,MAAM,CAACJ,WAAW,EAAEG,KAAK,CAACE,SAAS,CAACC,SAAS,CAAC;IACzH;AACJ,CAAC"}