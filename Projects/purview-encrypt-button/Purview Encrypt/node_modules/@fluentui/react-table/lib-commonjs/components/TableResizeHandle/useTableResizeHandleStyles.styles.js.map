{"version":3,"sources":["useTableResizeHandleStyles.styles.js"],"sourcesContent":["'use client';\nimport { makeStyles, mergeClasses } from '@griffel/react';\nimport { tokens } from '@fluentui/react-theme';\nexport const tableResizeHandleClassNames = {\n    root: 'fui-TableResizeHandle'\n};\n/**\n * Styles for the root slot\n */ const useStyles = makeStyles({\n    root: {\n        position: 'absolute',\n        right: 0,\n        top: 0,\n        bottom: 0,\n        width: '16px',\n        margin: '0 -8px',\n        cursor: 'col-resize',\n        opacity: 0,\n        transitionProperty: 'opacity',\n        transitionDuration: '.2s',\n        zIndex: 1,\n        // If mouse users focus on the resize handle through a context menu, we want the handle\n        // to be visible because the mouse might not be hovering over the handle\n        ':focus': {\n            opacity: 1,\n            outlineStyle: 'none'\n        },\n        ':hover': {\n            opacity: 1\n        },\n        '::after': {\n            content: '\" \"',\n            display: 'block',\n            width: '1px',\n            position: 'absolute',\n            left: '50%',\n            top: 0,\n            bottom: 0,\n            backgroundColor: tokens.colorNeutralStroke1\n        }\n    }\n});\n/**\n * Apply styling to the TableResizeHandle slots based on the state\n */ export const useTableResizeHandleStyles_unstable = (state)=>{\n    'use no memo';\n    const styles = useStyles();\n    state.root.className = mergeClasses(tableResizeHandleClassNames.root, styles.root, state.root.className);\n    return state;\n};\n"],"names":["__styles","mergeClasses","tokens","tableResizeHandleClassNames","root","useStyles","qhf8xq","j35jbq","Bhzewxz","B5kzvoi","a9b677","jrapky","Frg6f3","t21cq0","B6of3ja","B74szlk","Bceei9c","abs64n","Bmy1vo4","B3o57yi","Bj3rh1h","B3cna0y","Brovlpu","B7zu5sd","Bsft5z2","ap17g6","a2br6o","E3zdtr","Eqx8gd","bn5sak","By385i5","Bjyk6c5","d","p","f","h","useTableResizeHandleStyles_unstable","state","styles","className"],"mappings":"AAAA,YAAY;;;;;;;;;;;;IAGCG,2BAA2B;;;uCAyCY;;;;uBA3CX,gBAAgB;AAElD,oCAAoC;IACvCC,IAAI,EAAE;AACV,CAAC;AACD;;CAEA,GAAI,MAAMC,SAAS,GAAA,WAAA,OAAGL,eAAA,EAAA;IAAAI,IAAA,EAAA;QAAAE,MAAA,EAAA;QAAAC,MAAA,EAAA;YAAA;YAAA;SAAA;QAAAC,OAAA,EAAA;QAAAC,OAAA,EAAA;QAAAC,MAAA,EAAA;QAAAC,MAAA,EAAA;QAAAC,MAAA,EAAA;QAAAC,MAAA,EAAA;QAAAC,OAAA,EAAA;QAAAC,OAAA,EAAA;QAAAC,OAAA,EAAA;QAAAC,MAAA,EAAA;QAAAC,OAAA,EAAA;QAAAC,OAAA,EAAA;QAAAC,OAAA,EAAA;QAAAC,OAAA,EAAA;QAAAC,OAAA,EAAA;QAAAC,OAAA,EAAA;QAAAC,OAAA,EAAA;QAAAC,MAAA,EAAA;QAAAC,MAAA,EAAA;QAAAC,MAAA,EAAA;QAAAC,MAAA,EAAA;YAAA;YAAA;SAAA;QAAAC,MAAA,EAAA;QAAAC,OAAA,EAAA;QAAAC,OAAA,EAAA;IAAA;AAAA,GAAA;IAAAC,CAAA,EAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;YAAA;YAAA;gBAAAC,CAAA,EAAA,CAAA;YAAA;SAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;KAAA;IAAAC,CAAA,EAAA;QAAA;QAAA;KAAA;IAAAC,CAAA,EAAA;QAAA;KAAA;AAAA,CAiCrB,CAAC;AAGS,MAAMC,uCAAuCC,KAAK,IAAG;IAC5D,aAAa;IACb,MAAMC,MAAM,GAAGjC,SAAS,CAAC,CAAC;IAC1BgC,KAAK,CAACjC,IAAI,CAACmC,SAAS,OAAGtC,mBAAY,EAACE,2BAA2B,CAACC,IAAI,EAAEkC,MAAM,CAAClC,IAAI,EAAEiC,KAAK,CAACjC,IAAI,CAACmC,SAAS,CAAC;IACxG,OAAOF,KAAK;AAChB,CAAC"}