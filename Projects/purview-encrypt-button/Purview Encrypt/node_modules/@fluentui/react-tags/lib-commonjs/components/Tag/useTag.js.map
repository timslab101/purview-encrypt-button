{"version":3,"sources":["../src/components/Tag/useTag.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { getIntrinsicElementProps, useEventCallback, useId, slot } from '@fluentui/react-utilities';\nimport { DismissRegular } from '@fluentui/react-icons';\nimport type { TagProps, TagState } from './Tag.types';\nimport { Delete, Backspace } from '@fluentui/keyboard-keys';\nimport { useTagGroupContext_unstable } from '../../contexts/tagGroupContext';\n\nconst tagAvatarSizeMap = {\n  medium: 28,\n  small: 20,\n  'extra-small': 16,\n} as const;\n\nconst tagAvatarShapeMap = {\n  rounded: 'square',\n  circular: 'circular',\n} as const;\n\n/**\n * Create the state required to render Tag.\n *\n * The returned state can be modified with hooks such as useTagStyles_unstable,\n * before being passed to renderTag_unstable.\n *\n * @param props - props from this instance of Tag\n * @param ref - reference to root HTMLSpanElement or HTMLButtonElement of Tag\n */\nexport const useTag_unstable = (props: TagProps, ref: React.Ref<HTMLSpanElement | HTMLButtonElement>): TagState => {\n  const {\n    handleTagDismiss,\n    size: contextSize,\n    disabled: contextDisabled,\n    appearance: contextAppearance,\n    dismissible: contextDismissible,\n    role: tagGroupRole,\n  } = useTagGroupContext_unstable();\n\n  const id = useId('fui-Tag', props.id);\n\n  const {\n    appearance = contextAppearance ?? 'filled',\n    disabled = false,\n    dismissible = contextDismissible ?? false,\n    selected,\n    shape = 'rounded',\n    size = contextSize,\n    value = id,\n  } = props;\n\n  const dismissOnClick = useEventCallback((ev: React.MouseEvent<HTMLButtonElement>) => {\n    props.onClick?.(ev);\n    if (!ev.defaultPrevented) {\n      handleTagDismiss?.(ev, { value });\n    }\n  });\n\n  const dismissOnKeyDown = useEventCallback((ev: React.KeyboardEvent<HTMLButtonElement>) => {\n    props?.onKeyDown?.(ev);\n    if (!ev.defaultPrevented && (ev.key === Delete || ev.key === Backspace)) {\n      handleTagDismiss?.(ev, { value });\n    }\n  });\n\n  const elementType = dismissible ? 'button' : 'span';\n  const selectedProp = tagGroupRole === 'listbox' ? 'aria-selected' : 'aria-pressed';\n  const selectable = typeof selected === 'boolean' || tagGroupRole === 'listbox';\n\n  return {\n    appearance,\n    avatarShape: tagAvatarShapeMap[shape],\n    avatarSize: tagAvatarSizeMap[size],\n    disabled: contextDisabled ? true : disabled,\n    dismissible,\n    selected: !!selected,\n    shape,\n    size,\n\n    components: {\n      root: elementType,\n      media: 'span',\n      icon: 'span',\n      primaryText: 'span',\n      secondaryText: 'span',\n      dismissIcon: 'span',\n    },\n\n    root: slot.always(\n      getIntrinsicElementProps(elementType, {\n        ref,\n        role: tagGroupRole === 'listbox' ? 'option' : undefined,\n        [selectedProp]: selectable ? selected : undefined,\n        ...props,\n        disabled: contextDisabled ? true : disabled,\n        id,\n        ...(dismissible && { onClick: dismissOnClick, onKeyDown: dismissOnKeyDown }),\n      }),\n      {\n        defaultProps: {\n          type: elementType === 'button' ? 'button' : undefined,\n        },\n        elementType,\n      },\n    ),\n\n    media: slot.optional(props.media, { elementType: 'span' }),\n    icon: slot.optional(props.icon, { elementType: 'span' }),\n    primaryText: slot.optional(props.primaryText, {\n      renderByDefault: true,\n      defaultProps: {\n        children: props.children,\n      },\n      elementType: 'span',\n    }),\n    secondaryText: slot.optional(props.secondaryText, { elementType: 'span' }),\n    dismissIcon: slot.optional(props.dismissIcon, {\n      renderByDefault: dismissible,\n      defaultProps: {\n        children: <DismissRegular />,\n      },\n      elementType: 'span',\n    }),\n  };\n};\n"],"names":["React","getIntrinsicElementProps","useEventCallback","useId","slot","DismissRegular","Delete","Backspace","useTagGroupContext_unstable","tagAvatarSizeMap","medium","small","tagAvatarShapeMap","rounded","circular","useTag_unstable","props","ref","handleTagDismiss","size","contextSize","disabled","contextDisabled","appearance","contextAppearance","dismissible","contextDismissible","role","tagGroupRole","id","selected","shape","value","dismissOnClick","ev","onClick","defaultPrevented","dismissOnKeyDown","onKeyDown","key","elementType","selectedProp","selectable","avatarShape","avatarSize","components","root","media","icon","primaryText","secondaryText","dismissIcon","always","undefined","defaultProps","type","optional","renderByDefault","children"],"mappings":"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"}