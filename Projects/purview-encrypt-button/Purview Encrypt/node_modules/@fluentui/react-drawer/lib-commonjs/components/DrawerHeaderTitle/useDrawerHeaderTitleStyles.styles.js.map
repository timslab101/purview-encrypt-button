{"version":3,"sources":["useDrawerHeaderTitleStyles.styles.js"],"sourcesContent":["'use client';\nimport { makeStyles, mergeClasses } from '@griffel/react';\nimport { useDialogTitleStyles_unstable } from '@fluentui/react-dialog';\nimport { tokens } from '@fluentui/react-theme';\nexport const drawerHeaderTitleClassNames = {\n    root: 'fui-DrawerHeaderTitle',\n    heading: 'fui-DrawerHeaderTitle__heading',\n    action: 'fui-DrawerHeaderTitle__action'\n};\n/**\n * Styles for the root slot\n */ const useStyles = makeStyles({\n    root: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        columnGap: tokens.spacingHorizontalS\n    },\n    action: {\n        marginRight: `calc(${tokens.spacingHorizontalS} * -1)`\n    }\n});\n/**\n * Apply styling to the DrawerHeaderTitle slots based on the state\n */ export const useDrawerHeaderTitleStyles_unstable = (state)=>{\n    'use no memo';\n    const styles = useStyles();\n    const { heading: root = {}, action, // We should not use components to pass along the base element type of a slot\n    // but there's no way to retrieve the element type of a slot from the slot definition\n    // right now without using SLOT_ELEMENT_TYPE_SYMBOL\n    // TODO: create a method to retrieve the element type of a slot\n    // eslint-disable-next-line @typescript-eslint/no-deprecated\n    components } = state;\n    useDialogTitleStyles_unstable({\n        components: {\n            root: components.heading,\n            action: components.action\n        },\n        root,\n        action\n    });\n    state.root.className = mergeClasses(drawerHeaderTitleClassNames.root, styles.root, state.root.className);\n    if (state.heading) {\n        state.heading.className = mergeClasses(drawerHeaderTitleClassNames.heading, state.heading.className);\n    }\n    if (state.action) {\n        state.action.className = mergeClasses(drawerHeaderTitleClassNames.action, styles.action, state.action.className);\n    }\n    return state;\n};\n"],"names":["__styles","mergeClasses","useDialogTitleStyles_unstable","tokens","drawerHeaderTitleClassNames","root","heading","action","useStyles","mc9l5x","Brf1p80","Bt984gj","i8kkvl","t21cq0","d","useDrawerHeaderTitleStyles_unstable","state","styles","components","className"],"mappings":"AAAA,YAAY;;;;;;;;;;;;IAICI,2BAA2B;;;uCAoBY;eAAnCW;;;uBAvBwB,gBAAgB;6BACX,wBAAwB;AAE/D,oCAAoC;IACvCV,IAAI,EAAE,uBAAuB;IAC7BC,OAAO,EAAE,gCAAgC;IACzCC,MAAM,EAAE;AACZ,CAAC;AACD;;CAEA,GAAI,MAAMC,SAAS,GAAA,WAAA,OAAGR,eAAA,EAAA;IAAAK,IAAA,EAAA;QAAAI,MAAA,EAAA;QAAAC,OAAA,EAAA;QAAAC,OAAA,EAAA;QAAAC,MAAA,EAAA;IAAA;IAAAL,MAAA,EAAA;QAAAM,MAAA,EAAA;YAAA;YAAA;SAAA;IAAA;AAAA,GAAA;IAAAC,CAAA,EAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;KAAA;AAAA,CAUrB,CAAC;AAGS,6CAA6CE,KAAK,IAAG;IAC5D,aAAa;IACb,MAAMC,MAAM,GAAGT,SAAS,CAAC,CAAC;IAC1B,MAAM,EAAEF,OAAO,EAAED,IAAI,GAAG,CAAC,CAAC,EAAEE,MAAM,EAAE,6EAAA;IACpC,qFAAA;IACA,mDAAA;IACA,+DAAA;IACA,4DAAA;IACAW,UAAAA,EAAY,GAAGF,KAAK;QACpBd,0CAA6B,EAAC;QAC1BgB,UAAU,EAAE;YACRb,IAAI,EAAEa,UAAU,CAACZ,OAAO;YACxBC,MAAM,EAAEW,UAAU,CAACX,MAAAA;QACvB,CAAC;QACDF,IAAI;QACJE;IACJ,CAAC,CAAC;IACFS,KAAK,CAACX,IAAI,CAACc,SAAS,OAAGlB,mBAAY,EAACG,2BAA2B,CAACC,IAAI,EAAEY,MAAM,CAACZ,IAAI,EAAEW,KAAK,CAACX,IAAI,CAACc,SAAS,CAAC;IACxG,IAAIH,KAAK,CAACV,OAAO,EAAE;QACfU,KAAK,CAACV,OAAO,CAACa,SAAS,OAAGlB,mBAAY,EAACG,2BAA2B,CAACE,OAAO,EAAEU,KAAK,CAACV,OAAO,CAACa,SAAS,CAAC;IACxG;IACA,IAAIH,KAAK,CAACT,MAAM,EAAE;QACdS,KAAK,CAACT,MAAM,CAACY,SAAS,OAAGlB,mBAAY,EAACG,2BAA2B,CAACG,MAAM,EAAEU,MAAM,CAACV,MAAM,EAAES,KAAK,CAACT,MAAM,CAACY,SAAS,CAAC;IACpH;IACA,OAAOH,KAAK;AAChB,CAAC"}