{"version":3,"sources":["../src/components/TeachingPopoverBody/useTeachingPopoverBodyStyles.styles.ts"],"sourcesContent":["'use client';\n\nimport { makeStyles, mergeClasses } from '@griffel/react';\nimport type { TeachingPopoverBodySlots, TeachingPopoverBodyState } from './TeachingPopoverBody.types';\nimport type { SlotClassNames } from '@fluentui/react-utilities';\n\nexport const teachingPopoverBodyClassNames: SlotClassNames<TeachingPopoverBodySlots> = {\n  root: 'fui-TeachingPopoverBody',\n  media: 'fui-TeachingPopoverBody__media',\n};\n\nconst popoverBodyDimension = 288;\n\nexport const useMediaStyles = makeStyles({\n  base: {\n    gridArea: 'media',\n    overflow: 'hidden',\n    width: 'auto',\n    marginBottom: '12px',\n    verticalAlign: 'middle',\n    justifyContent: 'center',\n    display: 'flex',\n  },\n  short: {\n    aspectRatio: popoverBodyDimension / 117,\n    '@supports not (aspect-ratio)': {\n      height: '117px',\n    },\n  },\n  medium: {\n    aspectRatio: popoverBodyDimension / 176,\n    '@supports not (aspect-ratio)': {\n      height: '176px',\n    },\n  },\n  tall: {\n    aspectRatio: 1,\n    '@supports not (aspect-ratio)': {\n      height: `${popoverBodyDimension}px`,\n    },\n  },\n});\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    paddingBottom: '12px',\n  },\n});\n\n/** Applies style classnames to slots */\nexport const useTeachingPopoverBodyStyles_unstable = (state: TeachingPopoverBodyState): TeachingPopoverBodyState => {\n  'use no memo';\n\n  const { mediaLength } = state;\n  const styles = useStyles();\n  const mediaStyles = useMediaStyles();\n\n  state.root.className = mergeClasses(teachingPopoverBodyClassNames.root, styles.root, state.root.className);\n\n  if (state.media) {\n    state.media.className = mergeClasses(\n      teachingPopoverBodyClassNames.media,\n      mediaStyles.base,\n      mediaStyles[mediaLength],\n      state.media.className,\n    );\n  }\n\n  return state;\n};\n"],"names":["makeStyles","mergeClasses","teachingPopoverBodyClassNames","root","media","popoverBodyDimension","useMediaStyles","base","gridArea","overflow","width","marginBottom","verticalAlign","justifyContent","display","short","aspectRatio","height","medium","tall","useStyles","flexDirection","paddingBottom","useTeachingPopoverBodyStyles_unstable","state","mediaLength","styles","mediaStyles","className"],"mappings":"AAAA;;;;;;;;;;;;IAMaE,6BAAAA;;;kBAOAI;;;yCAuCAiB;eAAAA;;;uBAlD4B,iBAAiB;AAInD,sCAAgF;IACrFpB,MAAM;IACNC,OAAO;AACT,EAAE;AAEF,MAAMC,uBAAuB;AAEtB,MAAMC,iBAAiBN,qBAAAA,EAAW;IACvCO,MAAM;QACJC,UAAU;QACVC,UAAU;QACVC,OAAO;QACPC,cAAc;QACdC,eAAe;QACfC,gBAAgB;QAChBC,SAAS;IACX;IACAC,OAAO;QACLC,aAAaX,uBAAuB;QACpC,gCAAgC;YAC9BY,QAAQ;QACV;IACF;IACAC,QAAQ;QACNF,aAAaX,uBAAuB;QACpC,gCAAgC;YAC9BY,QAAQ;QACV;IACF;IACAE,MAAM;QACJH,aAAa;QACb,gCAAgC;YAC9BC,QAAQ,GAAGZ,qBAAqB,EAAE,CAAC;QACrC;IACF;AACF,GAAG;AAEH,MAAMe,gBAAYpB,iBAAAA,EAAW;IAC3BG,MAAM;QACJW,SAAS;QACTO,eAAe;QACfC,eAAe;IACjB;AACF;AAGO,8CAA8C,CAACE;IACpD;IAEA,MAAM,EAAEC,WAAW,EAAE,GAAGD;IACxB,MAAME,SAASN;IACf,MAAMO,cAAcrB;IAEpBkB,MAAMrB,IAAI,CAACyB,SAAS,OAAG3B,mBAAAA,EAAaC,8BAA8BC,IAAI,EAAEuB,OAAOvB,IAAI,EAAEqB,MAAMrB,IAAI,CAACyB,SAAS;IAEzG,IAAIJ,MAAMpB,KAAK,EAAE;QACfoB,MAAMpB,KAAK,CAACwB,SAAS,OAAG3B,mBAAAA,EACtBC,8BAA8BE,KAAK,EACnCuB,YAAYpB,IAAI,EAChBoB,WAAW,CAACF,YAAY,EACxBD,MAAMpB,KAAK,CAACwB,SAAS;IAEzB;IAEA,OAAOJ;AACT,EAAE"}