{"version":3,"sources":["../src/components/TeachingPopoverCarousel/Carousel/Carousel.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { isHTMLElement, useMergedRefs, useControllableState, useEventCallback } from '@fluentui/react-utilities';\nimport { useAnnounce, useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\n\nimport { CAROUSEL_ITEM } from './constants';\nimport { useCarouselWalker_unstable } from './useCarouselWalker';\nimport { createCarouselStore } from './createCarouselStore';\nimport type { CarouselStore, UseCarouselOptions } from './Carousel.types';\nimport { CarouselContextValue } from './CarouselContext';\n\n// TODO: Migrate this into an external @fluentui/carousel component\n// For now, we won't export this publicly, is only for internal TeachingPopover use until stabilized.\nexport function useCarousel_unstable(options: UseCarouselOptions): {\n  carouselRef: React.RefObject<HTMLDivElement | null>;\n  carousel: {\n    store: CarouselStore;\n    value: string | null;\n    selectPageByDirection: (\n      event: React.MouseEvent<HTMLButtonElement | HTMLAnchorElement>,\n      direction: 'next' | 'prev',\n    ) => void;\n    selectPageByValue: (event: React.MouseEvent<HTMLButtonElement | HTMLAnchorElement>, newValue: string) => void;\n  };\n} {\n  'use no memo';\n\n  const { announcement, onValueChange, onFinish } = options;\n\n  const { targetDocument } = useFluent();\n  const win = targetDocument?.defaultView;\n  const { ref: carouselRef, walker: carouselWalker } = useCarouselWalker_unstable();\n  const [store] = React.useState(() => createCarouselStore());\n\n  const [value, setValue] = useControllableState({\n    defaultState: options.defaultValue,\n    state: options.value,\n    initialState: null,\n  });\n  const rootRef = React.useRef<HTMLDivElement>(null);\n\n  const { announce } = useAnnounce();\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (value === null) {\n        // eslint-disable-next-line no-console\n        console.error(\n          'useCarousel: Carousel needs to have a `defaultValue` or `value` prop set. If you want to control the value, use the `value` prop.',\n        );\n      }\n    }, [value]);\n  }\n\n  React.useEffect(() => {\n    const allItems = rootRef.current?.querySelectorAll(`[${CAROUSEL_ITEM}]`)!;\n\n    for (let i = 0; i < allItems.length; i++) {\n      store.addValue(allItems.item(i).getAttribute(CAROUSEL_ITEM)!);\n    }\n\n    return () => {\n      store.clear();\n    };\n  }, [store]);\n\n  React.useEffect(() => {\n    if (!win) {\n      return;\n    }\n\n    const config: MutationObserverInit = {\n      attributes: true,\n      attributeFilter: [CAROUSEL_ITEM],\n      childList: true,\n      subtree: true,\n    };\n\n    // Callback function to execute when mutations are observed\n    const callback: MutationCallback = mutationList => {\n      for (const mutation of mutationList) {\n        for (const addedNode of Array.from(mutation.addedNodes)) {\n          if (isHTMLElement(addedNode) && addedNode.hasAttribute(CAROUSEL_ITEM)) {\n            const newValue = addedNode.getAttribute(CAROUSEL_ITEM)!;\n            const newNode = carouselWalker.find(newValue);\n            if (!newNode?.value) {\n              return;\n            }\n\n            const previousNode = carouselWalker.prevPage(newNode?.value);\n            store.insertValue(newValue, previousNode?.value ?? null);\n          }\n        }\n\n        for (const removedNode of Array.from(mutation.removedNodes)) {\n          if (isHTMLElement(removedNode) && removedNode?.hasAttribute(CAROUSEL_ITEM)) {\n            const removedValue = removedNode.getAttribute(CAROUSEL_ITEM)!;\n\n            store.removeValue(removedValue);\n          }\n        }\n      }\n    };\n\n    // Create an observer instance linked to the callback function\n    const observer = new win.MutationObserver(callback);\n\n    // Start observing the target node for configured mutations\n    observer.observe(rootRef.current!, config);\n\n    // Later, you can stop observing\n    return () => {\n      observer.disconnect();\n    };\n  }, [carouselWalker, store, win]);\n\n  const updateSlide = useEventCallback(\n    (event: React.MouseEvent<HTMLButtonElement | HTMLAnchorElement>, newValue: string) => {\n      setValue(newValue);\n      onValueChange?.(event, { event, type: 'click', value: newValue });\n\n      const announceText = announcement?.(newValue);\n      if (announceText) {\n        announce(announceText, { polite: true });\n      }\n    },\n  );\n\n  const selectPageByDirection: CarouselContextValue['selectPageByDirection'] = useEventCallback((event, direction) => {\n    const active = carouselWalker.active();\n\n    if (!active?.value) {\n      return;\n    }\n\n    const newPage =\n      direction === 'prev' ? carouselWalker.prevPage(active.value) : carouselWalker.nextPage(active.value);\n\n    if (newPage) {\n      updateSlide(event, newPage?.value);\n    } else {\n      onFinish?.(event, { event, type: 'click', value: active?.value });\n    }\n  });\n\n  return {\n    carouselRef: useMergedRefs(rootRef, carouselRef),\n    carousel: {\n      store,\n      value,\n      selectPageByDirection,\n      selectPageByValue: updateSlide,\n    },\n  };\n}\n"],"names":["React","isHTMLElement","useMergedRefs","useControllableState","useEventCallback","useAnnounce","useFluent_unstable","useFluent","CAROUSEL_ITEM","useCarouselWalker_unstable","createCarouselStore","useCarousel_unstable","options","announcement","onValueChange","onFinish","targetDocument","win","defaultView","ref","carouselRef","walker","carouselWalker","store","useState","value","setValue","defaultState","defaultValue","state","initialState","rootRef","useRef","announce","process","env","NODE_ENV","useEffect","console","error","allItems","current","querySelectorAll","i","length","addValue","item","getAttribute","clear","config","attributes","attributeFilter","childList","subtree","callback","mutationList","mutation","addedNode","Array","from","addedNodes","hasAttribute","newValue","newNode","find","previousNode","prevPage","insertValue","removedNode","removedNodes","removedValue","removeValue","observer","MutationObserver","observe","disconnect","updateSlide","event","type","announceText","polite","selectPageByDirection","direction","active","newPage","nextPage","carousel","selectPageByValue"],"mappings":"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"}