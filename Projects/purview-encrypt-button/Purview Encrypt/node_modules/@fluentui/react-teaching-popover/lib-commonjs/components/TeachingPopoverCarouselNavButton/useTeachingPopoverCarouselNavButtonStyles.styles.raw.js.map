{"version":3,"sources":["../src/components/TeachingPopoverCarouselNavButton/useTeachingPopoverCarouselNavButtonStyles.styles.ts"],"sourcesContent":["'use client';\n\nimport { makeStyles, mergeClasses, shorthands } from '@griffel/react';\nimport type { SlotClassNames } from '@fluentui/react-utilities';\nimport type {\n  TeachingPopoverCarouselNavButtonSlots,\n  TeachingPopoverCarouselNavButtonState,\n} from './TeachingPopoverCarouselNavButton.types';\nimport { tokens } from '@fluentui/react-theme';\nimport { createCustomFocusIndicatorStyle } from '@fluentui/react-tabster';\n\nexport const teachingPopoverCarouselNavButtonClassNames: SlotClassNames<TeachingPopoverCarouselNavButtonSlots> = {\n  root: 'fui-TeachingPopoverCarouselNavButton',\n};\n\n/**\n * Styles for the root slot\n */\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    cursor: 'pointer',\n    boxSizing: 'border-box',\n    height: '8px',\n    width: '8px',\n    backgroundColor: tokens.colorBrandBackground,\n  },\n  rootUnselected: {\n    border: 'none',\n    borderRadius: '50%',\n    padding: '0px',\n    outline: `${tokens.strokeWidthThin} solid transparent`, // For high contrast\n    ...createCustomFocusIndicatorStyle({\n      outline: `${tokens.strokeWidthThick} solid ${tokens.colorStrokeFocus2}`,\n      borderRadius: tokens.borderRadiusMedium,\n      ...shorthands.borderColor('transparent'),\n    }),\n    backgroundColor: `color-mix(in srgb, ${tokens.colorBrandBackground} 30%, transparent)`,\n    '@supports not (color: color-mix(in lch, white, black))': {\n      // This will also affect the focus border, but only in older unsupported browsers\n      opacity: 0.3,\n      backgroundColor: tokens.colorBrandBackground,\n    },\n  },\n  rootSelected: {\n    outline: `${tokens.strokeWidthThin} solid transparent`, // For high contrast\n    width: '16px',\n    border: 'none',\n    borderRadius: '4px',\n    padding: '0px',\n    ...createCustomFocusIndicatorStyle({\n      outline: `${tokens.strokeWidthThick} solid ${tokens.colorStrokeFocus2}`,\n      borderRadius: tokens.borderRadiusMedium,\n      ...shorthands.borderColor('transparent'),\n    }),\n    '@media (forced-colors: active)': {\n      backgroundColor: 'CanvasText',\n    },\n  },\n  rootBrand: {\n    backgroundColor: tokens.colorNeutralForegroundOnBrand,\n  },\n  rootBrandUnselected: {\n    backgroundColor: `color-mix(in srgb, ${tokens.colorNeutralForegroundOnBrand} 30%, transparent)`,\n    '@supports not (color: color-mix(in lch, white, black))': {\n      // This will also affect the focus border, but only in older unsupported browsers\n      opacity: 0.3,\n      backgroundColor: tokens.colorBrandBackground,\n    },\n  },\n});\n\n/**\n * Apply styling to the TeachingPopoverCarouselNavButton slots based on the state\n */\nexport const useTeachingPopoverCarouselNavButtonStyles_unstable = (\n  state: TeachingPopoverCarouselNavButtonState,\n): TeachingPopoverCarouselNavButtonState => {\n  'use no memo';\n\n  const styles = useStyles();\n  const { appearance, isSelected } = state;\n\n  const brandStyles = isSelected ? styles.rootBrand : styles.rootBrandUnselected;\n\n  state.root.className = mergeClasses(\n    teachingPopoverCarouselNavButtonClassNames.root,\n    styles.root,\n    isSelected ? styles.rootSelected : styles.rootUnselected,\n    appearance === 'brand' && brandStyles,\n    state.root.className,\n  );\n\n  return state;\n};\n"],"names":["makeStyles","mergeClasses","shorthands","tokens","createCustomFocusIndicatorStyle","teachingPopoverCarouselNavButtonClassNames","root","useStyles","display","cursor","boxSizing","height","width","backgroundColor","colorBrandBackground","rootUnselected","border","borderRadius","padding","outline","strokeWidthThin","strokeWidthThick","colorStrokeFocus2","borderRadiusMedium","borderColor","opacity","rootSelected","rootBrand","colorNeutralForegroundOnBrand","rootBrandUnselected","useTeachingPopoverCarouselNavButtonStyles_unstable","state","styles","appearance","isSelected","brandStyles","className"],"mappings":"AAAA;;;;;;;;;;;;IAWaK,0CAAAA;;;sDAgEAyB;eAAAA;;;uBAzEwC,iBAAiB;4BAM/C,wBAAwB;8BACC,0BAA0B;AAEnE,mDAA0G;IAC/GxB,MAAM;AACR,EAAE;AAEF;;CAEC,GACD,MAAMC,gBAAYP,iBAAAA,EAAW;IAC3BM,MAAM;QACJE,SAAS;QACTC,QAAQ;QACRC,WAAW;QACXC,QAAQ;QACRC,OAAO;QACPC,iBAAiBV,kBAAAA,CAAOW,oBAAoB;IAC9C;IACAC,gBAAgB;QACdC,QAAQ;QACRC,cAAc;QACdC,SAAS;QACTC,SAAS,GAAGhB,kBAAAA,CAAOiB,eAAe,CAAC,kBAAkB,CAAC;QACtD,OAAGhB,6CAAAA,EAAgC;YACjCe,SAAS,GAAGhB,kBAAAA,CAAOkB,gBAAgB,CAAC,OAAO,EAAElB,kBAAAA,CAAOmB,iBAAiB,EAAE;YACvEL,cAAcd,kBAAAA,CAAOoB,kBAAkB;YACvC,GAAGrB,iBAAAA,CAAWsB,WAAW,CAAC,cAAc;QAC1C,EAAE;QACFX,iBAAiB,CAAC,mBAAmB,EAAEV,kBAAAA,CAAOW,oBAAoB,CAAC,kBAAkB,CAAC;QACtF,0DAA0D;YACxD,iFAAiF;YACjFW,SAAS;YACTZ,iBAAiBV,kBAAAA,CAAOW,oBAAoB;QAC9C;IACF;IACAY,cAAc;QACZP,SAAS,GAAGhB,kBAAAA,CAAOiB,eAAe,CAAC,kBAAkB,CAAC;QACtDR,OAAO;QACPI,QAAQ;QACRC,cAAc;QACdC,SAAS;QACT,OAAGd,6CAAAA,EAAgC;YACjCe,SAAS,GAAGhB,kBAAAA,CAAOkB,gBAAgB,CAAC,OAAO,EAAElB,kBAAAA,CAAOmB,iBAAiB,EAAE;YACvEL,cAAcd,kBAAAA,CAAOoB,kBAAkB;YACvC,GAAGrB,iBAAAA,CAAWsB,WAAW,CAAC,cAAc;QAC1C,EAAE;QACF,kCAAkC;YAChCX,iBAAiB;QACnB;IACF;IACAc,WAAW;QACTd,iBAAiBV,kBAAAA,CAAOyB,6BAA6B;IACvD;IACAC,qBAAqB;QACnBhB,iBAAiB,CAAC,mBAAmB,EAAEV,kBAAAA,CAAOyB,6BAA6B,CAAC,kBAAkB,CAAC;QAC/F,0DAA0D;YACxD,iFAAiF;YACjFH,SAAS;YACTZ,iBAAiBV,kBAAAA,CAAOW,oBAAoB;QAC9C;IACF;AACF;AAKO,2DAA2D,CAChEiB;IAEA;IAEA,MAAMC,SAASzB;IACf,MAAM,EAAE0B,UAAU,EAAEC,UAAU,EAAE,GAAGH;IAEnC,MAAMI,cAAcD,aAAaF,OAAOL,SAAS,GAAGK,OAAOH,mBAAmB;IAE9EE,MAAMzB,IAAI,CAAC8B,SAAS,OAAGnC,mBAAAA,EACrBI,2CAA2CC,IAAI,EAC/C0B,OAAO1B,IAAI,EACX4B,aAAaF,OAAON,YAAY,GAAGM,OAAOjB,cAAc,EACxDkB,eAAe,WAAWE,aAC1BJ,MAAMzB,IAAI,CAAC8B,SAAS;IAGtB,OAAOL;AACT,EAAE"}