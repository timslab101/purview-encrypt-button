'use client';
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    teachingPopoverCarouselFooterClassNames: function() {
        return teachingPopoverCarouselFooterClassNames;
    },
    useTeachingPopoverCarouselFooterStyles_unstable: function() {
        return useTeachingPopoverCarouselFooterStyles_unstable;
    }
});
const _react = require("@griffel/react");
const teachingPopoverCarouselFooterClassNames = {
    root: 'fui-TeachingPopoverCarouselFooter',
    previous: 'fui-TeachingPopoverCarouselFooter__previous',
    next: 'fui-TeachingPopoverCarouselFooter__next'
};
// Todo: Page change animation & styles
const useStyles = (0, _react.makeStyles)({
    root: {
        display: 'flex',
        flexDirection: 'row'
    },
    rootCentered: {
        justifyContent: 'space-between',
        gap: '8px'
    },
    rootRightAligned: {
        gap: '8px',
        '& :first-child': {
            marginInlineEnd: 'auto'
        }
    }
});
const useTeachingPopoverCarouselFooterStyles_unstable = (state)=>{
    'use no memo';
    const styles = useStyles();
    const { layout } = state;
    state.root.className = (0, _react.mergeClasses)(teachingPopoverCarouselFooterClassNames.root, styles.root, layout === 'centered' ? styles.rootCentered : styles.rootRightAligned, state.root.className);
    if (state.previous) {
        state.previous.className = (0, _react.mergeClasses)(teachingPopoverCarouselFooterClassNames.previous, state.previous.className);
    }
    state.next.className = (0, _react.mergeClasses)(teachingPopoverCarouselFooterClassNames.next, state.next.className);
    return state;
};
