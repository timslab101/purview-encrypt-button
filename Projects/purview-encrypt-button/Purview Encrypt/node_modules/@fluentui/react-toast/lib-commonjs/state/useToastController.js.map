{"version":3,"sources":["../src/state/useToastController.ts"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\nimport {\n  dispatchToast as dispatchToastVanilla,\n  dismissToast as dismissToastVanilla,\n  dismissAllToasts as dismissAllToastsVanilla,\n  updateToast as updateToastVanilla,\n  playToast as playToastVanilla,\n  pauseToast as pauseToastVanilla,\n} from './vanilla';\nimport { DispatchToastOptions, ToastId, ToasterId, UpdateToastOptions } from './types';\n\nconst noop = () => undefined;\n\n/**\n * @param toasterId - If an id is provided all imperative methods control that specific toaster\n * @returns Imperative methods to control toasts\n */\nexport function useToastController(toasterId?: ToasterId): {\n  dispatchToast: (content: React.ReactNode, options?: DispatchToastOptions) => void;\n  dismissToast: (toastId: ToastId) => void;\n  dismissAllToasts: () => void;\n  updateToast: (options: UpdateToastOptions) => void;\n  pauseToast: (toastId: ToastId) => void;\n  playToast: (toastId: ToastId) => void;\n} {\n  const { targetDocument } = useFluent();\n\n  return React.useMemo(() => {\n    if (!targetDocument) {\n      return {\n        dispatchToast: noop,\n        dismissToast: noop,\n        dismissAllToasts: noop,\n        updateToast: noop,\n        pauseToast: noop,\n        playToast: noop,\n      };\n    }\n\n    return {\n      dispatchToast: (content: React.ReactNode, options?: DispatchToastOptions) => {\n        dispatchToastVanilla(content, { ...options, toasterId, data: { root: options?.root } }, targetDocument);\n      },\n      dismissToast: (toastId: ToastId) => {\n        dismissToastVanilla(toastId, toasterId, targetDocument);\n      },\n      dismissAllToasts: () => {\n        dismissAllToastsVanilla(toasterId, targetDocument);\n      },\n      updateToast: (options: UpdateToastOptions) => {\n        updateToastVanilla({ ...options, data: { root: options.root }, toasterId }, targetDocument);\n      },\n      pauseToast: (toastId: ToastId) => {\n        pauseToastVanilla(toastId, toasterId, targetDocument);\n      },\n      playToast: (toastId: ToastId) => {\n        playToastVanilla(toastId, toasterId, targetDocument);\n      },\n    };\n  }, [targetDocument, toasterId]);\n}\n"],"names":["React","useFluent_unstable","useFluent","dispatchToast","dispatchToastVanilla","dismissToast","dismissToastVanilla","dismissAllToasts","dismissAllToastsVanilla","updateToast","updateToastVanilla","playToast","playToastVanilla","pauseToast","pauseToastVanilla","noop","undefined","useToastController","toasterId","targetDocument","useMemo","content","options","data","root","toastId"],"mappings":"AAAA;;;;;+BAoBgBiB;;;;;;;iEAlBO,QAAQ;qCACiB,kCAAkC;yBAQ3E,YAAY;AAGnB,MAAMF,OAAO,IAAMC;AAMZ,4BAA4BE,SAAqB;IAQtD,MAAM,EAAEC,cAAc,EAAE,OAAGjB,uCAAAA;IAE3B,OAAOF,OAAMoB,OAAO,CAAC;QACnB,IAAI,CAACD,gBAAgB;YACnB,OAAO;gBACLhB,eAAeY;gBACfV,cAAcU;gBACdR,kBAAkBQ;gBAClBN,aAAaM;gBACbF,YAAYE;gBACZJ,WAAWI;YACb;QACF;QAEA,OAAO;YACLZ,eAAe,CAACkB,SAA0BC;oBACxClB,sBAAAA,EAAqBiB,SAAS;oBAAE,GAAGC,OAAO;oBAAEJ;oBAAWK,MAAM;wBAAEC,IAAI,EAAEF,YAAAA,QAAAA,YAAAA,KAAAA,IAAAA,KAAAA,IAAAA,QAASE,IAAI;oBAAC;gBAAE,GAAGL;YAC1F;YACAd,cAAc,CAACoB;gBACbnB,yBAAAA,EAAoBmB,SAASP,WAAWC;YAC1C;YACAZ,kBAAkB;oBAChBC,yBAAAA,EAAwBU,WAAWC;YACrC;YACAV,aAAa,CAACa;oBACZZ,oBAAAA,EAAmB;oBAAE,GAAGY,OAAO;oBAAEC,MAAM;wBAAEC,MAAMF,QAAQE,IAAI;oBAAC;oBAAGN;gBAAU,GAAGC;YAC9E;YACAN,YAAY,CAACY;oBACXX,mBAAAA,EAAkBW,SAASP,WAAWC;YACxC;YACAR,WAAW,CAACc;oBACVb,kBAAAA,EAAiBa,SAASP,WAAWC;YACvC;QACF;IACF,GAAG;QAACA;QAAgBD;KAAU;AAChC"}