{"version":3,"file":"index.js","sources":["../src/Consts.ts","../src/Instance.ts","../src/Events.ts","../src/DOMAPI.ts","../src/Utils.ts","../src/AttributeHelpers.ts","../src/Root.ts","../src/Deloser.ts","../src/State/Subscribable.ts","../src/CrossOrigin.ts","../src/Focusable.ts","../src/Keys.ts","../src/State/FocusedElement.ts","../src/Groupper.ts","../src/State/KeyboardNavigation.ts","../src/Modalizer.ts","../src/Mover.ts","../src/MutationEvent.ts","../src/State/ObservedElement.ts","../src/Outline.ts","../src/Uncontrolled.ts","../src/Restorer.ts","../src/Shadowdomize/DOMFunctions.ts","../src/Shadowdomize/ShadowTreeWalker.ts","../src/Shadowdomize/ShadowMutationObserver.ts","../src/Shadowdomize/querySelector.ts","../src/Shadowdomize/index.ts","../src/Tabster.ts","../src/Types.ts","../src/EventsTypes.ts","../src/Deprecated.ts"],"sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport const TABSTER_ATTRIBUTE_NAME = \"data-tabster\" as const;\nexport const TABSTER_DUMMY_INPUT_ATTRIBUTE_NAME = \"data-tabster-dummy\" as const;\n\nexport const FOCUSABLE_SELECTOR = [\n    \"a[href]\",\n    \"button:not([disabled])\",\n    \"input:not([disabled])\",\n    \"select:not([disabled])\",\n    \"textarea:not([disabled])\",\n    \"*[tabindex]\",\n    \"*[contenteditable]\",\n    \"details > summary\",\n    \"audio[controls]\",\n    \"video[controls]\",\n].join(\", \");\n\nexport const AsyncFocusSources = {\n    EscapeGroupper: 1,\n    Restorer: 2,\n    Deloser: 3,\n} as const;\n\nexport const ObservedElementAccessibilities = {\n    Any: 0,\n    Accessible: 1,\n    Focusable: 2,\n} as const;\n\nexport const ObservedElementRequestStatuses = {\n    Waiting: 0,\n    Succeeded: 1,\n    Canceled: 2,\n    TimedOut: 3,\n} as const;\n\nexport const RestoreFocusOrders = {\n    History: 0,\n    DeloserDefault: 1,\n    RootDefault: 2,\n    DeloserFirst: 3,\n    RootFirst: 4,\n} as const;\n\nexport const DeloserStrategies = {\n    /**\n     * If the focus is lost, the focus will be restored automatically using all available focus history.\n     * This is the default strategy.\n     */\n    Auto: 0,\n    /**\n     * If the focus is lost from this Deloser instance, the focus will not be restored automatically.\n     * The application might listen to the event and restore the focus manually.\n     * But if it is lost from another Deloser instance, the history of this Deloser could be used finding\n     * the element to focus.\n     */\n    Manual: 1,\n} as const;\n\nexport const Visibilities = {\n    Invisible: 0,\n    PartiallyVisible: 1,\n    Visible: 2,\n} as const;\n\nexport const RestorerTypes = {\n    Source: 0,\n    Target: 1,\n} as const;\n\nexport const MoverDirections = {\n    Both: 0, // Default, both left/up keys move to the previous, right/down move to the next.\n    Vertical: 1, // Only up/down arrows move to the next/previous.\n    Horizontal: 2, // Only left/right arrows move to the next/previous.\n    Grid: 3, // Two-dimentional movement depending on the visual placement.\n    GridLinear: 4, // Two-dimentional movement depending on the visual placement. Allows linear movement.\n} as const;\n\nexport const MoverKeys = {\n    ArrowUp: 1,\n    ArrowDown: 2,\n    ArrowLeft: 3,\n    ArrowRight: 4,\n    PageUp: 5,\n    PageDown: 6,\n    Home: 7,\n    End: 8,\n} as const;\n\nexport const GroupperTabbabilities = {\n    Unlimited: 0,\n    Limited: 1, // The tabbability is limited to the container and explicit Enter is needed to go inside.\n    LimitedTrapFocus: 2, // The focus is limited as above, plus trapped when inside.\n} as const;\n\nexport const GroupperMoveFocusActions = {\n    Enter: 1,\n    Escape: 2,\n} as const;\n\nexport const SysDummyInputsPositions = {\n    Auto: 0, // Tabster will place dummy inputs depending on the container tag name and on the default behaviour.\n    Inside: 1, // Tabster will always place dummy inputs inside the container.\n    Outside: 2, // Tabster will always place dummy inputs outside of the container.\n} as const;\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport * as Types from \"./Types\";\nimport { TABSTER_ATTRIBUTE_NAME } from \"./Consts\";\n\nexport function getTabsterOnElement(\n    tabster: Types.TabsterCore,\n    element: HTMLElement\n): Types.TabsterOnElement | undefined {\n    return tabster.storageEntry(element)?.tabster;\n}\n\nexport function updateTabsterByAttribute(\n    tabster: Types.TabsterCore,\n    element: HTMLElement,\n    dispose?: boolean\n): void {\n    const newAttrValue =\n        dispose || tabster._noop\n            ? undefined\n            : element.getAttribute(TABSTER_ATTRIBUTE_NAME);\n\n    let entry = tabster.storageEntry(element);\n    let newAttr: Types.TabsterAttributeOnElement | undefined;\n\n    if (newAttrValue) {\n        if (newAttrValue !== entry?.attr?.string) {\n            try {\n                const newValue = JSON.parse(\n                    newAttrValue\n                ) as Types.TabsterAttributeProps;\n\n                if (typeof newValue !== \"object\") {\n                    throw new Error(\n                        `Value is not a JSON object, got '${newAttrValue}'.`\n                    );\n                }\n\n                newAttr = {\n                    string: newAttrValue,\n                    object: newValue,\n                };\n            } catch (e) {\n                if (__DEV__) {\n                    console.error(\n                        `data-tabster attribute error: ${e}`,\n                        element\n                    );\n                }\n            }\n        } else {\n            return;\n        }\n    } else if (!entry) {\n        return;\n    }\n\n    if (!entry) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        entry = tabster.storageEntry(element, true)!;\n    }\n\n    if (!entry.tabster) {\n        entry.tabster = {};\n    }\n\n    const tabsterOnElement = entry.tabster || {};\n    const oldTabsterProps = entry.attr?.object || {};\n    const newTabsterProps = newAttr?.object || {};\n\n    for (const key of Object.keys(\n        oldTabsterProps\n    ) as (keyof Types.TabsterAttributeProps)[]) {\n        if (!newTabsterProps[key]) {\n            if (key === \"root\") {\n                const root = tabsterOnElement[key];\n\n                if (root) {\n                    tabster.root.onRoot(root, true);\n                }\n            }\n\n            switch (key) {\n                case \"deloser\":\n                case \"root\":\n                case \"groupper\":\n                case \"modalizer\":\n                case \"restorer\":\n                case \"mover\":\n                    // eslint-disable-next-line no-case-declarations\n                    const part = tabsterOnElement[key];\n                    if (part) {\n                        part.dispose();\n                        delete tabsterOnElement[key];\n                    }\n                    break;\n\n                case \"observed\":\n                    delete tabsterOnElement[key];\n                    if (tabster.observedElement) {\n                        tabster.observedElement.onObservedElementUpdate(\n                            element\n                        );\n                    }\n                    break;\n\n                case \"focusable\":\n                case \"outline\":\n                case \"uncontrolled\":\n                case \"sys\":\n                    delete tabsterOnElement[key];\n                    break;\n            }\n        }\n    }\n\n    for (const key of Object.keys(\n        newTabsterProps\n    ) as (keyof Types.TabsterAttributeProps)[]) {\n        const sys = newTabsterProps.sys;\n\n        switch (key) {\n            case \"deloser\":\n                if (tabsterOnElement.deloser) {\n                    tabsterOnElement.deloser.setProps(\n                        newTabsterProps.deloser as Types.DeloserProps\n                    );\n                } else {\n                    if (tabster.deloser) {\n                        tabsterOnElement.deloser =\n                            tabster.deloser.createDeloser(\n                                element,\n                                newTabsterProps.deloser as Types.DeloserProps\n                            );\n                    } else if (__DEV__) {\n                        console.error(\n                            \"Deloser API used before initialization, please call `getDeloser()`\"\n                        );\n                    }\n                }\n                break;\n\n            case \"root\":\n                if (tabsterOnElement.root) {\n                    tabsterOnElement.root.setProps(\n                        newTabsterProps.root as Types.RootProps\n                    );\n                } else {\n                    tabsterOnElement.root = tabster.root.createRoot(\n                        element,\n                        newTabsterProps.root as Types.RootProps,\n                        sys\n                    );\n                }\n                tabster.root.onRoot(tabsterOnElement.root);\n                break;\n\n            case \"modalizer\":\n                if (tabsterOnElement.modalizer) {\n                    tabsterOnElement.modalizer.setProps(\n                        newTabsterProps.modalizer as Types.ModalizerProps\n                    );\n                } else {\n                    if (tabster.modalizer) {\n                        tabsterOnElement.modalizer =\n                            tabster.modalizer.createModalizer(\n                                element,\n                                newTabsterProps.modalizer as Types.ModalizerProps,\n                                sys\n                            );\n                    } else if (__DEV__) {\n                        console.error(\n                            \"Modalizer API used before initialization, please call `getModalizer()`\"\n                        );\n                    }\n                }\n                break;\n\n            case \"restorer\":\n                if (tabsterOnElement.restorer) {\n                    tabsterOnElement.restorer.setProps(\n                        newTabsterProps.restorer as Types.RestorerProps\n                    );\n                } else {\n                    if (tabster.restorer) {\n                        if (newTabsterProps.restorer) {\n                            tabsterOnElement.restorer =\n                                tabster.restorer.createRestorer(\n                                    element,\n                                    newTabsterProps.restorer\n                                );\n                        }\n                    } else if (__DEV__) {\n                        console.error(\n                            \"Restorer API used before initialization, please call `getRestorer()`\"\n                        );\n                    }\n                }\n\n                break;\n\n            case \"focusable\":\n                tabsterOnElement.focusable = newTabsterProps.focusable;\n                break;\n\n            case \"groupper\":\n                if (tabsterOnElement.groupper) {\n                    tabsterOnElement.groupper.setProps(\n                        newTabsterProps.groupper as Types.GroupperProps\n                    );\n                } else {\n                    if (tabster.groupper) {\n                        tabsterOnElement.groupper =\n                            tabster.groupper.createGroupper(\n                                element,\n                                newTabsterProps.groupper as Types.GroupperProps,\n                                sys\n                            );\n                    } else if (__DEV__) {\n                        console.error(\n                            \"Groupper API used before initialization, please call `getGroupper()`\"\n                        );\n                    }\n                }\n                break;\n\n            case \"mover\":\n                if (tabsterOnElement.mover) {\n                    tabsterOnElement.mover.setProps(\n                        newTabsterProps.mover as Types.MoverProps\n                    );\n                } else {\n                    if (tabster.mover) {\n                        tabsterOnElement.mover = tabster.mover.createMover(\n                            element,\n                            newTabsterProps.mover as Types.MoverProps,\n                            sys\n                        );\n                    } else if (__DEV__) {\n                        console.error(\n                            \"Mover API used before initialization, please call `getMover()`\"\n                        );\n                    }\n                }\n                break;\n\n            case \"observed\":\n                if (tabster.observedElement) {\n                    tabsterOnElement.observed = newTabsterProps.observed;\n                    tabster.observedElement.onObservedElementUpdate(element);\n                } else if (__DEV__) {\n                    console.error(\n                        \"ObservedElement API used before initialization, please call `getObservedElement()`\"\n                    );\n                }\n                break;\n\n            case \"uncontrolled\":\n                tabsterOnElement.uncontrolled = newTabsterProps.uncontrolled;\n                break;\n\n            case \"outline\":\n                if (tabster.outline) {\n                    tabsterOnElement.outline = newTabsterProps.outline;\n                } else if (__DEV__) {\n                    console.error(\n                        \"Outline API used before initialization, please call `getOutline()`\"\n                    );\n                }\n                break;\n\n            case \"sys\":\n                tabsterOnElement.sys = newTabsterProps.sys;\n                break;\n\n            default:\n                console.error(\n                    `Unknown key '${key}' in data-tabster attribute value.`\n                );\n        }\n    }\n\n    if (newAttr) {\n        entry.attr = newAttr;\n    } else {\n        if (Object.keys(tabsterOnElement).length === 0) {\n            delete entry.tabster;\n            delete entry.attr;\n        }\n        tabster.storageEntry(element, false);\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport * as Types from \"./Types\";\nimport * as EventsTypes from \"./EventsTypes\";\n\n/**\n * Events sent by Tabster.\n */\n\nexport const TabsterFocusInEventName = \"tabster:focusin\";\nexport const TabsterFocusOutEventName = \"tabster:focusout\";\n\n// Event is dispatched when Tabster wants to move focus as the result of\n// handling keyboard event. This allows to preventDefault() if you want to have\n// some custom logic.\nexport const TabsterMoveFocusEventName = \"tabster:movefocus\";\n\n/**\n * Events sent by Deloser.\n */\n\nexport const DeloserFocusLostEventName = \"tabster:deloser:focus-lost\";\n\n/**\n * Events to be sent to Deloser by the application.\n */\n\nexport const DeloserRestoreFocusEventName = \"tabster:deloser:restore-focus\";\n\n/**\n * Events sent by Modalizer.\n */\nexport const ModalizerActiveEventName = \"tabster:modalizer:active\";\nexport const ModalizerInactiveEventName = \"tabster:modalizer:inactive\";\nexport const ModalizerFocusInEventName = \"tabster:modalizer:focusin\";\nexport const ModalizerFocusOutEventName = \"tabster:modalizer:focusout\";\n\n/**\n * Events sent by Mover.\n */\nexport const MoverStateEventName = \"tabster:mover:state\";\n\n/**\n * Events to be sent to Mover by the application.\n */\n\n// Event that can be dispatched by the application to programmatically move\n// focus inside Mover.\nexport const MoverMoveFocusEventName = \"tabster:mover:movefocus\";\n// Event that can be dispatched by the application to forget or modify\n// memorized element in Mover with memorizeCurrent property.\nexport const MoverMemorizedElementEventName = \"tabster:mover:memorized-element\";\n\n/**\n * Events sent by Groupper.\n */\n\n/**\n * Events to be sent to Groupper by the application.\n */\n\n// Event that can be dispatched by the application to programmatically enter\n// or escape Groupper.\nexport const GroupperMoveFocusEventName = \"tabster:groupper:movefocus\";\n\n/**\n * Events sent by Restorer.\n */\n\nexport const RestorerRestoreFocusEventName = \"tabster:restorer:restore-focus\";\n\n/**\n * Events sent by Root.\n */\nexport const RootFocusEventName = \"tabster:root:focus\";\nexport const RootBlurEventName = \"tabster:root:blur\";\n\n// Node.js environments do not have CustomEvent and it is needed for the events to be\n// evaluated. It doesn't matter if it works or not in Node.js environment.\n// So, we just need to make sure that it doesn't throw undefined reference.\nconst CustomEvent_ =\n    typeof CustomEvent !== \"undefined\"\n        ? CustomEvent\n        : (function () {\n              /* no-op */\n          } as typeof CustomEvent);\n\nexport abstract class TabsterCustomEvent<D> extends CustomEvent_<D> {\n    /**\n     * @deprecated use `detail`.\n     */\n    details?: D;\n\n    constructor(type: string, detail?: D) {\n        super(type, {\n            bubbles: true,\n            cancelable: true,\n            composed: true,\n            detail,\n        });\n\n        this.details = detail;\n    }\n}\n\nexport class TabsterFocusInEvent extends TabsterCustomEvent<Types.FocusedElementDetail> {\n    constructor(detail: Types.FocusedElementDetail) {\n        super(TabsterFocusInEventName, detail);\n    }\n}\n\nexport class TabsterFocusOutEvent extends TabsterCustomEvent<Types.FocusedElementDetail> {\n    constructor(detail: Types.FocusedElementDetail) {\n        super(TabsterFocusOutEventName, detail);\n    }\n}\n\nexport class TabsterMoveFocusEvent extends TabsterCustomEvent<EventsTypes.TabsterMoveFocusEventDetail> {\n    constructor(detail: EventsTypes.TabsterMoveFocusEventDetail) {\n        super(TabsterMoveFocusEventName, detail);\n    }\n}\n\nexport class MoverStateEvent extends TabsterCustomEvent<Types.MoverElementState> {\n    constructor(detail: Types.MoverElementState) {\n        super(MoverStateEventName, detail);\n    }\n}\n\nexport class MoverMoveFocusEvent extends TabsterCustomEvent<EventsTypes.MoverMoveFocusEventDetail> {\n    constructor(detail: EventsTypes.MoverMoveFocusEventDetail) {\n        super(MoverMoveFocusEventName, detail);\n    }\n}\n\nexport class MoverMemorizedElementEvent extends TabsterCustomEvent<EventsTypes.MoverMemorizedElementEventDetail> {\n    constructor(detail: EventsTypes.MoverMemorizedElementEventDetail) {\n        super(MoverMemorizedElementEventName, detail);\n    }\n}\n\nexport class GroupperMoveFocusEvent extends TabsterCustomEvent<EventsTypes.GroupperMoveFocusEventDetail> {\n    constructor(detail: EventsTypes.GroupperMoveFocusEventDetail) {\n        super(GroupperMoveFocusEventName, detail);\n    }\n}\n\nexport class ModalizerActiveEvent extends TabsterCustomEvent<EventsTypes.ModalizerEventDetail> {\n    constructor(detail: EventsTypes.ModalizerEventDetail) {\n        super(ModalizerActiveEventName, detail);\n    }\n}\n\nexport class ModalizerInactiveEvent extends TabsterCustomEvent<EventsTypes.ModalizerEventDetail> {\n    constructor(detail: EventsTypes.ModalizerEventDetail) {\n        super(ModalizerInactiveEventName, detail);\n    }\n}\n\nexport class DeloserFocusLostEvent extends TabsterCustomEvent<Types.DeloserElementActions> {\n    constructor(detail: Types.DeloserElementActions) {\n        super(DeloserFocusLostEventName, detail);\n    }\n}\n\nexport class DeloserRestoreFocusEvent extends TabsterCustomEvent<undefined> {\n    constructor() {\n        super(DeloserRestoreFocusEventName);\n    }\n}\n\nexport class RestorerRestoreFocusEvent extends TabsterCustomEvent<undefined> {\n    constructor() {\n        super(RestorerRestoreFocusEventName);\n    }\n}\n\nexport class RootFocusEvent extends TabsterCustomEvent<EventsTypes.RootFocusEventDetail> {\n    constructor(detail: EventsTypes.RootFocusEventDetail) {\n        super(RootFocusEventName, detail);\n    }\n}\n\nexport class RootBlurEvent extends TabsterCustomEvent<EventsTypes.RootFocusEventDetail> {\n    constructor(detail: EventsTypes.RootFocusEventDetail) {\n        super(RootBlurEventName, detail);\n    }\n}\n\n// addEventListener() typings augmentation.\ndeclare global {\n    interface GlobalEventHandlersEventMap {\n        [TabsterFocusInEventName]: TabsterFocusInEvent;\n        [TabsterFocusOutEventName]: TabsterFocusOutEvent;\n        [TabsterMoveFocusEventName]: TabsterMoveFocusEvent;\n\n        [MoverStateEventName]: MoverStateEvent;\n        [MoverMoveFocusEventName]: MoverMoveFocusEvent;\n        [MoverMemorizedElementEventName]: MoverMemorizedElementEvent;\n\n        [GroupperMoveFocusEventName]: GroupperMoveFocusEvent;\n\n        [ModalizerActiveEventName]: ModalizerActiveEvent;\n        [ModalizerInactiveEventName]: ModalizerInactiveEvent;\n\n        [DeloserFocusLostEventName]: DeloserFocusLostEvent;\n        [DeloserRestoreFocusEventName]: DeloserRestoreFocusEvent;\n\n        [RestorerRestoreFocusEventName]: RestorerRestoreFocusEvent;\n\n        [RootFocusEventName]: RootFocusEvent;\n        [RootBlurEventName]: RootBlurEvent;\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { DOMAPI } from \"./Types\";\n\nconst _createMutationObserver = (callback: MutationCallback) =>\n    new MutationObserver(callback);\nconst _createTreeWalker = (\n    doc: Document,\n    root: Node,\n    whatToShow?: number,\n    filter?: NodeFilter | null\n) => doc.createTreeWalker(root, whatToShow, filter);\nconst _getParentNode = (node: Node | null | undefined) =>\n    node ? node.parentNode : null;\nconst _getParentElement = (element: HTMLElement) =>\n    element ? element.parentElement : null;\nconst _nodeContains = (\n    parent: Node | null | undefined,\n    child: Node | null | undefined\n) => !!(child && parent?.contains(child));\nconst _getActiveElement = (doc: Document) => doc.activeElement;\nconst _querySelector = (element: Element, selector: string) =>\n    element.querySelector(selector);\nconst _querySelectorAll = (element: ParentNode, selector: string) =>\n    Array.prototype.slice.call(element.querySelectorAll(selector), 0);\nconst _getElementById = (doc: Document, id: string): HTMLElement | null =>\n    doc.getElementById(id);\nconst _getFirstChild = (node: Node | null | undefined): ChildNode | null =>\n    node?.firstChild || null;\nconst _getLastChild = (node: Node | null | undefined): ChildNode | null =>\n    node?.lastChild || null;\nconst _getNextSibling = (node: Node | null | undefined): ChildNode | null =>\n    node?.nextSibling || null;\nconst _getPreviousSibling = (node: Node | null | undefined): ChildNode | null =>\n    node?.previousSibling || null;\nconst _getFirstElementChild = (\n    element: Element | null | undefined\n): Element | null => element?.firstElementChild || null;\nconst _getLastElementChild = (\n    element: Element | null | undefined\n): Element | null => element?.lastElementChild || null;\nconst _getNextElementSibling = (\n    element: Element | null | undefined\n): Element | null => element?.nextElementSibling || null;\nconst _getPreviousElementSibling = (\n    element: Element | null | undefined\n): Element | null => element?.previousElementSibling || null;\nconst _appendChild = (parent: Node, child: Node): Node =>\n    parent.appendChild(child);\nconst _insertBefore = (\n    parent: Node,\n    child: Node,\n    referenceChild: Node | null\n): Node => parent.insertBefore(child, referenceChild);\nconst _getSelection = (ref: Node): Selection | null =>\n    ref.ownerDocument?.getSelection() || null;\nconst _getElementsByName = (referenceElement: HTMLElement, name: string) =>\n    referenceElement.ownerDocument.getElementsByName(name);\n\nexport const dom: DOMAPI = {\n    createMutationObserver: _createMutationObserver,\n    createTreeWalker: _createTreeWalker,\n    getParentNode: _getParentNode,\n    getParentElement: _getParentElement,\n    nodeContains: _nodeContains,\n    getActiveElement: _getActiveElement,\n    querySelector: _querySelector,\n    querySelectorAll: _querySelectorAll,\n    getElementById: _getElementById,\n    getFirstChild: _getFirstChild,\n    getLastChild: _getLastChild,\n    getNextSibling: _getNextSibling,\n    getPreviousSibling: _getPreviousSibling,\n    getFirstElementChild: _getFirstElementChild,\n    getLastElementChild: _getLastElementChild,\n    getNextElementSibling: _getNextElementSibling,\n    getPreviousElementSibling: _getPreviousElementSibling,\n    appendChild: _appendChild,\n    insertBefore: _insertBefore,\n    getSelection: _getSelection,\n    getElementsByName: _getElementsByName,\n};\n\nexport function setDOMAPI(domapi: Partial<DOMAPI>) {\n    for (const key of Object.keys(domapi) as (keyof DOMAPI)[]) {\n        (dom[key] as (typeof domapi)[typeof key]) = domapi[key];\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { nativeFocus } from \"keyborg\";\n\nimport {\n    DummyInputObserver as DummyInputObserverInterface,\n    GetWindow,\n    RadioButtonGroup,\n    SysProps,\n    TabsterAttributeProps,\n    TabsterCore,\n    TabsterPart as TabsterPartInterface,\n    Visibility,\n    WeakHTMLElement as WeakHTMLElementInterface,\n} from \"./Types\";\nimport {\n    FOCUSABLE_SELECTOR,\n    SysDummyInputsPositions,\n    TABSTER_ATTRIBUTE_NAME,\n    TABSTER_DUMMY_INPUT_ATTRIBUTE_NAME,\n    Visibilities,\n} from \"./Consts\";\nimport { TabsterMoveFocusEvent } from \"./Events\";\nimport { dom } from \"./DOMAPI\";\n\ninterface HTMLElementWithBoundingRectCacheId extends HTMLElement {\n    __tabsterCacheId?: string;\n}\n\ninterface FocusedElementWithIgnoreFlag extends HTMLElement {\n    __shouldIgnoreFocus: boolean;\n}\n\nexport interface WindowWithUID extends Window {\n    __tabsterCrossOriginWindowUID?: string;\n}\n\nexport interface HTMLElementWithUID extends HTMLElement {\n    __tabsterElementUID?: string;\n}\n\ninterface HTMLElementWithDummyContainer extends HTMLElement {\n    __tabsterDummyContainer?: WeakHTMLElement;\n}\n\nexport interface TabsterDOMRect {\n    bottom: number;\n    left: number;\n    right: number;\n    top: number;\n}\n\nexport interface InstanceContext {\n    elementByUId: { [uid: string]: WeakHTMLElement<HTMLElementWithUID> };\n    basics: InternalBasics;\n    WeakRef?: WeakRefConstructor;\n    containerBoundingRectCache: {\n        [id: string]: {\n            rect: TabsterDOMRect;\n            element: HTMLElementWithBoundingRectCacheId;\n        };\n    };\n    lastContainerBoundingRectCacheId: number;\n    containerBoundingRectCacheTimer?: number;\n    fakeWeakRefs: TabsterWeakRef<unknown>[];\n    fakeWeakRefsTimer?: number;\n    fakeWeakRefsStarted: boolean;\n}\n\nlet _isBrokenIE11: boolean;\n\nconst _DOMRect =\n    typeof DOMRect !== \"undefined\"\n        ? DOMRect\n        : class {\n              readonly bottom: number;\n              readonly left: number;\n              readonly right: number;\n              readonly top: number;\n\n              constructor(\n                  x?: number,\n                  y?: number,\n                  width?: number,\n                  height?: number\n              ) {\n                  this.left = x || 0;\n                  this.top = y || 0;\n                  this.right = (x || 0) + (width || 0);\n                  this.bottom = (y || 0) + (height || 0);\n              }\n          };\n\nlet _uidCounter = 0;\n\ntry {\n    // IE11 only accepts `filter` argument as a function (not object with the `acceptNode`\n    // property as the docs define). Also `entityReferenceExpansion` argument is not\n    // optional. And it throws exception when the above arguments aren't there.\n    document.createTreeWalker(document, NodeFilter.SHOW_ELEMENT);\n    _isBrokenIE11 = false;\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n} catch (e) {\n    _isBrokenIE11 = true;\n}\n\nconst _updateDummyInputsTimeout = 100;\n\ninterface WindowWithUtilsConext extends Window {\n    __tabsterInstanceContext?: InstanceContext;\n    Promise: PromiseConstructor;\n    WeakRef: WeakRefConstructor;\n}\n\nexport function getInstanceContext(getWindow: GetWindow): InstanceContext {\n    const win = getWindow() as WindowWithUtilsConext;\n\n    let ctx = win.__tabsterInstanceContext;\n\n    if (!ctx) {\n        ctx = {\n            elementByUId: {},\n            basics: {\n                Promise: win.Promise || undefined,\n                WeakRef: win.WeakRef || undefined,\n            },\n            containerBoundingRectCache: {},\n            lastContainerBoundingRectCacheId: 0,\n            fakeWeakRefs: [],\n            fakeWeakRefsStarted: false,\n        };\n\n        win.__tabsterInstanceContext = ctx;\n    }\n\n    return ctx;\n}\n\nexport function disposeInstanceContext(win: Window): void {\n    const ctx = (win as WindowWithUtilsConext).__tabsterInstanceContext;\n\n    if (ctx) {\n        ctx.elementByUId = {};\n\n        delete ctx.WeakRef;\n\n        ctx.containerBoundingRectCache = {};\n\n        if (ctx.containerBoundingRectCacheTimer) {\n            win.clearTimeout(ctx.containerBoundingRectCacheTimer);\n        }\n\n        if (ctx.fakeWeakRefsTimer) {\n            win.clearTimeout(ctx.fakeWeakRefsTimer);\n        }\n\n        ctx.fakeWeakRefs = [];\n\n        delete (win as WindowWithUtilsConext).__tabsterInstanceContext;\n    }\n}\n\nexport function createWeakMap<K extends object, V>(win: Window): WeakMap<K, V> {\n    const ctx = (win as WindowWithUtilsConext).__tabsterInstanceContext;\n    return new (ctx?.basics.WeakMap || WeakMap)();\n}\n\nexport function hasSubFocusable(element: HTMLElement): boolean {\n    return !!element.querySelector(FOCUSABLE_SELECTOR);\n}\n\ninterface TabsterWeakRef<T> {\n    deref(): T | undefined;\n}\n\nclass FakeWeakRef<T extends HTMLElement = HTMLElement>\n    implements TabsterWeakRef<T>\n{\n    private _target: T | undefined;\n\n    constructor(target: T) {\n        this._target = target;\n    }\n\n    deref(): T | undefined {\n        return this._target;\n    }\n\n    static cleanup(fwr: FakeWeakRef, forceRemove?: boolean): boolean {\n        if (!fwr._target) {\n            return true;\n        }\n\n        if (\n            forceRemove ||\n            !documentContains(fwr._target.ownerDocument, fwr._target)\n        ) {\n            delete fwr._target;\n            return true;\n        }\n\n        return false;\n    }\n}\n\nexport class WeakHTMLElement<T extends HTMLElement = HTMLElement, D = undefined>\n    implements WeakHTMLElementInterface<D>\n{\n    private _ref: TabsterWeakRef<T> | undefined;\n    private _data: D | undefined;\n\n    constructor(getWindow: GetWindow, element: T, data?: D) {\n        const context = getInstanceContext(getWindow);\n\n        let ref: TabsterWeakRef<T>;\n        if (context.WeakRef) {\n            ref = new context.WeakRef(element);\n        } else {\n            ref = new FakeWeakRef(element);\n            context.fakeWeakRefs.push(ref);\n        }\n\n        this._ref = ref;\n        this._data = data;\n    }\n\n    get(): T | undefined {\n        const ref = this._ref;\n        let element: T | undefined;\n\n        if (ref) {\n            element = ref.deref();\n\n            if (!element) {\n                delete this._ref;\n            }\n        }\n\n        return element;\n    }\n\n    getData(): D | undefined {\n        return this._data;\n    }\n}\n\nexport function cleanupFakeWeakRefs(\n    getWindow: GetWindow,\n    forceRemove?: boolean\n): void {\n    const context = getInstanceContext(getWindow);\n    context.fakeWeakRefs = context.fakeWeakRefs.filter(\n        (e) => !FakeWeakRef.cleanup(e as FakeWeakRef, forceRemove)\n    );\n}\n\nexport function startFakeWeakRefsCleanup(getWindow: GetWindow): void {\n    const context = getInstanceContext(getWindow);\n\n    if (!context.fakeWeakRefsStarted) {\n        context.fakeWeakRefsStarted = true;\n        context.WeakRef = getWeakRef(context);\n    }\n\n    if (!context.fakeWeakRefsTimer) {\n        context.fakeWeakRefsTimer = getWindow().setTimeout(\n            () => {\n                context.fakeWeakRefsTimer = undefined;\n                cleanupFakeWeakRefs(getWindow);\n                startFakeWeakRefsCleanup(getWindow);\n            },\n            2 * 60 * 1000\n        ); // 2 minutes.\n    }\n}\n\nexport function stopFakeWeakRefsCleanupAndClearStorage(\n    getWindow: GetWindow\n): void {\n    const context = getInstanceContext(getWindow);\n\n    context.fakeWeakRefsStarted = false;\n\n    if (context.fakeWeakRefsTimer) {\n        getWindow().clearTimeout(context.fakeWeakRefsTimer);\n        context.fakeWeakRefsTimer = undefined;\n        context.fakeWeakRefs = [];\n    }\n}\n\nexport function createElementTreeWalker(\n    doc: Document,\n    root: Node,\n    acceptNode: (node: Node) => number\n): TreeWalker | undefined {\n    // IE11 will throw an exception when the TreeWalker root is not an Element.\n    if (root.nodeType !== Node.ELEMENT_NODE) {\n        return undefined;\n    }\n\n    // TypeScript isn't aware of IE11 behaving badly.\n    const filter = (_isBrokenIE11\n        ? acceptNode\n        : ({ acceptNode } as NodeFilter)) as unknown as NodeFilter;\n\n    return dom.createTreeWalker(\n        doc,\n        root,\n        NodeFilter.SHOW_ELEMENT,\n        filter,\n        // @ts-ignore: We still don't want to completely break IE11, so, entityReferenceExpansion argument is not optional.\n        false /* Last argument is not optional for IE11! */\n    );\n}\n\nexport function getBoundingRect(\n    getWindow: GetWindow,\n    element: HTMLElementWithBoundingRectCacheId\n): TabsterDOMRect {\n    let cacheId = element.__tabsterCacheId;\n    const context = getInstanceContext(getWindow);\n    const cached = cacheId\n        ? context.containerBoundingRectCache[cacheId]\n        : undefined;\n\n    if (cached) {\n        return cached.rect;\n    }\n\n    const scrollingElement =\n        element.ownerDocument && element.ownerDocument.documentElement;\n\n    if (!scrollingElement) {\n        return new _DOMRect();\n    }\n\n    // A bounding rect of the top-level element contains the whole page regardless of the\n    // scrollbar. So, we improvise a little and limiting the final result...\n    let left = 0;\n    let top = 0;\n    let right = scrollingElement.clientWidth;\n    let bottom = scrollingElement.clientHeight;\n\n    if (element !== scrollingElement) {\n        const r = element.getBoundingClientRect();\n        left = Math.max(left, r.left);\n        top = Math.max(top, r.top);\n        right = Math.min(right, r.right);\n        bottom = Math.min(bottom, r.bottom);\n    }\n\n    const rect = new _DOMRect(\n        left < right ? left : -1,\n        top < bottom ? top : -1,\n        left < right ? right - left : 0,\n        top < bottom ? bottom - top : 0\n    );\n\n    if (!cacheId) {\n        cacheId = \"r-\" + ++context.lastContainerBoundingRectCacheId;\n        element.__tabsterCacheId = cacheId;\n    }\n\n    context.containerBoundingRectCache[cacheId] = {\n        rect,\n        element,\n    };\n\n    if (!context.containerBoundingRectCacheTimer) {\n        context.containerBoundingRectCacheTimer = window.setTimeout(() => {\n            context.containerBoundingRectCacheTimer = undefined;\n\n            for (const cId of Object.keys(context.containerBoundingRectCache)) {\n                delete context.containerBoundingRectCache[cId].element\n                    .__tabsterCacheId;\n            }\n\n            context.containerBoundingRectCache = {};\n        }, 50);\n    }\n\n    return rect;\n}\n\nexport function isElementVerticallyVisibleInContainer(\n    getWindow: GetWindow,\n    element: HTMLElement,\n    tolerance: number\n): boolean {\n    const container = getScrollableContainer(element);\n    if (!container) {\n        return false;\n    }\n\n    const containerRect = getBoundingRect(getWindow, container);\n    const elementRect = element.getBoundingClientRect();\n    const intersectionTolerance = elementRect.height * (1 - tolerance);\n    const topIntersection = Math.max(0, containerRect.top - elementRect.top);\n    const bottomIntersection = Math.max(\n        0,\n        elementRect.bottom - containerRect.bottom\n    );\n    const totalIntersection = topIntersection + bottomIntersection;\n\n    return (\n        totalIntersection === 0 || totalIntersection <= intersectionTolerance\n    );\n}\n\nexport function isElementVisibleInContainer(\n    getWindow: GetWindow,\n    element: HTMLElement,\n    gap = 0\n): Visibility {\n    const container = getScrollableContainer(element);\n\n    if (container) {\n        const containerRect = getBoundingRect(getWindow, container);\n        const elementRect = element.getBoundingClientRect();\n\n        if (\n            elementRect.left > containerRect.right ||\n            elementRect.top > containerRect.bottom ||\n            elementRect.bottom < containerRect.top ||\n            elementRect.right < containerRect.left\n        ) {\n            return Visibilities.Invisible;\n        }\n\n        if (\n            elementRect.top + gap >= containerRect.top &&\n            elementRect.top <= containerRect.bottom &&\n            elementRect.bottom >= containerRect.top &&\n            elementRect.bottom - gap <= containerRect.bottom &&\n            elementRect.left + gap >= containerRect.left &&\n            elementRect.left <= containerRect.right &&\n            elementRect.right >= containerRect.left &&\n            elementRect.right - gap <= containerRect.right\n        ) {\n            return Visibilities.Visible;\n        }\n\n        return Visibilities.PartiallyVisible;\n    }\n\n    return Visibilities.Invisible;\n}\n\nexport function scrollIntoView(\n    getWindow: GetWindow,\n    element: HTMLElement,\n    alignToTop: boolean\n): void {\n    // Built-in DOM's scrollIntoView() is cool, but when we have nested containers,\n    // it scrolls all of them, not just the deepest one. So, trying to work it around.\n    const container = getScrollableContainer(element);\n\n    if (container) {\n        const containerRect = getBoundingRect(getWindow, container);\n        const elementRect = element.getBoundingClientRect();\n\n        if (alignToTop) {\n            container.scrollTop += elementRect.top - containerRect.top;\n        } else {\n            container.scrollTop += elementRect.bottom - containerRect.bottom;\n        }\n    }\n}\n\nexport function getScrollableContainer(\n    element: HTMLElement\n): HTMLElement | null {\n    const doc = element.ownerDocument;\n\n    if (doc) {\n        for (\n            let el: HTMLElement | null = dom.getParentElement(element);\n            el;\n            el = dom.getParentElement(el)\n        ) {\n            if (\n                el.scrollWidth > el.clientWidth ||\n                el.scrollHeight > el.clientHeight\n            ) {\n                return el;\n            }\n        }\n\n        return doc.documentElement;\n    }\n\n    return null;\n}\n\nexport function makeFocusIgnored(element: HTMLElement): void {\n    (element as FocusedElementWithIgnoreFlag).__shouldIgnoreFocus = true;\n}\n\nexport function shouldIgnoreFocus(element: HTMLElement): boolean {\n    return !!(element as FocusedElementWithIgnoreFlag).__shouldIgnoreFocus;\n}\n\nexport function getUId(wnd: Window & { msCrypto?: Crypto }): string {\n    const rnd = new Uint32Array(4);\n\n    if (wnd.crypto && wnd.crypto.getRandomValues) {\n        wnd.crypto.getRandomValues(rnd);\n    } else if (wnd.msCrypto && wnd.msCrypto.getRandomValues) {\n        wnd.msCrypto.getRandomValues(rnd);\n    } else {\n        for (let i = 0; i < rnd.length; i++) {\n            rnd[i] = 0xffffffff * Math.random();\n        }\n    }\n\n    const srnd: string[] = [];\n\n    for (let i = 0; i < rnd.length; i++) {\n        srnd.push(rnd[i].toString(36));\n    }\n\n    srnd.push(\"|\");\n    srnd.push((++_uidCounter).toString(36));\n    srnd.push(\"|\");\n    srnd.push(Date.now().toString(36));\n\n    return srnd.join(\"\");\n}\n\nexport function getElementUId(\n    getWindow: GetWindow,\n    element: HTMLElementWithUID\n): string {\n    const context = getInstanceContext(getWindow);\n    let uid = element.__tabsterElementUID;\n\n    if (!uid) {\n        uid = element.__tabsterElementUID = getUId(getWindow());\n    }\n\n    if (\n        !context.elementByUId[uid] &&\n        documentContains(element.ownerDocument, element)\n    ) {\n        context.elementByUId[uid] = new WeakHTMLElement(getWindow, element);\n    }\n\n    return uid;\n}\n\nexport function getElementByUId(\n    context: InstanceContext,\n    uid: string\n): WeakHTMLElement<HTMLElementWithUID, undefined> | undefined {\n    return context.elementByUId[uid];\n}\n\nexport function getWindowUId(win: WindowWithUID): string {\n    let uid = win.__tabsterCrossOriginWindowUID;\n\n    if (!uid) {\n        uid = win.__tabsterCrossOriginWindowUID = getUId(win);\n    }\n\n    return uid;\n}\n\nexport function clearElementCache(\n    getWindow: GetWindow,\n    parent?: HTMLElement\n): void {\n    const context = getInstanceContext(getWindow);\n\n    for (const key of Object.keys(context.elementByUId)) {\n        const wel = context.elementByUId[key];\n        const el = wel && wel.get();\n\n        if (el && parent) {\n            if (!dom.nodeContains(parent, el)) {\n                continue;\n            }\n        }\n\n        delete context.elementByUId[key];\n    }\n}\n\n// IE11 doesn't have document.contains()...\nexport function documentContains(\n    doc: HTMLDocument | null | undefined,\n    element: HTMLElement\n): boolean {\n    return dom.nodeContains(doc?.body, element);\n}\n\nexport function matchesSelector(\n    element: HTMLElement,\n    selector: string\n): boolean {\n    interface HTMLElementWithMatches extends HTMLElement {\n        matchesSelector?: typeof HTMLElement.prototype.matches;\n        msMatchesSelector?: typeof HTMLElement.prototype.matches;\n    }\n\n    const matches =\n        element.matches ||\n        (element as HTMLElementWithMatches).matchesSelector ||\n        (element as HTMLElementWithMatches).msMatchesSelector ||\n        element.webkitMatchesSelector;\n\n    return matches && matches.call(element, selector);\n}\n\nexport function getPromise(getWindow: GetWindow): PromiseConstructor {\n    const context = getInstanceContext(getWindow);\n    if (context.basics.Promise) {\n        return context.basics.Promise;\n    }\n\n    throw new Error(\"No Promise defined.\");\n}\n\nexport function getWeakRef(\n    context: InstanceContext\n): WeakRefConstructor | undefined {\n    return context.basics.WeakRef;\n}\n\ninterface InternalBasics {\n    Promise?: PromiseConstructor;\n    WeakRef?: WeakRefConstructor;\n    WeakMap?: WeakMapConstructor;\n}\n\nexport function setBasics(win: Window, basics: InternalBasics): void {\n    const context = getInstanceContext(() => win);\n\n    let key: keyof InternalBasics;\n\n    key = \"Promise\";\n    if (key in basics) {\n        context.basics[key] = basics[key];\n    }\n\n    key = \"WeakRef\";\n    if (key in basics) {\n        context.basics[key] = basics[key];\n    }\n\n    key = \"WeakMap\";\n    if (key in basics) {\n        context.basics[key] = basics[key];\n    }\n}\n\nlet _lastTabsterPartId = 0;\n\nexport abstract class TabsterPart<P, D = undefined>\n    implements TabsterPartInterface<P>\n{\n    protected _tabster: TabsterCore;\n    protected _element: WeakHTMLElement<HTMLElement, D>;\n    protected _props: P;\n\n    readonly id: string;\n\n    constructor(tabster: TabsterCore, element: HTMLElement, props: P) {\n        const getWindow = tabster.getWindow;\n        this._tabster = tabster;\n        this._element = new WeakHTMLElement(getWindow, element);\n        this._props = { ...props };\n        this.id = \"i\" + ++_lastTabsterPartId;\n    }\n\n    getElement(): HTMLElement | undefined {\n        return this._element.get();\n    }\n\n    getProps(): P {\n        return this._props;\n    }\n\n    setProps(props: P): void {\n        this._props = { ...props };\n    }\n}\n\nexport interface DummyInputProps {\n    /** The input is created to be used only once and autoremoved when focused. */\n    isPhantom?: boolean;\n    /** Whether the input is before or after the content it is guarding.  */\n    isFirst: boolean;\n}\n\nexport type DummyInputFocusCallback = (\n    dummyInput: DummyInput,\n    isBackward: boolean,\n    relatedTarget: HTMLElement | null\n) => void;\n\n/**\n * Dummy HTML elements that are used as focus sentinels for the DOM enclosed within them\n */\nexport class DummyInput {\n    private _isPhantom: DummyInputProps[\"isPhantom\"];\n    private _fixedTarget?: WeakHTMLElement;\n    private _disposeTimer: number | undefined;\n    private _clearDisposeTimeout: (() => void) | undefined;\n\n    input: HTMLElement | undefined;\n    useDefaultAction?: boolean;\n    isFirst: DummyInputProps[\"isFirst\"];\n    isOutside: boolean;\n    /** Called when the input is focused */\n    onFocusIn?: DummyInputFocusCallback;\n    /** Called when the input is blurred */\n    onFocusOut?: DummyInputFocusCallback;\n\n    constructor(\n        getWindow: GetWindow,\n        isOutside: boolean,\n        props: DummyInputProps,\n        element?: WeakHTMLElement,\n        fixedTarget?: WeakHTMLElement\n    ) {\n        const win = getWindow();\n        const input = win.document.createElement(\"i\");\n\n        input.tabIndex = 0;\n        input.setAttribute(\"role\", \"none\");\n\n        input.setAttribute(TABSTER_DUMMY_INPUT_ATTRIBUTE_NAME, \"\");\n        input.setAttribute(\"aria-hidden\", \"true\");\n\n        const style = input.style;\n        style.position = \"fixed\";\n        style.width = style.height = \"1px\";\n        style.opacity = \"0.001\";\n        style.zIndex = \"-1\";\n        style.setProperty(\"content-visibility\", \"hidden\");\n\n        makeFocusIgnored(input);\n\n        this.input = input;\n        this.isFirst = props.isFirst;\n        this.isOutside = isOutside;\n        this._isPhantom = props.isPhantom ?? false;\n        this._fixedTarget = fixedTarget;\n\n        input.addEventListener(\"focusin\", this._focusIn);\n        input.addEventListener(\"focusout\", this._focusOut);\n\n        (input as HTMLElementWithDummyContainer).__tabsterDummyContainer =\n            element;\n\n        if (this._isPhantom) {\n            this._disposeTimer = win.setTimeout(() => {\n                delete this._disposeTimer;\n                this.dispose();\n            }, 0);\n\n            this._clearDisposeTimeout = () => {\n                if (this._disposeTimer) {\n                    win.clearTimeout(this._disposeTimer);\n                    delete this._disposeTimer;\n                }\n\n                delete this._clearDisposeTimeout;\n            };\n        }\n    }\n\n    dispose(): void {\n        if (this._clearDisposeTimeout) {\n            this._clearDisposeTimeout();\n        }\n\n        const input = this.input;\n\n        if (!input) {\n            return;\n        }\n\n        delete this._fixedTarget;\n        delete this.onFocusIn;\n        delete this.onFocusOut;\n        delete this.input;\n\n        input.removeEventListener(\"focusin\", this._focusIn);\n        input.removeEventListener(\"focusout\", this._focusOut);\n\n        delete (input as HTMLElementWithDummyContainer).__tabsterDummyContainer;\n\n        dom.getParentNode(input)?.removeChild(input);\n    }\n\n    setTopLeft(top: number, left: number): void {\n        const style = this.input?.style;\n\n        if (style) {\n            style.top = `${top}px`;\n            style.left = `${left}px`;\n        }\n    }\n\n    private _isBackward(\n        isIn: boolean,\n        current: HTMLElement,\n        previous: HTMLElement | null\n    ): boolean {\n        return isIn && !previous\n            ? !this.isFirst\n            : !!(\n                  previous &&\n                  current.compareDocumentPosition(previous) &\n                      Node.DOCUMENT_POSITION_FOLLOWING\n              );\n    }\n\n    private _focusIn = (e: FocusEvent): void => {\n        if (this._fixedTarget) {\n            const target = this._fixedTarget.get();\n\n            if (target) {\n                nativeFocus(target);\n            }\n\n            return;\n        }\n\n        const input = this.input;\n\n        if (this.onFocusIn && input) {\n            const relatedTarget = e.relatedTarget as HTMLElement | null;\n\n            this.onFocusIn(\n                this,\n                this._isBackward(true, input, relatedTarget),\n                relatedTarget\n            );\n        }\n    };\n\n    private _focusOut = (e: FocusEvent): void => {\n        if (this._fixedTarget) {\n            return;\n        }\n\n        this.useDefaultAction = false;\n\n        const input = this.input;\n\n        if (this.onFocusOut && input) {\n            const relatedTarget = e.relatedTarget as HTMLElement | null;\n\n            this.onFocusOut(\n                this,\n                this._isBackward(false, input, relatedTarget),\n                relatedTarget\n            );\n        }\n    };\n}\n\ninterface HTMLElementWithDummyInputs extends HTMLElement {\n    __tabsterDummy?: DummyInputManagerCore;\n}\n\nexport const DummyInputManagerPriorities = {\n    Root: 1,\n    Modalizer: 2,\n    Mover: 3,\n    Groupper: 4,\n} as const;\n\nexport class DummyInputManager {\n    private _instance?: DummyInputManagerCore;\n    private _onFocusIn?: DummyInputFocusCallback;\n    private _onFocusOut?: DummyInputFocusCallback;\n    protected _element: WeakHTMLElement;\n\n    constructor(\n        tabster: TabsterCore,\n        element: WeakHTMLElement,\n        priority: number,\n        sys: SysProps | undefined,\n        outsideByDefault?: boolean,\n        callForDefaultAction?: boolean\n    ) {\n        this._element = element;\n\n        this._instance = new DummyInputManagerCore(\n            tabster,\n            element,\n            this,\n            priority,\n            sys,\n            outsideByDefault,\n            callForDefaultAction\n        );\n    }\n\n    protected _setHandlers(\n        onFocusIn?: DummyInputFocusCallback,\n        onFocusOut?: DummyInputFocusCallback\n    ): void {\n        this._onFocusIn = onFocusIn;\n        this._onFocusOut = onFocusOut;\n    }\n\n    moveOut(backwards: boolean): void {\n        this._instance?.moveOut(backwards);\n    }\n\n    moveOutWithDefaultAction(\n        backwards: boolean,\n        relatedEvent: KeyboardEvent\n    ): void {\n        this._instance?.moveOutWithDefaultAction(backwards, relatedEvent);\n    }\n\n    getHandler(isIn: boolean): DummyInputFocusCallback | undefined {\n        return isIn ? this._onFocusIn : this._onFocusOut;\n    }\n\n    setTabbable(tabbable: boolean) {\n        this._instance?.setTabbable(this, tabbable);\n    }\n\n    dispose(): void {\n        if (this._instance) {\n            this._instance.dispose(this);\n            delete this._instance;\n        }\n\n        delete this._onFocusIn;\n        delete this._onFocusOut;\n    }\n\n    static moveWithPhantomDummy(\n        tabster: TabsterCore,\n        element: HTMLElement, // The target element to move to or out of.\n        moveOutOfElement: boolean, // Whether to move out of the element or into it.\n        isBackward: boolean, // Are we tabbing of shift-tabbing?\n        relatedEvent: KeyboardEvent // The event that triggered the move.\n    ): void {\n        // Phantom dummy is a hack to use browser's default action to move\n        // focus from a specific point in the application to the next/previous\n        // element. Default action is needed because next focusable element\n        // is not always available to focus directly (for example, next focusable\n        // is inside isolated iframe) or for uncontrolled areas we want to make\n        // sure that something that controls it takes care of the focusing.\n        // It works in a way that during the Tab key handling, we create a dummy\n        // input element, place it to the specific place in the DOM and focus it,\n        // then the default action of the Tab press will move focus from our dummy\n        // input. And we remove it from the DOM right after that.\n        const dummy: DummyInput = new DummyInput(tabster.getWindow, true, {\n            isPhantom: true,\n            isFirst: true,\n        });\n\n        const input = dummy.input;\n\n        if (input) {\n            let parent: HTMLElement | null;\n            let insertBefore: HTMLElement | null;\n\n            // Let's say we have a following DOM structure:\n            // <div>\n            //   <button>Button1</button>\n            //   <div id=\"uncontrolled\" data-tabster={uncontrolled: {}}>\n            //     <button>Button2</button>\n            //     <button>Button3</button>\n            //   </div>\n            //   <button>Button4</button>\n            // </div>\n            //\n            // We pass the \"uncontrolled\" div as the element to move to or out of.\n            //\n            // When we pass moveOutOfElement=true and isBackward=false,\n            // the phantom dummy input will be inserted before Button4.\n            //\n            // When we pass moveOutOfElement=true and isBackward=true, there are\n            // two cases. If the uncontrolled element is focusable (has tabindex=0),\n            // the phantom dummy input will be inserted after Button1. If the\n            // uncontrolled element is not focusable, the phantom dummy input will be\n            // inserted before Button2.\n            //\n            // When we pass moveOutOfElement=false and isBackward=false, the\n            // phantom dummy input will be inserted after Button1.\n            //\n            // When we pass moveOutOfElement=false and isBackward=true, the phantom\n            // dummy input will be inserted before Button4.\n            //\n            // And we have a corner case for <body> and we make sure that the inserted\n            // dummy is inserted properly when there are existing permanent dummies.\n\n            if (element.tagName === \"BODY\") {\n                // We cannot insert elements outside of BODY.\n                parent = element;\n                insertBefore =\n                    (moveOutOfElement && isBackward) ||\n                    (!moveOutOfElement && !isBackward)\n                        ? (dom.getFirstElementChild(\n                              element\n                          ) as HTMLElement | null)\n                        : null;\n            } else {\n                if (\n                    moveOutOfElement &&\n                    (!isBackward ||\n                        (isBackward &&\n                            !tabster.focusable.isFocusable(\n                                element,\n                                false,\n                                true,\n                                true\n                            )))\n                ) {\n                    parent = element;\n                    insertBefore = isBackward\n                        ? (element.firstElementChild as HTMLElement | null)\n                        : null;\n                } else {\n                    parent = dom.getParentElement(element);\n                    insertBefore =\n                        (moveOutOfElement && isBackward) ||\n                        (!moveOutOfElement && !isBackward)\n                            ? element\n                            : (dom.getNextElementSibling(\n                                  element\n                              ) as HTMLElement | null);\n                }\n\n                let potentialDummy: HTMLElement | null;\n                let dummyFor: HTMLElement | null;\n\n                do {\n                    // This is a safety pillow for the cases when someone, combines\n                    // groupper with uncontrolled on the same node. Which is technically\n                    // not correct, but moving into the container element via its dummy\n                    // input would produce a correct behaviour in uncontrolled mode.\n                    potentialDummy = (\n                        (moveOutOfElement && isBackward) ||\n                        (!moveOutOfElement && !isBackward)\n                            ? dom.getPreviousElementSibling(insertBefore)\n                            : insertBefore\n                    ) as HTMLElement | null;\n\n                    dummyFor = getDummyInputContainer(potentialDummy);\n\n                    if (dummyFor === element) {\n                        insertBefore =\n                            (moveOutOfElement && isBackward) ||\n                            (!moveOutOfElement && !isBackward)\n                                ? potentialDummy\n                                : (dom.getNextElementSibling(\n                                      potentialDummy\n                                  ) as HTMLElement | null);\n                    } else {\n                        dummyFor = null;\n                    }\n                } while (dummyFor);\n            }\n\n            if (\n                parent?.dispatchEvent(\n                    new TabsterMoveFocusEvent({\n                        by: \"root\",\n                        owner: parent,\n                        next: null,\n                        relatedEvent,\n                    })\n                )\n            ) {\n                dom.insertBefore(parent, input, insertBefore);\n                nativeFocus(input);\n            }\n        }\n    }\n\n    static addPhantomDummyWithTarget(\n        tabster: TabsterCore,\n        sourceElement: HTMLElement,\n        isBackward: boolean,\n        targetElement: HTMLElement\n    ): void {\n        const dummy: DummyInput = new DummyInput(\n            tabster.getWindow,\n            true,\n            {\n                isPhantom: true,\n                isFirst: true,\n            },\n            undefined,\n            new WeakHTMLElement(tabster.getWindow, targetElement)\n        );\n\n        const input = dummy.input;\n\n        if (input) {\n            let dummyParent: HTMLElement | null;\n            let insertBefore: HTMLElement | null;\n\n            if (hasSubFocusable(sourceElement) && !isBackward) {\n                dummyParent = sourceElement;\n                insertBefore = dom.getFirstElementChild(\n                    sourceElement\n                ) as HTMLElement | null;\n            } else {\n                dummyParent = dom.getParentElement(sourceElement);\n                insertBefore = isBackward\n                    ? sourceElement\n                    : (dom.getNextElementSibling(\n                          sourceElement\n                      ) as HTMLElement | null);\n            }\n\n            if (dummyParent) {\n                dom.insertBefore(dummyParent, input, insertBefore);\n            }\n        }\n    }\n}\n\ninterface DummyInputWrapper {\n    manager: DummyInputManager;\n    priority: number;\n    tabbable: boolean;\n}\n\nfunction setDummyInputDebugValue(\n    dummy: DummyInput,\n    wrappers: DummyInputWrapper[]\n): void {\n    const what: Record<number, string> = {\n        1: \"Root\",\n        2: \"Modalizer\",\n        3: \"Mover\",\n        4: \"Groupper\",\n    };\n\n    dummy.input?.setAttribute(\n        TABSTER_DUMMY_INPUT_ATTRIBUTE_NAME,\n        [\n            `isFirst=${dummy.isFirst}`,\n            `isOutside=${dummy.isOutside}`,\n            ...wrappers.map(\n                (w) => `(${what[w.priority]}, tabbable=${w.tabbable})`\n            ),\n        ].join(\", \")\n    );\n}\n\nexport class DummyInputObserver implements DummyInputObserverInterface {\n    private _win?: GetWindow;\n    private _updateQueue: Set<\n        (\n            scrollTopLeftCache: Map<\n                HTMLElement,\n                { scrollTop: number; scrollLeft: number } | null\n            >\n        ) => () => void\n    > = new Set();\n    private _updateTimer?: number;\n    private _lastUpdateQueueTime = 0;\n    private _changedParents: WeakSet<Node> = new WeakSet();\n    private _updateDummyInputsTimer?: number;\n    private _dummyElements: WeakHTMLElement<HTMLElement>[] = [];\n    private _dummyCallbacks: WeakMap<HTMLElement, () => void> = new WeakMap();\n    domChanged?(parent: HTMLElement): void;\n\n    constructor(win: GetWindow) {\n        this._win = win;\n    }\n\n    add(dummy: HTMLElement, callback: () => void): void {\n        if (!this._dummyCallbacks.has(dummy) && this._win) {\n            this._dummyElements.push(new WeakHTMLElement(this._win, dummy));\n            this._dummyCallbacks.set(dummy, callback);\n            this.domChanged = this._domChanged;\n        }\n    }\n\n    remove(dummy: HTMLElement): void {\n        this._dummyElements = this._dummyElements.filter((ref) => {\n            const element = ref.get();\n            return element && element !== dummy;\n        });\n\n        this._dummyCallbacks.delete(dummy);\n\n        if (this._dummyElements.length === 0) {\n            delete this.domChanged;\n        }\n    }\n\n    dispose(): void {\n        const win = this._win?.();\n\n        if (this._updateTimer) {\n            win?.clearTimeout(this._updateTimer);\n            delete this._updateTimer;\n        }\n\n        if (this._updateDummyInputsTimer) {\n            win?.clearTimeout(this._updateDummyInputsTimer);\n            delete this._updateDummyInputsTimer;\n        }\n\n        this._changedParents = new WeakSet();\n        this._dummyCallbacks = new WeakMap();\n        this._dummyElements = [];\n        this._updateQueue.clear();\n\n        delete this.domChanged;\n        delete this._win;\n    }\n\n    private _domChanged = (parent: HTMLElement): void => {\n        if (this._changedParents.has(parent)) {\n            return;\n        }\n\n        this._changedParents.add(parent);\n\n        if (this._updateDummyInputsTimer) {\n            return;\n        }\n\n        this._updateDummyInputsTimer = this._win?.().setTimeout(() => {\n            delete this._updateDummyInputsTimer;\n\n            for (const ref of this._dummyElements) {\n                const dummyElement = ref.get();\n\n                if (dummyElement) {\n                    const callback = this._dummyCallbacks.get(dummyElement);\n\n                    if (callback) {\n                        const dummyParent = dom.getParentNode(dummyElement);\n\n                        if (\n                            !dummyParent ||\n                            this._changedParents.has(dummyParent)\n                        ) {\n                            callback();\n                        }\n                    }\n                }\n            }\n\n            this._changedParents = new WeakSet();\n        }, _updateDummyInputsTimeout);\n    };\n\n    updatePositions(\n        compute: (\n            scrollTopLeftCache: Map<\n                HTMLElement,\n                { scrollTop: number; scrollLeft: number } | null\n            >\n        ) => () => void\n    ): void {\n        if (!this._win) {\n            // As this is a public method, we make sure that it has no effect when\n            // called after dispose().\n            return;\n        }\n\n        this._updateQueue.add(compute);\n\n        this._lastUpdateQueueTime = Date.now();\n\n        this._scheduledUpdatePositions();\n    }\n\n    private _scheduledUpdatePositions(): void {\n        if (this._updateTimer) {\n            return;\n        }\n\n        this._updateTimer = this._win?.().setTimeout(() => {\n            delete this._updateTimer;\n\n            // updatePositions() might be called quite a lot during the scrolling.\n            // So, instead of clearing the timeout and scheduling a new one, we\n            // check if enough time has passed since the last updatePositions() call\n            // and only schedule a new one if not.\n            // At maximum, we will update dummy inputs positions\n            // _updateDummyInputsTimeout * 2 after the last updatePositions() call.\n            if (\n                this._lastUpdateQueueTime + _updateDummyInputsTimeout <=\n                Date.now()\n            ) {\n                // A cache for current bulk of updates to reduce getComputedStyle() calls.\n                const scrollTopLeftCache = new Map<\n                    HTMLElement,\n                    { scrollTop: number; scrollLeft: number } | null\n                >();\n\n                const setTopLeftCallbacks: (() => void)[] = [];\n\n                for (const compute of this._updateQueue) {\n                    setTopLeftCallbacks.push(compute(scrollTopLeftCache));\n                }\n\n                this._updateQueue.clear();\n\n                // We're splitting the computation of offsets and setting them to avoid extra\n                // reflows.\n                for (const setTopLeft of setTopLeftCallbacks) {\n                    setTopLeft();\n                }\n\n                // Explicitly clear to not hold references till the next garbage collection.\n                scrollTopLeftCache.clear();\n            } else {\n                this._scheduledUpdatePositions();\n            }\n        }, _updateDummyInputsTimeout);\n    }\n}\n\n/**\n * Parent class that encapsulates the behaviour of dummy inputs (focus sentinels)\n */\nclass DummyInputManagerCore {\n    private _tabster: TabsterCore;\n    private _addTimer: number | undefined;\n    private _getWindow: GetWindow;\n    private _wrappers: DummyInputWrapper[] = [];\n    private _element: WeakHTMLElement | undefined;\n    private _isOutside = false;\n    private _firstDummy: DummyInput | undefined;\n    private _lastDummy: DummyInput | undefined;\n    private _transformElements: Set<HTMLElement> = new Set();\n    private _callForDefaultAction: boolean | undefined;\n\n    constructor(\n        tabster: TabsterCore,\n        element: WeakHTMLElement,\n        manager: DummyInputManager,\n        priority: number,\n        sys: SysProps | undefined,\n        outsideByDefault?: boolean,\n        callForDefaultAction?: boolean\n    ) {\n        const el = element.get() as HTMLElementWithDummyInputs;\n\n        if (!el) {\n            throw new Error(\"No element\");\n        }\n\n        this._tabster = tabster;\n        this._getWindow = tabster.getWindow;\n        this._callForDefaultAction = callForDefaultAction;\n\n        const instance = el.__tabsterDummy;\n\n        (instance || this)._wrappers.push({\n            manager,\n            priority,\n            tabbable: true,\n        });\n\n        if (instance) {\n            if (__DEV__) {\n                this._firstDummy &&\n                    setDummyInputDebugValue(\n                        this._firstDummy,\n                        instance._wrappers\n                    );\n                this._lastDummy &&\n                    setDummyInputDebugValue(\n                        this._lastDummy,\n                        instance._wrappers\n                    );\n            }\n\n            return instance;\n        }\n\n        el.__tabsterDummy = this;\n\n        // Some elements allow only specific types of direct descendants and we need to\n        // put our dummy inputs inside or outside of the element accordingly.\n        const forcedDummyPosition = sys?.dummyInputsPosition;\n        const tagName = el.tagName;\n        this._isOutside = !forcedDummyPosition\n            ? (outsideByDefault ||\n                  tagName === \"UL\" ||\n                  tagName === \"OL\" ||\n                  tagName === \"TABLE\") &&\n              !(tagName === \"LI\" || tagName === \"TD\" || tagName === \"TH\")\n            : forcedDummyPosition === SysDummyInputsPositions.Outside;\n\n        this._firstDummy = new DummyInput(\n            this._getWindow,\n            this._isOutside,\n            {\n                isFirst: true,\n            },\n            element\n        );\n\n        this._lastDummy = new DummyInput(\n            this._getWindow,\n            this._isOutside,\n            {\n                isFirst: false,\n            },\n            element\n        );\n\n        // We will be checking dummy input parents to see if their child list have changed.\n        // So, it is enough to have just one of the inputs observed, because\n        // both dummy inputs always have the same parent.\n        const dummyElement = this._firstDummy.input;\n        dummyElement &&\n            tabster._dummyObserver.add(dummyElement, this._addDummyInputs);\n\n        this._firstDummy.onFocusIn = this._onFocusIn;\n        this._firstDummy.onFocusOut = this._onFocusOut;\n        this._lastDummy.onFocusIn = this._onFocusIn;\n        this._lastDummy.onFocusOut = this._onFocusOut;\n\n        this._element = element;\n        this._addDummyInputs();\n    }\n\n    dispose(manager: DummyInputManager, force?: boolean): void {\n        const wrappers = (this._wrappers = this._wrappers.filter(\n            (w) => w.manager !== manager && !force\n        ));\n\n        if (__DEV__) {\n            this._firstDummy &&\n                setDummyInputDebugValue(this._firstDummy, wrappers);\n            this._lastDummy &&\n                setDummyInputDebugValue(this._lastDummy, wrappers);\n        }\n\n        if (wrappers.length === 0) {\n            delete (this._element?.get() as HTMLElementWithDummyInputs)\n                .__tabsterDummy;\n\n            for (const el of this._transformElements) {\n                el.removeEventListener(\"scroll\", this._addTransformOffsets);\n            }\n            this._transformElements.clear();\n\n            const win = this._getWindow();\n\n            if (this._addTimer) {\n                win.clearTimeout(this._addTimer);\n                delete this._addTimer;\n            }\n\n            const dummyElement = this._firstDummy?.input;\n            dummyElement && this._tabster._dummyObserver.remove(dummyElement);\n\n            this._firstDummy?.dispose();\n            this._lastDummy?.dispose();\n        }\n    }\n\n    private _onFocus(\n        isIn: boolean,\n        dummyInput: DummyInput,\n        isBackward: boolean,\n        relatedTarget: HTMLElement | null\n    ): void {\n        const wrapper = this._getCurrent();\n\n        if (\n            wrapper &&\n            (!dummyInput.useDefaultAction || this._callForDefaultAction)\n        ) {\n            wrapper.manager.getHandler(isIn)?.(\n                dummyInput,\n                isBackward,\n                relatedTarget\n            );\n        }\n    }\n\n    private _onFocusIn = (\n        dummyInput: DummyInput,\n        isBackward: boolean,\n        relatedTarget: HTMLElement | null\n    ): void => {\n        this._onFocus(true, dummyInput, isBackward, relatedTarget);\n    };\n\n    private _onFocusOut = (\n        dummyInput: DummyInput,\n        isBackward: boolean,\n        relatedTarget: HTMLElement | null\n    ): void => {\n        this._onFocus(false, dummyInput, isBackward, relatedTarget);\n    };\n\n    moveOut = (backwards: boolean): void => {\n        const first = this._firstDummy;\n        const last = this._lastDummy;\n\n        if (first && last) {\n            // For the sake of performance optimization, the dummy input\n            // position in the DOM updates asynchronously from the DOM change.\n            // Calling _ensurePosition() to make sure the position is correct.\n            this._ensurePosition();\n\n            const firstInput = first.input;\n            const lastInput = last.input;\n            const element = this._element?.get();\n\n            if (firstInput && lastInput && element) {\n                let toFocus: HTMLElement | undefined;\n\n                if (backwards) {\n                    firstInput.tabIndex = 0;\n                    toFocus = firstInput;\n                } else {\n                    lastInput.tabIndex = 0;\n                    toFocus = lastInput;\n                }\n\n                if (toFocus) {\n                    nativeFocus(toFocus);\n                }\n            }\n        }\n    };\n\n    /**\n     * Prepares to move focus out of the given element by focusing\n     * one of the dummy inputs and setting the `useDefaultAction` flag\n     * @param backwards focus moving to an element behind the given element\n     */\n    moveOutWithDefaultAction = (\n        backwards: boolean,\n        relatedEvent: KeyboardEvent\n    ): void => {\n        const first = this._firstDummy;\n        const last = this._lastDummy;\n\n        if (first && last) {\n            // For the sake of performance optimization, the dummy input\n            // position in the DOM updates asynchronously from the DOM change.\n            // Calling _ensurePosition() to make sure the position is correct.\n            this._ensurePosition();\n\n            const firstInput = first.input;\n            const lastInput = last.input;\n            const element = this._element?.get();\n\n            if (firstInput && lastInput && element) {\n                let toFocus: HTMLElement | undefined;\n\n                if (backwards) {\n                    if (\n                        !first.isOutside &&\n                        this._tabster.focusable.isFocusable(\n                            element,\n                            true,\n                            true,\n                            true\n                        )\n                    ) {\n                        toFocus = element;\n                    } else {\n                        first.useDefaultAction = true;\n                        firstInput.tabIndex = 0;\n                        toFocus = firstInput;\n                    }\n                } else {\n                    last.useDefaultAction = true;\n                    lastInput.tabIndex = 0;\n                    toFocus = lastInput;\n                }\n\n                if (\n                    toFocus &&\n                    element.dispatchEvent(\n                        new TabsterMoveFocusEvent({\n                            by: \"root\",\n                            owner: element,\n                            next: null,\n                            relatedEvent,\n                        })\n                    )\n                ) {\n                    nativeFocus(toFocus);\n                }\n            }\n        }\n    };\n\n    setTabbable = (manager: DummyInputManager, tabbable: boolean) => {\n        for (const w of this._wrappers) {\n            if (w.manager === manager) {\n                w.tabbable = tabbable;\n                break;\n            }\n        }\n\n        const wrapper = this._getCurrent();\n\n        if (wrapper) {\n            const tabIndex = wrapper.tabbable ? 0 : -1;\n\n            let input = this._firstDummy?.input;\n\n            if (input) {\n                input.tabIndex = tabIndex;\n            }\n\n            input = this._lastDummy?.input;\n\n            if (input) {\n                input.tabIndex = tabIndex;\n            }\n        }\n\n        if (__DEV__) {\n            this._firstDummy &&\n                setDummyInputDebugValue(this._firstDummy, this._wrappers);\n            this._lastDummy &&\n                setDummyInputDebugValue(this._lastDummy, this._wrappers);\n        }\n    };\n\n    private _getCurrent(): DummyInputWrapper | undefined {\n        this._wrappers.sort((a, b) => {\n            if (a.tabbable !== b.tabbable) {\n                return a.tabbable ? -1 : 1;\n            }\n\n            return a.priority - b.priority;\n        });\n\n        return this._wrappers[0];\n    }\n\n    /**\n     * Adds dummy inputs as the first and last child of the given element\n     * Called each time the children under the element is mutated\n     */\n    private _addDummyInputs = () => {\n        if (this._addTimer) {\n            return;\n        }\n\n        this._addTimer = this._getWindow().setTimeout(() => {\n            delete this._addTimer;\n\n            this._ensurePosition();\n\n            if (__DEV__) {\n                this._firstDummy &&\n                    setDummyInputDebugValue(this._firstDummy, this._wrappers);\n                this._lastDummy &&\n                    setDummyInputDebugValue(this._lastDummy, this._wrappers);\n            }\n\n            this._addTransformOffsets();\n        }, 0);\n    };\n\n    private _ensurePosition(): void {\n        const element = this._element?.get();\n        const firstDummyInput = this._firstDummy?.input;\n        const lastDummyInput = this._lastDummy?.input;\n\n        if (!element || !firstDummyInput || !lastDummyInput) {\n            return;\n        }\n\n        if (this._isOutside) {\n            const elementParent = dom.getParentNode(element);\n\n            if (elementParent) {\n                const nextSibling = dom.getNextSibling(element);\n\n                if (nextSibling !== lastDummyInput) {\n                    dom.insertBefore(\n                        elementParent,\n                        lastDummyInput,\n                        nextSibling\n                    );\n                }\n\n                if (\n                    dom.getPreviousElementSibling(element) !== firstDummyInput\n                ) {\n                    dom.insertBefore(elementParent, firstDummyInput, element);\n                }\n            }\n        } else {\n            if (dom.getLastElementChild(element) !== lastDummyInput) {\n                dom.appendChild(element, lastDummyInput);\n            }\n\n            const firstElementChild = dom.getFirstElementChild(element);\n\n            if (\n                firstElementChild &&\n                firstElementChild !== firstDummyInput &&\n                firstElementChild.parentNode\n            ) {\n                dom.insertBefore(\n                    firstElementChild.parentNode,\n                    firstDummyInput,\n                    firstElementChild\n                );\n            }\n        }\n    }\n\n    private _addTransformOffsets = (): void => {\n        this._tabster._dummyObserver.updatePositions(\n            this._computeTransformOffsets\n        );\n    };\n\n    private _computeTransformOffsets = (\n        scrollTopLeftCache: Map<\n            HTMLElement,\n            { scrollTop: number; scrollLeft: number } | null\n        >\n    ): (() => void) => {\n        const from = this._firstDummy?.input || this._lastDummy?.input;\n        const transformElements = this._transformElements;\n        const newTransformElements: typeof transformElements = new Set();\n        let scrollTop = 0;\n        let scrollLeft = 0;\n\n        const win = this._getWindow();\n\n        for (\n            let element: HTMLElement | undefined | null = from;\n            element && element.nodeType === Node.ELEMENT_NODE;\n            element = dom.getParentElement(element)\n        ) {\n            let scrollTopLeft = scrollTopLeftCache.get(element);\n\n            // getComputedStyle() and element.scrollLeft/Top() cause style recalculation,\n            // so we cache the result across all elements in the current bulk.\n            if (scrollTopLeft === undefined) {\n                const transform = win.getComputedStyle(element).transform;\n\n                if (transform && transform !== \"none\") {\n                    scrollTopLeft = {\n                        scrollTop: element.scrollTop,\n                        scrollLeft: element.scrollLeft,\n                    };\n                }\n\n                scrollTopLeftCache.set(element, scrollTopLeft || null);\n            }\n\n            if (scrollTopLeft) {\n                newTransformElements.add(element);\n\n                if (!transformElements.has(element)) {\n                    element.addEventListener(\n                        \"scroll\",\n                        this._addTransformOffsets\n                    );\n                }\n\n                scrollTop += scrollTopLeft.scrollTop;\n                scrollLeft += scrollTopLeft.scrollLeft;\n            }\n        }\n\n        for (const el of transformElements) {\n            if (!newTransformElements.has(el)) {\n                el.removeEventListener(\"scroll\", this._addTransformOffsets);\n            }\n        }\n\n        this._transformElements = newTransformElements;\n\n        return () => {\n            this._firstDummy?.setTopLeft(scrollTop, scrollLeft);\n            this._lastDummy?.setTopLeft(scrollTop, scrollLeft);\n        };\n    };\n}\n\nexport function getLastChild(container: HTMLElement): HTMLElement | undefined {\n    let lastChild: HTMLElement | null = null;\n\n    for (\n        let i = dom.getLastElementChild(container);\n        i;\n        i = dom.getLastElementChild(i)\n    ) {\n        lastChild = i as HTMLElement;\n    }\n\n    return lastChild || undefined;\n}\n\nexport function getAdjacentElement(\n    from: HTMLElement,\n    prev?: boolean\n): HTMLElement | undefined {\n    let cur: HTMLElement | null = from;\n    let adjacent: HTMLElement | null = null;\n\n    while (cur && !adjacent) {\n        adjacent = (\n            prev\n                ? dom.getPreviousElementSibling(cur)\n                : dom.getNextElementSibling(cur)\n        ) as HTMLElement | null;\n        cur = dom.getParentElement(cur);\n    }\n\n    return adjacent || undefined;\n}\n\nexport function augmentAttribute(\n    tabster: TabsterCore,\n    element: HTMLElement,\n    name: string,\n    value?: string | null // Restore original value when undefined.\n): boolean {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const entry = tabster.storageEntry(element, true)!;\n    let ret = false;\n\n    if (!entry.aug) {\n        if (value === undefined) {\n            return ret;\n        }\n\n        entry.aug = {};\n    }\n\n    if (value === undefined) {\n        if (name in entry.aug) {\n            const origVal = entry.aug[name];\n\n            delete entry.aug[name];\n\n            if (origVal === null) {\n                element.removeAttribute(name);\n            } else {\n                element.setAttribute(name, origVal);\n            }\n\n            ret = true;\n        }\n    } else {\n        let origValue: string | null | undefined;\n\n        if (!(name in entry.aug)) {\n            origValue = element.getAttribute(name);\n        }\n\n        if (origValue !== undefined && origValue !== value) {\n            entry.aug[name] = origValue;\n\n            if (value === null) {\n                element.removeAttribute(name);\n            } else {\n                element.setAttribute(name, value);\n            }\n\n            ret = true;\n        }\n    }\n\n    if (value === undefined && Object.keys(entry.aug).length === 0) {\n        delete entry.aug;\n        tabster.storageEntry(element, false);\n    }\n\n    return ret;\n}\n\nexport function getTabsterAttributeOnElement(\n    element: HTMLElement\n): TabsterAttributeProps | null {\n    if (!element.hasAttribute(TABSTER_ATTRIBUTE_NAME)) {\n        return null;\n    }\n\n    // We already checked the presence with `hasAttribute`\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const rawAttribute = element.getAttribute(TABSTER_ATTRIBUTE_NAME)!;\n    let tabsterAttribute: TabsterAttributeProps;\n    try {\n        tabsterAttribute = JSON.parse(rawAttribute);\n    } catch {\n        console.error(\"Tabster: failed to parse attribute\", rawAttribute);\n        tabsterAttribute = {};\n    }\n\n    return tabsterAttribute;\n}\n\nexport function isDisplayNone(element: HTMLElement): boolean {\n    const elementDocument = element.ownerDocument;\n    const computedStyle =\n        elementDocument.defaultView?.getComputedStyle(element);\n\n    // offsetParent is null for elements with display:none, display:fixed and for <body>.\n    if (\n        element.offsetParent === null &&\n        elementDocument.body !== element &&\n        computedStyle?.position !== \"fixed\"\n    ) {\n        return true;\n    }\n\n    // For our purposes of looking for focusable elements, visibility:hidden has the same\n    // effect as display:none.\n    if (computedStyle?.visibility === \"hidden\") {\n        return true;\n    }\n\n    // if an element has display: fixed, we need to check if it is also hidden with CSS,\n    // or within a parent hidden with CSS\n    if (computedStyle?.position === \"fixed\") {\n        if (computedStyle.display === \"none\") {\n            return true;\n        }\n\n        if (\n            element.parentElement?.offsetParent === null &&\n            elementDocument.body !== element.parentElement\n        ) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isRadio(element: HTMLElement): boolean {\n    return (\n        element.tagName === \"INPUT\" &&\n        !!(element as HTMLInputElement).name &&\n        (element as HTMLInputElement).type === \"radio\"\n    );\n}\n\nexport function getRadioButtonGroup(\n    element: HTMLElement\n): RadioButtonGroup | undefined {\n    if (!isRadio(element)) {\n        return;\n    }\n\n    const name = (element as HTMLInputElement).name;\n    let radioButtons = Array.from(dom.getElementsByName(element, name));\n    let checked: HTMLInputElement | undefined;\n\n    radioButtons = radioButtons.filter((el) => {\n        if (isRadio(el)) {\n            if ((el as HTMLInputElement).checked) {\n                checked = el as HTMLInputElement;\n            }\n            return true;\n        }\n        return false;\n    });\n\n    return {\n        name,\n        buttons: new Set(radioButtons as HTMLInputElement[]),\n        checked,\n    };\n}\n\n/**\n * If the passed element is Tabster dummy input, returns the container element this dummy input belongs to.\n * @param element Element to check for being dummy input.\n * @returns Dummy input container element (if the passed element is a dummy input) or null.\n */\nexport function getDummyInputContainer(\n    element: HTMLElement | null | undefined\n): HTMLElement | null {\n    return (\n        (\n            element as HTMLElementWithDummyContainer | null | undefined\n        )?.__tabsterDummyContainer?.get() || null\n    );\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport * as Types from \"./Types\";\nimport { TABSTER_ATTRIBUTE_NAME } from \"./Consts\";\n\nexport function getTabsterAttribute(\n    props: Types.TabsterAttributeProps\n): Types.TabsterDOMAttribute;\nexport function getTabsterAttribute(\n    props: Types.TabsterAttributeProps,\n    plain: true\n): string;\nexport function getTabsterAttribute(\n    props: Types.TabsterAttributeProps,\n    plain?: true\n): Types.TabsterDOMAttribute | string {\n    const attr = JSON.stringify(props);\n\n    if (plain === true) {\n        return attr;\n    }\n\n    return {\n        [TABSTER_ATTRIBUTE_NAME]: attr,\n    };\n}\n\n/**\n * Updates Tabster props object with new props.\n * @param element an element to set data-tabster attribute on.\n * @param props current Tabster props to update.\n * @param newProps new Tabster props to add.\n *  When the value of a property in newProps is undefined, the property\n *  will be removed from the attribute.\n */\nexport function mergeTabsterProps(\n    props: Types.TabsterAttributeProps,\n    newProps: Types.TabsterAttributeProps\n): void {\n    for (const key of Object.keys(\n        newProps\n    ) as (keyof Types.TabsterAttributeProps)[]) {\n        const value = newProps[key];\n\n        if (value) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            props[key] = value as any;\n        } else {\n            delete props[key];\n        }\n    }\n}\n\n/**\n * Sets or updates Tabster attribute of the element.\n * @param element an element to set data-tabster attribute on.\n * @param newProps new Tabster props to set.\n * @param update if true, newProps will be merged with the existing props.\n *  When true and the value of a property in newProps is undefined, the property\n *  will be removed from the attribute.\n */\nexport function setTabsterAttribute(\n    element: HTMLElement,\n    newProps: Types.TabsterAttributeProps,\n    update?: boolean\n): void {\n    let props: Types.TabsterAttributeProps | undefined;\n\n    if (update) {\n        const attr = element.getAttribute(TABSTER_ATTRIBUTE_NAME);\n\n        if (attr) {\n            try {\n                props = JSON.parse(attr);\n            } catch (e) {\n                if (__DEV__) {\n                    console.error(\n                        `data-tabster attribute error: ${e}`,\n                        element\n                    );\n                }\n            }\n        }\n    }\n\n    if (!props) {\n        props = {};\n    }\n\n    mergeTabsterProps(props, newProps);\n\n    if (Object.keys(props).length > 0) {\n        element.setAttribute(\n            TABSTER_ATTRIBUTE_NAME,\n            getTabsterAttribute(props, true)\n        );\n    } else {\n        element.removeAttribute(TABSTER_ATTRIBUTE_NAME);\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { KEYBORG_FOCUSIN, KEYBORG_FOCUSOUT, nativeFocus } from \"keyborg\";\nimport { getTabsterOnElement, updateTabsterByAttribute } from \"./Instance\";\nimport * as Types from \"./Types\";\nimport { RootFocusEvent, RootBlurEvent } from \"./Events\";\nimport {\n    DummyInput,\n    DummyInputManager,\n    DummyInputManagerPriorities,\n    getElementUId,\n    TabsterPart,\n    WeakHTMLElement,\n} from \"./Utils\";\nimport { setTabsterAttribute } from \"./AttributeHelpers\";\n\nexport interface WindowWithTabsterInstance extends Window {\n    __tabsterInstance?: Types.TabsterCore;\n}\n\nfunction _setInformativeStyle(\n    weakElement: WeakHTMLElement,\n    remove: boolean,\n    id?: string\n) {\n    if (__DEV__) {\n        const element = weakElement.get();\n\n        if (element) {\n            if (remove) {\n                element.style.removeProperty(\"--tabster-root\");\n            } else {\n                element.style.setProperty(\"--tabster-root\", id + \",\");\n            }\n        }\n    }\n}\n\nclass RootDummyManager extends DummyInputManager {\n    private _tabster: Types.TabsterCore;\n    private _setFocused: (focused: boolean) => void;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: WeakHTMLElement,\n        setFocused: (focused: boolean) => void,\n        sys: Types.SysProps | undefined\n    ) {\n        super(\n            tabster,\n            element,\n            DummyInputManagerPriorities.Root,\n            sys,\n            undefined,\n            true\n        );\n\n        this._setHandlers(this._onDummyInputFocus);\n\n        this._tabster = tabster;\n        this._setFocused = setFocused;\n    }\n\n    private _onDummyInputFocus = (dummyInput: DummyInput): void => {\n        if (dummyInput.useDefaultAction) {\n            // When we've reached the last focusable element, we want to let the browser\n            // to move the focus outside of the page. In order to do that we're synchronously\n            // calling focus() of the dummy input from the Tab key handler and allowing\n            // the default action to move the focus out.\n            this._setFocused(false);\n        } else {\n            // The only way a dummy input gets focused is during the keyboard navigation.\n            this._tabster.keyboardNavigation.setNavigatingWithKeyboard(true);\n\n            const element = this._element.get();\n\n            if (element) {\n                this._setFocused(true);\n\n                const toFocus =\n                    this._tabster.focusedElement.getFirstOrLastTabbable(\n                        dummyInput.isFirst,\n                        { container: element, ignoreAccessibility: true }\n                    );\n\n                if (toFocus) {\n                    nativeFocus(toFocus);\n                    return;\n                }\n            }\n\n            dummyInput.input?.blur();\n        }\n    };\n}\n\nexport class Root\n    extends TabsterPart<Types.RootProps, undefined>\n    implements Types.Root\n{\n    readonly uid: string;\n\n    private _dummyManager?: RootDummyManager;\n    private _sys?: Types.SysProps;\n    private _isFocused = false;\n    private _setFocusedTimer: number | undefined;\n    private _onDispose: (root: Root) => void;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: HTMLElement,\n        onDispose: (root: Root) => void,\n        props: Types.RootProps,\n        sys: Types.SysProps | undefined\n    ) {\n        super(tabster, element, props);\n\n        this._onDispose = onDispose;\n\n        const win = tabster.getWindow;\n        this.uid = getElementUId(win, element);\n\n        this._sys = sys;\n\n        if (tabster.controlTab || tabster.rootDummyInputs) {\n            this.addDummyInputs();\n        }\n\n        const w = win();\n        const doc = w.document;\n\n        doc.addEventListener(KEYBORG_FOCUSIN, this._onFocusIn);\n        doc.addEventListener(KEYBORG_FOCUSOUT, this._onFocusOut);\n\n        this._add();\n    }\n\n    addDummyInputs(): void {\n        if (!this._dummyManager) {\n            this._dummyManager = new RootDummyManager(\n                this._tabster,\n                this._element,\n                this._setFocused,\n                this._sys\n            );\n        }\n    }\n\n    dispose(): void {\n        this._onDispose(this);\n\n        const win = this._tabster.getWindow();\n        const doc = win.document;\n\n        doc.removeEventListener(KEYBORG_FOCUSIN, this._onFocusIn);\n        doc.removeEventListener(KEYBORG_FOCUSOUT, this._onFocusOut);\n\n        if (this._setFocusedTimer) {\n            win.clearTimeout(this._setFocusedTimer);\n            delete this._setFocusedTimer;\n        }\n\n        this._dummyManager?.dispose();\n        this._remove();\n    }\n\n    moveOutWithDefaultAction(isBackward: boolean, relatedEvent: KeyboardEvent) {\n        const dummyManager = this._dummyManager;\n\n        if (dummyManager) {\n            dummyManager.moveOutWithDefaultAction(isBackward, relatedEvent);\n        } else {\n            const el = this.getElement();\n\n            if (el) {\n                RootDummyManager.moveWithPhantomDummy(\n                    this._tabster,\n                    el,\n                    true,\n                    isBackward,\n                    relatedEvent\n                );\n            }\n        }\n    }\n\n    private _setFocused = (hasFocused: boolean): void => {\n        if (this._setFocusedTimer) {\n            this._tabster.getWindow().clearTimeout(this._setFocusedTimer);\n            delete this._setFocusedTimer;\n        }\n\n        if (this._isFocused === hasFocused) {\n            return;\n        }\n\n        const element = this._element.get();\n\n        if (element) {\n            if (hasFocused) {\n                this._isFocused = true;\n                this._dummyManager?.setTabbable(false);\n                element.dispatchEvent(new RootFocusEvent({ element }));\n            } else {\n                this._setFocusedTimer = this._tabster\n                    .getWindow()\n                    .setTimeout(() => {\n                        delete this._setFocusedTimer;\n\n                        this._isFocused = false;\n                        this._dummyManager?.setTabbable(true);\n                        element.dispatchEvent(new RootBlurEvent({ element }));\n                    }, 0);\n            }\n        }\n    };\n\n    private _onFocusIn = (event: FocusEvent) => {\n        const getParent = this._tabster.getParent;\n        const rootElement = this._element.get();\n        let curElement = event.composedPath()[0] as HTMLElement | null;\n\n        do {\n            if (curElement === rootElement) {\n                this._setFocused(true);\n                return;\n            }\n\n            curElement =\n                curElement && (getParent(curElement) as HTMLElement | null);\n        } while (curElement);\n    };\n\n    private _onFocusOut = () => {\n        this._setFocused(false);\n    };\n\n    private _add(): void {\n        if (__DEV__) {\n            _setInformativeStyle(this._element, false, this.uid);\n        }\n    }\n\n    private _remove(): void {\n        if (__DEV__) {\n            _setInformativeStyle(this._element, true);\n        }\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction validateRootProps(props: Types.RootProps): void {\n    // TODO: Implement validation.\n}\n\nexport class RootAPI implements Types.RootAPI {\n    private _tabster: Types.TabsterCore;\n    private _win: Types.GetWindow;\n    private _autoRoot: Types.RootProps | undefined;\n    private _autoRootWaiting = false;\n    private _roots: Record<string, Types.Root> = {};\n    private _forceDummy = false;\n    rootById: { [id: string]: Types.Root } = {};\n\n    constructor(tabster: Types.TabsterCore, autoRoot?: Types.RootProps) {\n        this._tabster = tabster;\n        this._win = tabster.getWindow;\n        this._autoRoot = autoRoot;\n\n        tabster.queueInit(() => {\n            if (this._autoRoot) {\n                this._autoRootCreate();\n            }\n        });\n    }\n\n    private _autoRootCreate = (): Types.Root | undefined => {\n        const doc = this._win().document;\n        const body = doc.body;\n\n        if (body) {\n            this._autoRootUnwait(doc);\n\n            const props = this._autoRoot;\n\n            if (props) {\n                setTabsterAttribute(body, { root: props }, true);\n                updateTabsterByAttribute(this._tabster, body);\n                return getTabsterOnElement(this._tabster, body)?.root;\n            }\n        } else if (!this._autoRootWaiting) {\n            this._autoRootWaiting = true;\n            doc.addEventListener(\"readystatechange\", this._autoRootCreate);\n        }\n\n        return undefined;\n    };\n\n    private _autoRootUnwait(doc: Document): void {\n        doc.removeEventListener(\"readystatechange\", this._autoRootCreate);\n        this._autoRootWaiting = false;\n    }\n\n    dispose(): void {\n        const win = this._win();\n\n        this._autoRootUnwait(win.document);\n        delete this._autoRoot;\n\n        Object.keys(this._roots).forEach((rootId) => {\n            if (this._roots[rootId]) {\n                this._roots[rootId].dispose();\n                delete this._roots[rootId];\n            }\n        });\n\n        this.rootById = {};\n    }\n\n    createRoot(\n        element: HTMLElement,\n        props: Types.RootProps,\n        sys: Types.SysProps | undefined\n    ): Types.Root {\n        if (__DEV__) {\n            validateRootProps(props);\n        }\n\n        const newRoot = new Root(\n            this._tabster,\n            element,\n            this._onRootDispose,\n            props,\n            sys\n        ) as Types.Root;\n\n        this._roots[newRoot.id] = newRoot;\n\n        if (this._forceDummy) {\n            newRoot.addDummyInputs();\n        }\n\n        return newRoot;\n    }\n\n    addDummyInputs(): void {\n        this._forceDummy = true;\n\n        const roots = this._roots;\n\n        for (const id of Object.keys(roots)) {\n            roots[id].addDummyInputs();\n        }\n    }\n\n    static getRootByUId(\n        getWindow: Types.GetWindow,\n        id: string\n    ): Types.Root | undefined {\n        const tabster = (getWindow() as WindowWithTabsterInstance)\n            .__tabsterInstance;\n        return tabster && (tabster.root as RootAPI).rootById[id];\n    }\n\n    /**\n     * Fetches the tabster context for an element walking up its ancestors\n     *\n     * @param tabster Tabster instance\n     * @param element The element the tabster context should represent\n     * @param options Additional options\n     * @returns undefined if the element is not a child of a tabster root, otherwise all applicable tabster behaviours and configurations\n     */\n    static getTabsterContext(\n        tabster: Types.TabsterCore,\n        element: Node,\n        options: Types.GetTabsterContextOptions = {}\n    ): Types.TabsterContext | undefined {\n        if (!element.ownerDocument) {\n            return undefined;\n        }\n\n        const { checkRtl, referenceElement } = options;\n\n        const getParent = tabster.getParent;\n\n        // Normally, the initialization starts on the next tick after the tabster\n        // instance creation. However, if the application starts using it before\n        // the next tick, we need to make sure the initialization is done.\n        tabster.drainInitQueue();\n\n        let root: Types.Root | undefined;\n        let modalizer: Types.Modalizer | undefined;\n        let groupper: Types.Groupper | undefined;\n        let mover: Types.Mover | undefined;\n        let excludedFromMover = false;\n        let groupperBeforeMover: boolean | undefined;\n        let modalizerInGroupper: Types.Groupper | undefined;\n        let dirRightToLeft: boolean | undefined;\n        let uncontrolled: HTMLElement | null | undefined;\n        let curElement: Node | null = referenceElement || element;\n        const ignoreKeydown: Types.FocusableProps[\"ignoreKeydown\"] = {};\n\n        while (curElement && (!root || checkRtl)) {\n            const tabsterOnElement = getTabsterOnElement(\n                tabster,\n                curElement as HTMLElement\n            );\n\n            if (checkRtl && dirRightToLeft === undefined) {\n                const dir = (curElement as HTMLElement).dir;\n\n                if (dir) {\n                    dirRightToLeft = dir.toLowerCase() === \"rtl\";\n                }\n            }\n\n            if (!tabsterOnElement) {\n                curElement = getParent(curElement);\n                continue;\n            }\n\n            const tagName = (curElement as HTMLElement).tagName;\n\n            if (\n                (tabsterOnElement.uncontrolled ||\n                    tagName === \"IFRAME\" ||\n                    tagName === \"WEBVIEW\") &&\n                tabster.focusable.isVisible(curElement as HTMLElement)\n            ) {\n                uncontrolled = curElement as HTMLElement;\n            }\n\n            if (\n                !mover &&\n                tabsterOnElement.focusable?.excludeFromMover &&\n                !groupper\n            ) {\n                excludedFromMover = true;\n            }\n\n            const curModalizer = tabsterOnElement.modalizer;\n            const curGroupper = tabsterOnElement.groupper;\n            const curMover = tabsterOnElement.mover;\n\n            if (!modalizer && curModalizer) {\n                modalizer = curModalizer;\n            }\n\n            if (!groupper && curGroupper && (!modalizer || curModalizer)) {\n                if (modalizer) {\n                    // Modalizer dominates the groupper when they are on the same node and the groupper is active.\n                    if (\n                        !curGroupper.isActive() &&\n                        curGroupper.getProps().tabbability &&\n                        modalizer.userId !== tabster.modalizer?.activeId\n                    ) {\n                        modalizer = undefined;\n                        groupper = curGroupper;\n                    }\n\n                    modalizerInGroupper = curGroupper;\n                } else {\n                    groupper = curGroupper;\n                }\n            }\n\n            if (\n                !mover &&\n                curMover &&\n                (!modalizer || curModalizer) &&\n                (!curGroupper || curElement !== element) &&\n                curElement.contains(element) // Mover makes sense only for really inside elements, not for virutal out of the DOM order children.\n            ) {\n                mover = curMover;\n                groupperBeforeMover = !!groupper && groupper !== curGroupper;\n            }\n\n            if (tabsterOnElement.root) {\n                root = tabsterOnElement.root;\n            }\n\n            if (tabsterOnElement.focusable?.ignoreKeydown) {\n                Object.assign(\n                    ignoreKeydown,\n                    tabsterOnElement.focusable.ignoreKeydown\n                );\n            }\n\n            curElement = getParent(curElement);\n        }\n\n        // No root element could be found, try to get an auto root\n        if (!root) {\n            const rootAPI = tabster.root as RootAPI;\n            const autoRoot = rootAPI._autoRoot;\n\n            if (autoRoot) {\n                if (element.ownerDocument?.body) {\n                    root = rootAPI._autoRootCreate();\n                }\n            }\n        }\n\n        if (groupper && !mover) {\n            groupperBeforeMover = true;\n        }\n\n        if (__DEV__ && !root) {\n            if (modalizer || groupper || mover) {\n                console.error(\n                    \"Tabster Root is required for Mover, Groupper and Modalizer to work.\"\n                );\n            }\n        }\n\n        const shouldIgnoreKeydown = (event: KeyboardEvent) =>\n            !!ignoreKeydown[\n                event.key as keyof Types.FocusableProps[\"ignoreKeydown\"]\n            ];\n\n        return root\n            ? {\n                  root,\n                  modalizer,\n                  groupper,\n                  mover,\n                  groupperBeforeMover,\n                  modalizerInGroupper,\n                  rtl: checkRtl ? !!dirRightToLeft : undefined,\n                  uncontrolled,\n                  excludedFromMover,\n                  ignoreKeydown: shouldIgnoreKeydown,\n              }\n            : undefined;\n    }\n\n    static getRoot(\n        tabster: Types.TabsterCore,\n        element: HTMLElement\n    ): Types.Root | undefined {\n        const getParent = tabster.getParent;\n\n        for (\n            let el = element as HTMLElement | null;\n            el;\n            el = getParent(el) as HTMLElement | null\n        ) {\n            const root = getTabsterOnElement(tabster, el)?.root;\n\n            if (root) {\n                return root;\n            }\n        }\n\n        return undefined;\n    }\n\n    onRoot(root: Types.Root, removed?: boolean): void {\n        if (removed) {\n            delete this.rootById[root.uid];\n        } else {\n            this.rootById[root.uid] = root;\n        }\n    }\n\n    private _onRootDispose = (root: Root) => {\n        delete this._roots[root.id];\n    };\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { getTabsterOnElement } from \"./Instance\";\nimport { RootAPI } from \"./Root\";\nimport * as Types from \"./Types\";\nimport { DeloserStrategies, RestoreFocusOrders } from \"./Consts\";\nimport {\n    DeloserFocusLostEvent,\n    DeloserRestoreFocusEvent,\n    DeloserRestoreFocusEventName,\n    TabsterMoveFocusEvent,\n} from \"./Events\";\nimport {\n    documentContains,\n    getElementUId,\n    getPromise,\n    isDisplayNone,\n    TabsterPart,\n    WeakHTMLElement,\n} from \"./Utils\";\nimport { dom } from \"./DOMAPI\";\n\nconst _containerHistoryLength = 10;\n\nexport abstract class DeloserItemBase<C> {\n    abstract resetFocus(): Promise<boolean>;\n    abstract belongsTo(deloser: C): boolean;\n}\n\nexport class DeloserItem extends DeloserItemBase<Types.Deloser> {\n    readonly uid: string;\n    private _tabster: Types.TabsterCore;\n    private _deloser: Types.Deloser;\n\n    constructor(tabster: Types.TabsterCore, deloser: Types.Deloser) {\n        super();\n        this.uid = deloser.uid;\n        this._tabster = tabster;\n        this._deloser = deloser;\n    }\n\n    belongsTo(deloser: Types.Deloser): boolean {\n        return deloser === this._deloser;\n    }\n\n    unshift(element: HTMLElement): void {\n        this._deloser.unshift(element);\n    }\n\n    async focusAvailable(): Promise<boolean | null> {\n        const available = this._deloser.findAvailable();\n        const deloserElement = this._deloser.getElement();\n\n        if (available && deloserElement) {\n            if (\n                !deloserElement.dispatchEvent(\n                    new TabsterMoveFocusEvent({\n                        by: \"deloser\",\n                        owner: deloserElement,\n                        next: available,\n                    })\n                )\n            ) {\n                // Default action is prevented, don't look further.\n                return null;\n            }\n\n            return this._tabster.focusedElement.focus(available);\n        }\n\n        return false;\n    }\n\n    async resetFocus(): Promise<boolean> {\n        const getWindow = this._tabster.getWindow;\n        return getPromise(getWindow).resolve(this._deloser.resetFocus());\n    }\n}\n\nexport abstract class DeloserHistoryByRootBase<\n    I,\n    D extends DeloserItemBase<I>,\n> {\n    protected _tabster: Types.TabsterCore;\n    protected _history: D[] = [];\n    readonly rootUId: string;\n\n    constructor(tabster: Types.TabsterCore, rootUId: string) {\n        this._tabster = tabster;\n        this.rootUId = rootUId;\n    }\n\n    getLength(): number {\n        return this._history.length;\n    }\n\n    removeDeloser(deloser: I): void {\n        this._history = this._history.filter((c) => !c.belongsTo(deloser));\n    }\n\n    hasDeloser(deloser: I): boolean {\n        return this._history.some((d) => d.belongsTo(deloser));\n    }\n\n    abstract focusAvailable(from: I | null): Promise<boolean | null>;\n    abstract resetFocus(from: I | null): Promise<boolean>;\n}\n\nclass DeloserHistoryByRoot extends DeloserHistoryByRootBase<\n    Types.Deloser,\n    DeloserItem\n> {\n    unshiftToDeloser(deloser: Types.Deloser, element: HTMLElement): void {\n        let item: DeloserItem | undefined;\n\n        for (let i = 0; i < this._history.length; i++) {\n            if (this._history[i].belongsTo(deloser)) {\n                item = this._history[i];\n                this._history.splice(i, 1);\n                break;\n            }\n        }\n\n        if (!item) {\n            item = new DeloserItem(this._tabster, deloser);\n        }\n\n        item.unshift(element);\n\n        this._history.unshift(item);\n\n        this._history.splice(\n            _containerHistoryLength,\n            this._history.length - _containerHistoryLength\n        );\n    }\n\n    async focusAvailable(from: Types.Deloser | null): Promise<boolean | null> {\n        let skip = !!from;\n\n        for (const i of this._history) {\n            if (from && i.belongsTo(from)) {\n                skip = false;\n            }\n\n            if (!skip) {\n                const result = await i.focusAvailable();\n\n                // Result is null when the default action is prevented by the application\n                // and we don't need to look further.\n                if (result || result === null) {\n                    return result;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    async resetFocus(from: Types.Deloser | null): Promise<boolean> {\n        let skip = !!from;\n        const resetQueue: { [id: string]: DeloserItem } = {};\n\n        for (const i of this._history) {\n            if (from && i.belongsTo(from)) {\n                skip = false;\n            }\n\n            if (!skip && !resetQueue[i.uid]) {\n                resetQueue[i.uid] = i;\n            }\n        }\n\n        // Nothing is found, at least try to reset.\n        for (const id of Object.keys(resetQueue)) {\n            if (await resetQueue[id].resetFocus()) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}\n\nexport class DeloserHistory {\n    private _tabster: Types.TabsterCore;\n    private _history: DeloserHistoryByRootBase<\n        unknown,\n        DeloserItemBase<unknown>\n    >[] = [];\n\n    constructor(tabster: Types.TabsterCore) {\n        this._tabster = tabster;\n    }\n\n    dispose(): void {\n        this._history = [];\n    }\n\n    process(element: HTMLElement): Types.Deloser | undefined {\n        const ctx = RootAPI.getTabsterContext(this._tabster, element);\n        const rootUId = ctx && ctx.root.uid;\n        const deloser = DeloserAPI.getDeloser(this._tabster, element);\n\n        if (!rootUId || !deloser) {\n            return undefined;\n        }\n\n        const historyByRoot = this.make(\n            rootUId,\n            () => new DeloserHistoryByRoot(this._tabster, rootUId)\n        );\n\n        if (!ctx || !ctx.modalizer || ctx.modalizer?.isActive()) {\n            historyByRoot.unshiftToDeloser(deloser, element);\n        }\n\n        return deloser;\n    }\n\n    make<\n        I,\n        D extends DeloserItemBase<I>,\n        C extends DeloserHistoryByRootBase<I, D>,\n    >(rootUId: string, createInstance: () => C): C {\n        let historyByRoot: C | undefined;\n\n        for (let i = 0; i < this._history.length; i++) {\n            const hbr = this._history[i] as C;\n\n            if (hbr.rootUId === rootUId) {\n                historyByRoot = hbr;\n                this._history.splice(i, 1);\n                break;\n            }\n        }\n\n        if (!historyByRoot) {\n            historyByRoot = createInstance();\n        }\n\n        this._history.unshift(historyByRoot);\n\n        this._history.splice(\n            _containerHistoryLength,\n            this._history.length - _containerHistoryLength\n        );\n\n        return historyByRoot;\n    }\n\n    removeDeloser(deloser: Types.Deloser): void {\n        this._history.forEach((i) => {\n            i.removeDeloser(deloser);\n        });\n\n        this._history = this._history.filter((i) => i.getLength() > 0);\n    }\n\n    async focusAvailable(from: Types.Deloser | null): Promise<boolean | null> {\n        let skip = !!from;\n\n        for (const h of this._history) {\n            if (from && h.hasDeloser(from)) {\n                skip = false;\n            }\n\n            if (!skip) {\n                const result = await h.focusAvailable(from);\n\n                // Result is null when the default action is prevented by the application\n                // and we don't need to look further.\n                if (result || result === null) {\n                    return result;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    async resetFocus(from: Types.Deloser | null): Promise<boolean> {\n        let skip = !!from;\n\n        for (const h of this._history) {\n            if (from && h.hasDeloser(from)) {\n                skip = false;\n            }\n\n            if (!skip && (await h.resetFocus(from))) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}\n\nfunction _setInformativeStyle(\n    weakElement: WeakHTMLElement,\n    remove: boolean,\n    isActive?: boolean,\n    snapshotIndex?: number\n): void {\n    if (__DEV__) {\n        const element = weakElement.get();\n\n        if (element) {\n            if (remove) {\n                element.style.removeProperty(\"--tabster-deloser\");\n            } else {\n                element.style.setProperty(\n                    \"--tabster-deloser\",\n                    (isActive ? \"active\" : \"inactive\") +\n                        \",\" +\n                        (\"snapshot-\" + snapshotIndex)\n                );\n            }\n        }\n    }\n}\n\nfunction buildElementSelector(\n    element: HTMLElement,\n    withClass?: boolean,\n    withIndex?: boolean\n): string {\n    const selector: string[] = [];\n    const escapeRegExp = /(:|\\.|\\[|\\]|,|=|@)/g;\n    const escapeReplaceValue = \"\\\\$1\";\n\n    const elementId = element.getAttribute(\"id\");\n\n    if (elementId) {\n        selector.push(\n            \"#\" + elementId.replace(escapeRegExp, escapeReplaceValue)\n        );\n    }\n\n    if (withClass !== false && element.className) {\n        element.className.split(\" \").forEach((cls) => {\n            cls = cls.trim();\n\n            if (cls) {\n                selector.push(\n                    \".\" + cls.replace(escapeRegExp, escapeReplaceValue)\n                );\n            }\n        });\n    }\n\n    let index = 0;\n    let el: Element | null;\n\n    if (withIndex !== false && selector.length === 0) {\n        el = element;\n        while (el) {\n            index++;\n            el = el.previousElementSibling;\n        }\n        selector.unshift(\":nth-child(\" + index + \")\");\n    }\n\n    selector.unshift(element.tagName.toLowerCase());\n\n    return selector.join(\"\");\n}\n\nfunction buildSelector(element: HTMLElement): string | undefined {\n    if (!documentContains(element.ownerDocument, element)) {\n        return undefined;\n    }\n\n    const selector: string[] = [buildElementSelector(element)];\n\n    let node = dom.getParentNode(element);\n\n    while (node && node.nodeType !== Node.DOCUMENT_FRAGMENT_NODE) {\n        // Stop at the shadow root as cross shadow selectors won't work.\n        if (node.nodeType === Node.ELEMENT_NODE) {\n            const isBody = (node as HTMLElement).tagName === \"BODY\";\n\n            selector.unshift(\n                buildElementSelector(node as HTMLElement, false, !isBody)\n            );\n\n            if (isBody) {\n                break;\n            }\n        }\n\n        node = dom.getParentNode(node);\n    }\n\n    return selector.join(\" \");\n}\n\nexport class Deloser\n    extends TabsterPart<Types.DeloserProps>\n    implements Types.Deloser\n{\n    readonly uid: string;\n    readonly strategy: Types.DeloserStrategy;\n    private _isActive = false;\n    private _history: WeakHTMLElement<HTMLElement, string>[][] = [[]];\n    private _snapshotIndex = 0;\n    private _onDispose: (deloser: Deloser) => void;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: HTMLElement,\n        onDispose: (deloser: Deloser) => void,\n        props: Types.DeloserProps\n    ) {\n        super(tabster, element, props);\n\n        this.uid = getElementUId(tabster.getWindow, element);\n        this.strategy = props.strategy || DeloserStrategies.Auto;\n        this._onDispose = onDispose;\n\n        if (__DEV__) {\n            _setInformativeStyle(\n                this._element,\n                false,\n                this._isActive,\n                this._snapshotIndex\n            );\n        }\n    }\n\n    dispose(): void {\n        this._remove();\n\n        this._onDispose(this);\n\n        this._isActive = false;\n        this._snapshotIndex = 0;\n\n        this._props = {};\n        this._history = [];\n    }\n\n    isActive = (): boolean => {\n        return this._isActive;\n    };\n\n    setActive(active: boolean): void {\n        this._isActive = active;\n\n        if (__DEV__) {\n            _setInformativeStyle(\n                this._element,\n                false,\n                this._isActive,\n                this._snapshotIndex\n            );\n        }\n    }\n\n    getActions(): Types.DeloserElementActions {\n        return {\n            focusDefault: this.focusDefault,\n            focusFirst: this.focusFirst,\n            resetFocus: this.resetFocus,\n            clearHistory: this.clearHistory,\n            setSnapshot: this.setSnapshot,\n            isActive: this.isActive,\n        };\n    }\n\n    setSnapshot = (index: number): void => {\n        this._snapshotIndex = index;\n\n        if (this._history.length > index + 1) {\n            this._history.splice(index + 1, this._history.length - index - 1);\n        }\n\n        if (!this._history[index]) {\n            this._history[index] = [];\n        }\n\n        if (__DEV__) {\n            _setInformativeStyle(\n                this._element,\n                false,\n                this._isActive,\n                this._snapshotIndex\n            );\n        }\n    };\n\n    focusFirst = (): boolean => {\n        const e = this._element.get();\n        return !!e && this._tabster.focusedElement.focusFirst({ container: e });\n    };\n\n    unshift(element: HTMLElement): void {\n        let cur = this._history[this._snapshotIndex];\n\n        cur = this._history[this._snapshotIndex] = cur.filter((we) => {\n            const e = we.get();\n            return e && e !== element;\n        });\n\n        cur.unshift(\n            new WeakHTMLElement(\n                this._tabster.getWindow,\n                element,\n                buildSelector(element)\n            )\n        );\n\n        while (cur.length > _containerHistoryLength) {\n            cur.pop();\n        }\n    }\n\n    focusDefault = (): boolean => {\n        const e = this._element.get();\n        return !!e && this._tabster.focusedElement.focusDefault(e);\n    };\n\n    resetFocus = (): boolean => {\n        const e = this._element.get();\n        return !!e && this._tabster.focusedElement.resetFocus(e);\n    };\n\n    findAvailable(): HTMLElement | null {\n        const element = this._element.get();\n\n        if (!element || !this._tabster.focusable.isVisible(element)) {\n            return null;\n        }\n\n        let restoreFocusOrder = this._props.restoreFocusOrder;\n        let available: HTMLElement | null = null;\n\n        const ctx = RootAPI.getTabsterContext(this._tabster, element);\n\n        if (!ctx) {\n            return null;\n        }\n\n        const root = ctx.root;\n        const rootElement = root.getElement();\n\n        if (!rootElement) {\n            return null;\n        }\n\n        if (restoreFocusOrder === undefined) {\n            restoreFocusOrder = root.getProps().restoreFocusOrder;\n        }\n\n        if (restoreFocusOrder === RestoreFocusOrders.RootDefault) {\n            available = this._tabster.focusable.findDefault({\n                container: rootElement,\n            });\n        }\n\n        if (!available && restoreFocusOrder === RestoreFocusOrders.RootFirst) {\n            available = this._findFirst(rootElement);\n        }\n\n        if (available) {\n            return available;\n        }\n\n        const availableInHistory = this._findInHistory();\n\n        if (\n            availableInHistory &&\n            restoreFocusOrder === RestoreFocusOrders.History\n        ) {\n            return availableInHistory;\n        }\n\n        const availableDefault = this._tabster.focusable.findDefault({\n            container: element,\n        });\n\n        if (\n            availableDefault &&\n            restoreFocusOrder === RestoreFocusOrders.DeloserDefault\n        ) {\n            return availableDefault;\n        }\n\n        const availableFirst = this._findFirst(element);\n\n        if (\n            availableFirst &&\n            restoreFocusOrder === RestoreFocusOrders.DeloserFirst\n        ) {\n            return availableFirst;\n        }\n\n        return availableDefault || availableInHistory || availableFirst || null;\n    }\n\n    clearHistory = (preserveExisting?: boolean): void => {\n        const element = this._element.get();\n\n        if (!element) {\n            this._history[this._snapshotIndex] = [];\n\n            return;\n        }\n\n        this._history[this._snapshotIndex] = this._history[\n            this._snapshotIndex\n        ].filter((we) => {\n            const e = we.get();\n            return e && preserveExisting ? dom.nodeContains(element, e) : false;\n        });\n    };\n\n    customFocusLostHandler(element: HTMLElement): boolean {\n        return element.dispatchEvent(\n            new DeloserFocusLostEvent(this.getActions())\n        );\n    }\n\n    private _findInHistory(): HTMLElement | null {\n        const cur = this._history[this._snapshotIndex].slice(0);\n\n        this.clearHistory(true);\n\n        for (let i = 0; i < cur.length; i++) {\n            const we = cur[i];\n            const e = we.get();\n            const element = this._element.get();\n\n            if (e && element && dom.nodeContains(element, e)) {\n                if (this._tabster.focusable.isFocusable(e)) {\n                    return e;\n                }\n            } else if (!this._props.noSelectorCheck) {\n                // Element is not in the DOM, try to locate the node by it's\n                // selector. This might return not exactly the right node,\n                // but it would be easily fixable by having more detailed selectors.\n                const selector = we.getData();\n\n                if (selector && element) {\n                    let els: Element[];\n\n                    try {\n                        els = dom.querySelectorAll(\n                            element.ownerDocument,\n                            selector\n                        );\n                        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                    } catch (e) {\n                        if (__DEV__) {\n                            // This should never happen, unless there is some bug in buildElementSelector().\n                            console.error(\n                                `Failed to querySelectorAll('${selector}')`\n                            );\n                        }\n                        continue;\n                    }\n\n                    for (let i = 0; i < els.length; i++) {\n                        const el = els[i] as HTMLElement;\n\n                        if (el && this._tabster.focusable.isFocusable(el)) {\n                            return el;\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n\n    private _findFirst(element: HTMLElement): HTMLElement | null {\n        if (this._tabster.keyboardNavigation.isNavigatingWithKeyboard()) {\n            const first = this._tabster.focusable.findFirst({\n                container: element,\n                useActiveModalizer: true,\n            });\n\n            if (first) {\n                return first;\n            }\n        }\n\n        return null;\n    }\n\n    private _remove(): void {\n        if (__DEV__) {\n            _setInformativeStyle(this._element, true);\n        }\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction validateDeloserProps(props: Types.DeloserProps): void {\n    // TODO: Implement validation.\n}\n\nexport class DeloserAPI implements Types.DeloserAPI {\n    private _tabster: Types.TabsterCore;\n    private _win: Types.GetWindow;\n    /**\n     * Tracks if focus is inside a deloser\n     */\n    private _inDeloser = false;\n    private _curDeloser: Types.Deloser | undefined;\n    private _history: DeloserHistory;\n    private _restoreFocusTimer: number | undefined;\n    private _isRestoringFocus = false;\n    private _isPaused = false;\n    private _autoDeloser: Types.DeloserProps | undefined;\n    private _autoDeloserInstance: Deloser | undefined;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        props?: { autoDeloser: Types.DeloserProps }\n    ) {\n        this._tabster = tabster;\n        this._win = tabster.getWindow;\n        this._history = new DeloserHistory(tabster);\n\n        tabster.queueInit(() => {\n            this._tabster.focusedElement.subscribe(this._onFocus);\n            const doc = this._win().document;\n\n            doc.addEventListener(\n                DeloserRestoreFocusEventName,\n                this._onRestoreFocus\n            );\n\n            const activeElement = dom.getActiveElement(doc);\n\n            if (activeElement && activeElement !== doc.body) {\n                // Adding currently focused element to the deloser history.\n                this._onFocus(activeElement as HTMLElement);\n            }\n        });\n\n        const autoDeloser = props?.autoDeloser;\n        if (autoDeloser) {\n            this._autoDeloser = autoDeloser;\n        }\n    }\n\n    dispose(): void {\n        const win = this._win();\n\n        if (this._restoreFocusTimer) {\n            win.clearTimeout(this._restoreFocusTimer);\n            this._restoreFocusTimer = undefined;\n        }\n\n        if (this._autoDeloserInstance) {\n            this._autoDeloserInstance.dispose();\n            delete this._autoDeloserInstance;\n            delete this._autoDeloser;\n        }\n\n        this._tabster.focusedElement.unsubscribe(this._onFocus);\n\n        win.document.removeEventListener(\n            DeloserRestoreFocusEventName,\n            this._onRestoreFocus\n        );\n\n        this._history.dispose();\n\n        delete this._curDeloser;\n    }\n\n    createDeloser(\n        element: HTMLElement,\n        props: Types.DeloserProps\n    ): Types.Deloser {\n        if (__DEV__) {\n            validateDeloserProps(props);\n        }\n\n        const deloser = new Deloser(\n            this._tabster,\n            element,\n            this._onDeloserDispose,\n            props\n        );\n\n        if (\n            dom.nodeContains(\n                element,\n                this._tabster.focusedElement.getFocusedElement() ?? null\n            )\n        ) {\n            this._activate(deloser);\n        }\n\n        return deloser;\n    }\n\n    getActions(element: HTMLElement): Types.DeloserElementActions | undefined {\n        for (\n            let e: HTMLElement | null = element;\n            e;\n            e = dom.getParentElement(e)\n        ) {\n            const tabsterOnElement = getTabsterOnElement(this._tabster, e);\n\n            if (tabsterOnElement && tabsterOnElement.deloser) {\n                return tabsterOnElement.deloser.getActions();\n            }\n        }\n\n        return undefined;\n    }\n\n    pause(): void {\n        this._isPaused = true;\n\n        if (this._restoreFocusTimer) {\n            this._win().clearTimeout(this._restoreFocusTimer);\n            this._restoreFocusTimer = undefined;\n        }\n    }\n\n    resume(restore?: boolean): void {\n        this._isPaused = false;\n\n        if (restore) {\n            this._scheduleRestoreFocus();\n        }\n    }\n\n    private _onRestoreFocus = (event: DeloserRestoreFocusEvent): void => {\n        const target = event.composedPath()[0] as\n            | HTMLElement\n            | null\n            | undefined;\n\n        if (target) {\n            const available = DeloserAPI.getDeloser(\n                this._tabster,\n                target\n            )?.findAvailable();\n\n            if (available) {\n                this._tabster.focusedElement.focus(available);\n            }\n\n            event.stopImmediatePropagation();\n        }\n    };\n\n    private _onFocus = (e: HTMLElement | undefined): void => {\n        if (this._restoreFocusTimer) {\n            this._win().clearTimeout(this._restoreFocusTimer);\n            this._restoreFocusTimer = undefined;\n        }\n\n        if (!e) {\n            this._scheduleRestoreFocus();\n\n            return;\n        }\n\n        const deloser = this._history.process(e);\n\n        if (deloser) {\n            this._activate(deloser);\n        } else {\n            this._deactivate();\n        }\n    };\n\n    /**\n     * Activates and sets the current deloser\n     */\n    private _activate(deloser: Types.Deloser) {\n        const curDeloser = this._curDeloser;\n        if (curDeloser !== deloser) {\n            this._inDeloser = true;\n            curDeloser?.setActive(false);\n            deloser.setActive(true);\n            this._curDeloser = deloser;\n        }\n    }\n\n    /**\n     * Called when focus should no longer be in a deloser\n     */\n    private _deactivate() {\n        this._inDeloser = false;\n        this._curDeloser?.setActive(false);\n        this._curDeloser = undefined;\n    }\n\n    private _scheduleRestoreFocus(force?: boolean): void {\n        if (this._isPaused || this._isRestoringFocus) {\n            return;\n        }\n\n        const restoreFocus = async () => {\n            this._restoreFocusTimer = undefined;\n            const lastFocused =\n                this._tabster.focusedElement.getLastFocusedElement();\n\n            if (\n                !force &&\n                (this._isRestoringFocus ||\n                    !this._inDeloser ||\n                    (lastFocused && !isDisplayNone(lastFocused)))\n            ) {\n                return;\n            }\n\n            const curDeloser = this._curDeloser;\n            let isManual = false;\n\n            if (curDeloser) {\n                if (\n                    lastFocused &&\n                    curDeloser.customFocusLostHandler(lastFocused)\n                ) {\n                    return;\n                }\n\n                if (curDeloser.strategy === DeloserStrategies.Manual) {\n                    isManual = true;\n                } else {\n                    const curDeloserElement = curDeloser.getElement();\n                    const el = curDeloser.findAvailable();\n\n                    if (\n                        el &&\n                        (!curDeloserElement?.dispatchEvent(\n                            new TabsterMoveFocusEvent({\n                                by: \"deloser\",\n                                owner: curDeloserElement,\n                                next: el,\n                            })\n                        ) ||\n                            this._tabster.focusedElement.focus(el))\n                    ) {\n                        return;\n                    }\n                }\n            }\n\n            this._deactivate();\n\n            if (isManual) {\n                return;\n            }\n\n            this._isRestoringFocus = true;\n\n            // focusAvailable returns null when the default action is prevented by the application, false\n            // when nothing was focused and true when something was focused.\n            if ((await this._history.focusAvailable(null)) === false) {\n                await this._history.resetFocus(null);\n            }\n\n            this._isRestoringFocus = false;\n        };\n\n        if (force) {\n            restoreFocus();\n        } else {\n            this._restoreFocusTimer = this._win().setTimeout(restoreFocus, 100);\n        }\n    }\n\n    static getDeloser(\n        tabster: Types.TabsterCore,\n        element: HTMLElement\n    ): Types.Deloser | undefined {\n        let root: Types.Root | undefined;\n\n        for (\n            let e: HTMLElement | null = element;\n            e;\n            e = dom.getParentElement(e)\n        ) {\n            const tabsterOnElement = getTabsterOnElement(tabster, e);\n\n            if (tabsterOnElement) {\n                if (!root) {\n                    root = tabsterOnElement.root;\n                }\n\n                const deloser = tabsterOnElement.deloser;\n\n                if (deloser) {\n                    return deloser;\n                }\n            }\n        }\n\n        const deloserAPI = tabster.deloser && (tabster.deloser as DeloserAPI);\n\n        if (deloserAPI) {\n            if (deloserAPI._autoDeloserInstance) {\n                return deloserAPI._autoDeloserInstance;\n            }\n\n            const autoDeloserProps = deloserAPI._autoDeloser;\n\n            if (root && !deloserAPI._autoDeloserInstance && autoDeloserProps) {\n                const body = element.ownerDocument?.body;\n\n                if (body) {\n                    deloserAPI._autoDeloserInstance = new Deloser(\n                        tabster,\n                        body,\n                        (tabster.deloser as DeloserAPI)._onDeloserDispose,\n                        autoDeloserProps\n                    );\n                }\n            }\n\n            return deloserAPI._autoDeloserInstance;\n        }\n\n        return undefined;\n    }\n\n    private _onDeloserDispose = (deloser: Deloser) => {\n        this._history.removeDeloser(deloser);\n\n        if (deloser.isActive()) {\n            this._scheduleRestoreFocus();\n        }\n    };\n\n    static getHistory(instance: Types.DeloserAPI): DeloserHistory {\n        return (instance as DeloserAPI)._history;\n    }\n\n    static forceRestoreFocus(instance: Types.DeloserAPI): void {\n        (instance as DeloserAPI)._scheduleRestoreFocus(true);\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport * as Types from \"../Types\";\n\nexport abstract class Subscribable<A, B = undefined>\n    implements Types.Subscribable<A, B>\n{\n    protected _val: A | undefined;\n    private _callbacks: Types.SubscribableCallback<A, B>[] = [];\n\n    dispose(): void {\n        this._callbacks = [];\n        delete this._val;\n    }\n\n    subscribe(callback: Types.SubscribableCallback<A, B>): void {\n        const callbacks = this._callbacks;\n        const index = callbacks.indexOf(callback);\n\n        if (index < 0) {\n            callbacks.push(callback);\n        }\n    }\n\n    subscribeFirst(callback: Types.SubscribableCallback<A, B>): void {\n        const callbacks = this._callbacks;\n        const index = callbacks.indexOf(callback);\n\n        if (index >= 0) {\n            callbacks.splice(index, 1);\n        }\n\n        callbacks.unshift(callback);\n    }\n\n    unsubscribe(callback: Types.SubscribableCallback<A, B>): void {\n        const index = this._callbacks.indexOf(callback);\n\n        if (index >= 0) {\n            this._callbacks.splice(index, 1);\n        }\n    }\n\n    protected setVal(val: A, detail: B): void {\n        if (this._val === val) {\n            return;\n        }\n\n        this._val = val;\n\n        this._callCallbacks(val, detail);\n    }\n\n    protected getVal(): A | undefined {\n        return this._val;\n    }\n\n    protected trigger(val: A, detail: B): void {\n        this._callCallbacks(val, detail);\n    }\n\n    private _callCallbacks(val: A, detail: B): void {\n        this._callbacks.forEach((callback) => callback(val, detail));\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    DeloserAPI,\n    DeloserHistoryByRootBase,\n    DeloserItemBase,\n} from \"./Deloser\";\nimport { getTabsterOnElement } from \"./Instance\";\nimport { RootAPI } from \"./Root\";\nimport { Subscribable } from \"./State/Subscribable\";\nimport * as Types from \"./Types\";\nimport { ObservedElementAccessibilities } from \"./Consts\";\nimport {\n    getElementUId,\n    getInstanceContext,\n    getPromise,\n    getUId,\n    getWindowUId,\n    HTMLElementWithUID,\n} from \"./Utils\";\nimport { dom } from \"./DOMAPI\";\n\nconst _transactionTimeout = 1500;\nconst _pingTimeout = 3000;\n\nconst _targetIdUp = \"up\";\n\nconst CrossOriginTransactionTypes: Types.CrossOriginTransactionTypes = {\n    Bootstrap: 1,\n    FocusElement: 2,\n    State: 3,\n    GetElement: 4,\n    RestoreFocusInDeloser: 5,\n    Ping: 6,\n};\n\ninterface CrossOriginInstanceContext {\n    ignoreKeyboardNavigationStateUpdate: boolean;\n    focusOwner?: string;\n    focusOwnerTimestamp?: number;\n    deloserByUId: { [uid: string]: Types.Deloser };\n    origOutlineSetup?: (props?: Partial<Types.OutlineProps>) => void;\n}\n\ninterface KnownTargets {\n    [id: string]: {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        send: (payload: Types.CrossOriginTransactionData<any, any>) => void;\n        last?: number;\n    };\n}\n\nclass CrossOriginDeloserItem extends DeloserItemBase<CrossOriginDeloser> {\n    private _deloser: CrossOriginDeloser;\n    private _transactions: CrossOriginTransactions;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        deloser: CrossOriginDeloser,\n        trasactions: CrossOriginTransactions\n    ) {\n        super();\n        this._deloser = deloser;\n        this._transactions = trasactions;\n    }\n\n    belongsTo(deloser: CrossOriginDeloser): boolean {\n        return deloser.deloserUId === this._deloser.deloserUId;\n    }\n\n    async focusAvailable(): Promise<boolean | null> {\n        const data: RestoreFocusInDeloserTransactionData = {\n            ...this._deloser,\n            reset: false,\n        };\n\n        return this._transactions\n            .beginTransaction(RestoreFocusInDeloserTransaction, data)\n            .then((value) => !!value);\n    }\n\n    async resetFocus(): Promise<boolean> {\n        const data: RestoreFocusInDeloserTransactionData = {\n            ...this._deloser,\n            reset: true,\n        };\n\n        return this._transactions\n            .beginTransaction(RestoreFocusInDeloserTransaction, data)\n            .then((value) => !!value);\n    }\n}\n\nclass CrossOriginDeloserHistoryByRoot extends DeloserHistoryByRootBase<\n    CrossOriginDeloser,\n    CrossOriginDeloserItem\n> {\n    private _transactions: CrossOriginTransactions;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        rootUId: string,\n        transactions: CrossOriginTransactions\n    ) {\n        super(tabster, rootUId);\n        this._transactions = transactions;\n    }\n\n    unshift(deloser: CrossOriginDeloser): void {\n        let item: CrossOriginDeloserItem | undefined;\n\n        for (let i = 0; i < this._history.length; i++) {\n            if (this._history[i].belongsTo(deloser)) {\n                item = this._history[i];\n                this._history.splice(i, 1);\n                break;\n            }\n        }\n\n        if (!item) {\n            item = new CrossOriginDeloserItem(\n                this._tabster,\n                deloser,\n                this._transactions\n            );\n        }\n\n        this._history.unshift(item);\n\n        this._history.splice(10, this._history.length - 10);\n    }\n\n    async focusAvailable(): Promise<boolean | null> {\n        for (const i of this._history) {\n            if (await i.focusAvailable()) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    async resetFocus(): Promise<boolean> {\n        for (const i of this._history) {\n            if (await i.resetFocus()) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}\n\nabstract class CrossOriginTransaction<I, O> {\n    abstract type: Types.CrossOriginTransactionType;\n    readonly id: string;\n    readonly beginData: I;\n    readonly timeout?: number;\n    protected tabster: Types.TabsterCore;\n    protected endData: O | undefined;\n    protected owner: Types.GetWindow;\n    protected ownerId: string;\n    protected sendUp: Types.CrossOriginTransactionSend | undefined;\n    private _promise: Promise<O>;\n    protected _resolve: ((endData?: O | PromiseLike<O>) => void) | undefined;\n    private _reject: ((reason: string) => void) | undefined;\n    private _knownTargets: KnownTargets;\n    private _sentTo: Types.CrossOriginSentTo;\n    protected targetId: string | undefined;\n    private _inProgress: { [id: string]: boolean } = {};\n    private _isDone = false;\n    private _isSelfResponding = false;\n    private _sentCount = 0;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        getOwner: Types.GetWindow,\n        knownTargets: KnownTargets,\n        value: I,\n        timeout?: number,\n        sentTo?: Types.CrossOriginSentTo,\n        targetId?: string,\n        sendUp?: Types.CrossOriginTransactionSend\n    ) {\n        this.tabster = tabster;\n        this.owner = getOwner;\n        this.ownerId = getWindowUId(getOwner());\n        this.id = getUId(getOwner());\n        this.beginData = value;\n        this._knownTargets = knownTargets;\n        this._sentTo = sentTo || { [this.ownerId]: true };\n        this.targetId = targetId;\n        this.sendUp = sendUp;\n        this.timeout = timeout;\n        this._promise = new (getPromise(getOwner))<O>((resolve, reject) => {\n            this._resolve = resolve;\n            this._reject = reject;\n        });\n    }\n\n    protected getTargets(knownTargets: KnownTargets): KnownTargets | null {\n        return this.targetId === _targetIdUp\n            ? this.sendUp\n                ? { [_targetIdUp]: { send: this.sendUp } }\n                : null\n            : this.targetId\n              ? knownTargets[this.targetId]\n                  ? {\n                        [this.targetId]: {\n                            send: knownTargets[this.targetId].send,\n                        },\n                    }\n                  : null\n              : Object.keys(knownTargets).length === 0 && this.sendUp\n                ? { [_targetIdUp]: { send: this.sendUp } }\n                : Object.keys(knownTargets).length > 0\n                  ? knownTargets\n                  : null;\n    }\n\n    begin(\n        selfResponse?: (\n            data: Types.CrossOriginTransactionData<I, O>\n        ) => Promise<O | undefined>\n    ): Promise<O | undefined> {\n        const targets = this.getTargets(this._knownTargets);\n        const sentTo: Types.CrossOriginSentTo = { ...this._sentTo };\n\n        if (targets) {\n            for (const id of Object.keys(targets)) {\n                sentTo[id] = true;\n            }\n        }\n\n        const data: Types.CrossOriginTransactionData<I, O> = {\n            transaction: this.id,\n            type: this.type,\n            isResponse: false,\n            timestamp: Date.now(),\n            owner: this.ownerId,\n            sentto: sentTo,\n            timeout: this.timeout,\n            beginData: this.beginData,\n        };\n\n        if (this.targetId) {\n            data.target = this.targetId;\n        }\n\n        if (selfResponse) {\n            this._isSelfResponding = true;\n\n            selfResponse(data).then((value) => {\n                this._isSelfResponding = false;\n\n                if (value !== undefined) {\n                    if (!this.endData) {\n                        this.endData = value;\n                    }\n                }\n\n                if (this.endData || this._sentCount === 0) {\n                    this.end();\n                }\n            });\n        }\n\n        if (targets) {\n            for (const id of Object.keys(targets)) {\n                if (!(id in this._sentTo)) {\n                    this._send(targets[id].send, id, data);\n                }\n            }\n        }\n\n        if (this._sentCount === 0 && !this._isSelfResponding) {\n            this.end();\n        }\n\n        return this._promise;\n    }\n\n    private _send(\n        send: (data: Types.CrossOriginTransactionData<I, O>) => void,\n        targetId: string,\n        data: Types.CrossOriginTransactionData<I, O>\n    ) {\n        if (this._inProgress[targetId] === undefined) {\n            this._inProgress[targetId] = true;\n            this._sentCount++;\n            send(data);\n        }\n    }\n\n    end(error?: string): void {\n        if (this._isDone) {\n            return;\n        }\n\n        this._isDone = true;\n\n        if (this.endData === undefined && error) {\n            if (this._reject) {\n                this._reject(error);\n            }\n        } else if (this._resolve) {\n            this._resolve(this.endData);\n        }\n    }\n\n    onResponse(data: Types.CrossOriginTransactionData<I, O>): void {\n        const endData = data.endData;\n\n        if (endData !== undefined && !this.endData) {\n            this.endData = endData;\n        }\n\n        const inProgressId =\n            data.target === _targetIdUp ? _targetIdUp : data.owner;\n\n        if (this._inProgress[inProgressId]) {\n            this._inProgress[inProgressId] = false;\n            this._sentCount--;\n\n            if (\n                this.endData ||\n                (this._sentCount === 0 && !this._isSelfResponding)\n            ) {\n                this.end();\n            }\n        }\n    }\n}\n\ninterface CrossOriginTransactionClass<I, O> {\n    new (\n        tabster: Types.TabsterCore,\n        getOwner: Types.GetWindow,\n        knownTargets: KnownTargets,\n        value: I,\n        timeout?: number,\n        sentTo?: Types.CrossOriginSentTo,\n        targetId?: string,\n        sendUp?: Types.CrossOriginTransactionSend\n    ): CrossOriginTransaction<I, O>;\n    shouldForward?(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<I, O>,\n        getOwner: Types.GetWindow,\n        ownerId: string\n    ): boolean;\n    makeResponse(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<I, O>,\n        getOwner: Types.GetWindow,\n        ownerId: string,\n        transactions: CrossOriginTransactions,\n        forwardResult: Promise<O | undefined>,\n        isSelfResponse?: boolean\n    ): Promise<O>;\n    shouldSelfRespond?(\n        tabster: Types.TabsterCore,\n        data: I,\n        getOwner: Types.GetWindow,\n        ownerId: string\n    ): boolean;\n}\n\ninterface BootstrapTransactionContents {\n    isNavigatingWithKeyboard: boolean;\n}\n\nclass BootstrapTransaction extends CrossOriginTransaction<\n    undefined,\n    BootstrapTransactionContents\n> {\n    type = CrossOriginTransactionTypes.Bootstrap;\n\n    static shouldForward() {\n        return false;\n    }\n\n    static async makeResponse(\n        tabster: Types.TabsterCore\n    ): Promise<BootstrapTransactionContents> {\n        return {\n            isNavigatingWithKeyboard:\n                tabster.keyboardNavigation.isNavigatingWithKeyboard(),\n        };\n    }\n}\n\ninterface CrossOriginElementDataIn {\n    uid?: string;\n    id?: string;\n    rootId?: string;\n    ownerId?: string;\n    observedName?: string;\n    /**\n     * Optionally wait if the element is accessible or focusable before returning it\n     */\n    accessibility?: Types.ObservedElementAccessibility;\n}\n\ninterface FocusElementData extends CrossOriginElementDataIn {\n    noFocusedProgrammaticallyFlag?: boolean;\n    noAccessibleCheck?: boolean;\n}\n\nclass FocusElementTransaction extends CrossOriginTransaction<\n    FocusElementData,\n    boolean\n> {\n    type = CrossOriginTransactionTypes.FocusElement;\n\n    static shouldSelfRespond() {\n        return true;\n    }\n\n    static shouldForward(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<FocusElementData, boolean>,\n        getOwner: Types.GetWindow\n    ): boolean {\n        const el = GetElementTransaction.findElement(\n            tabster,\n            getOwner,\n            data.beginData\n        );\n        return !el || !tabster.focusable.isFocusable(el);\n    }\n\n    static async makeResponse(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<FocusElementData, boolean>,\n        getOwner: Types.GetWindow,\n        ownerId: string,\n        transactions: CrossOriginTransactions,\n        forwardResult: Promise<boolean | undefined>\n    ): Promise<boolean> {\n        const el = GetElementTransaction.findElement(\n            tabster,\n            getOwner,\n            data.beginData\n        );\n        return (\n            (!!el && tabster.focusedElement.focus(el, true)) ||\n            !!(await forwardResult)\n        );\n    }\n}\n\nconst CrossOriginStates: {\n    Focused: 1;\n    Blurred: 2;\n    Observed: 3;\n    DeadWindow: 4;\n    KeyboardNavigation: 5;\n    Outline: 6;\n} = {\n    Focused: 1,\n    Blurred: 2,\n    Observed: 3,\n    DeadWindow: 4,\n    KeyboardNavigation: 5,\n    Outline: 6,\n};\ntype CrossOriginState =\n    (typeof CrossOriginStates)[keyof typeof CrossOriginStates];\n\ninterface CrossOriginElementDataOut {\n    ownerUId: string;\n    uid?: string;\n    id?: string;\n    rootUId?: string;\n    deloserUId?: string;\n    observedName?: string;\n    observedDetails?: string;\n}\n\ninterface CrossOriginStateData extends CrossOriginElementDataOut {\n    state: CrossOriginState;\n    isFocusedProgrammatically?: boolean;\n    force?: boolean;\n    isNavigatingWithKeyboard?: boolean;\n    outline?: Partial<Types.OutlineProps>;\n}\n\nclass StateTransaction extends CrossOriginTransaction<\n    CrossOriginStateData,\n    true\n> {\n    type = CrossOriginTransactionTypes.State;\n\n    static shouldSelfRespond(\n        tabster: Types.TabsterCore,\n        data: CrossOriginStateData\n    ): boolean {\n        return (\n            data.state !== CrossOriginStates.DeadWindow &&\n            data.state !== CrossOriginStates.KeyboardNavigation\n        );\n    }\n\n    static async makeResponse(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<CrossOriginStateData, true>,\n        getOwner: Types.GetWindow,\n        ownerId: string,\n        transactions: CrossOriginTransactions,\n        forwardResult: Promise<true | undefined>,\n        isSelfResponse?: boolean\n    ): Promise<true> {\n        const timestamp = data.timestamp;\n        const beginData = data.beginData;\n\n        if (timestamp && beginData) {\n            switch (beginData.state) {\n                case CrossOriginStates.Focused:\n                    return StateTransaction._makeFocusedResponse(\n                        tabster,\n                        timestamp,\n                        beginData,\n                        transactions,\n                        isSelfResponse\n                    );\n                case CrossOriginStates.Blurred:\n                    return StateTransaction._makeBlurredResponse(\n                        tabster,\n                        timestamp,\n                        beginData,\n                        transactions.ctx\n                    );\n                case CrossOriginStates.Observed:\n                    return StateTransaction._makeObservedResponse(\n                        tabster,\n                        beginData\n                    );\n                case CrossOriginStates.DeadWindow:\n                    return StateTransaction._makeDeadWindowResponse(\n                        tabster,\n                        beginData,\n                        transactions,\n                        forwardResult\n                    );\n                case CrossOriginStates.KeyboardNavigation:\n                    return StateTransaction._makeKeyboardNavigationResponse(\n                        tabster,\n                        transactions.ctx,\n                        beginData.isNavigatingWithKeyboard\n                    );\n                case CrossOriginStates.Outline:\n                    return StateTransaction._makeOutlineResponse(\n                        tabster,\n                        transactions.ctx,\n                        beginData.outline\n                    );\n            }\n        }\n\n        return true;\n    }\n\n    static createElement(\n        tabster: Types.TabsterCore,\n        beginData: CrossOriginElementDataOut\n    ): CrossOriginElement | null {\n        return beginData.uid\n            ? new CrossOriginElement(\n                  tabster,\n                  beginData.uid,\n                  beginData.ownerUId,\n                  beginData.id,\n                  beginData.rootUId,\n                  beginData.observedName,\n                  beginData.observedDetails\n              )\n            : null;\n    }\n\n    private static async _makeFocusedResponse(\n        tabster: Types.TabsterCore,\n        timestamp: number,\n        beginData: CrossOriginStateData,\n        transactions: CrossOriginTransactions,\n        isSelfResponse?: boolean\n    ): Promise<true> {\n        const element = StateTransaction.createElement(tabster, beginData);\n\n        if (beginData && beginData.ownerUId && element) {\n            transactions.ctx.focusOwner = beginData.ownerUId;\n            transactions.ctx.focusOwnerTimestamp = timestamp;\n\n            if (!isSelfResponse && beginData.rootUId && beginData.deloserUId) {\n                const deloserAPI = tabster.deloser;\n\n                if (deloserAPI) {\n                    const history = DeloserAPI.getHistory(deloserAPI);\n\n                    const deloser: CrossOriginDeloser = {\n                        ownerUId: beginData.ownerUId,\n                        deloserUId: beginData.deloserUId,\n                        rootUId: beginData.rootUId,\n                    };\n\n                    const historyItem = history.make(\n                        beginData.rootUId,\n                        () =>\n                            new CrossOriginDeloserHistoryByRoot(\n                                tabster,\n                                deloser.rootUId,\n                                transactions\n                            )\n                    );\n\n                    historyItem.unshift(deloser);\n                }\n            }\n\n            CrossOriginFocusedElementState.setVal(\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                tabster.crossOrigin!.focusedElement,\n                element,\n                {\n                    isFocusedProgrammatically:\n                        beginData.isFocusedProgrammatically,\n                }\n            );\n        }\n\n        return true;\n    }\n\n    private static async _makeBlurredResponse(\n        tabster: Types.TabsterCore,\n        timestamp: number,\n        beginData: CrossOriginStateData,\n        context: CrossOriginInstanceContext\n    ): Promise<true> {\n        if (\n            beginData &&\n            (beginData.ownerUId === context.focusOwner || beginData.force) &&\n            (!context.focusOwnerTimestamp ||\n                context.focusOwnerTimestamp < timestamp)\n        ) {\n            CrossOriginFocusedElementState.setVal(\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                tabster.crossOrigin!.focusedElement,\n                undefined,\n                {}\n            );\n        }\n\n        return true;\n    }\n\n    private static async _makeObservedResponse(\n        tabster: Types.TabsterCore,\n        beginData: CrossOriginStateData\n    ): Promise<true> {\n        const name = beginData.observedName;\n        const element = StateTransaction.createElement(tabster, beginData);\n\n        if (name && element) {\n            CrossOriginObservedElementState.trigger(\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                tabster.crossOrigin!.observedElement,\n                element,\n                { names: [name], details: beginData.observedDetails }\n            );\n        }\n\n        return true;\n    }\n\n    private static async _makeDeadWindowResponse(\n        tabster: Types.TabsterCore,\n        beginData: CrossOriginStateData,\n        transactions: CrossOriginTransactions,\n        forwardResult: Promise<true | undefined>\n    ): Promise<true> {\n        const deadUId = beginData && beginData.ownerUId;\n\n        if (deadUId) {\n            transactions.removeTarget(deadUId);\n        }\n\n        return forwardResult.then(() => {\n            if (deadUId === transactions.ctx.focusOwner) {\n                const deloserAPI = tabster.deloser;\n\n                if (deloserAPI) {\n                    DeloserAPI.forceRestoreFocus(deloserAPI);\n                }\n            }\n            return true;\n        });\n    }\n\n    private static async _makeKeyboardNavigationResponse(\n        tabster: Types.TabsterCore,\n        context: CrossOriginInstanceContext,\n        isNavigatingWithKeyboard?: boolean\n    ): Promise<true> {\n        if (\n            isNavigatingWithKeyboard !== undefined &&\n            tabster.keyboardNavigation.isNavigatingWithKeyboard() !==\n                isNavigatingWithKeyboard\n        ) {\n            context.ignoreKeyboardNavigationStateUpdate = true;\n            tabster.keyboardNavigation.setNavigatingWithKeyboard(\n                isNavigatingWithKeyboard\n            );\n            context.ignoreKeyboardNavigationStateUpdate = false;\n        }\n        return true;\n    }\n\n    private static async _makeOutlineResponse(\n        tabster: Types.TabsterCore,\n        context: CrossOriginInstanceContext,\n        props?: Partial<Types.OutlineProps>\n    ): Promise<true> {\n        if (context.origOutlineSetup) {\n            context.origOutlineSetup.call(\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                tabster.outline!,\n                props\n            );\n        }\n        return true;\n    }\n}\n\nclass GetElementTransaction extends CrossOriginTransaction<\n    CrossOriginElementDataIn | undefined,\n    CrossOriginElementDataOut\n> {\n    type = CrossOriginTransactionTypes.GetElement;\n\n    static shouldSelfRespond() {\n        return true;\n    }\n\n    static findElement(\n        tabster: Types.TabsterCore,\n        getOwner: Types.GetWindow,\n        data?: CrossOriginElementDataIn\n    ): HTMLElement | null {\n        let element: HTMLElement | null | undefined;\n\n        if (\n            data &&\n            (!data.ownerId || data.ownerId === getWindowUId(getOwner()))\n        ) {\n            if (data.id) {\n                element = dom.getElementById(getOwner().document, data.id);\n\n                if (element && data.rootId) {\n                    const ctx = RootAPI.getTabsterContext(tabster, element);\n\n                    if (!ctx || ctx.root.uid !== data.rootId) {\n                        return null;\n                    }\n                }\n            } else if (data.uid) {\n                const ref = getInstanceContext(getOwner).elementByUId[data.uid];\n                element = ref && ref.get();\n            } else if (data.observedName) {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                element = tabster.observedElement!.getElement(\n                    data.observedName,\n                    data.accessibility\n                );\n            }\n        }\n\n        return element || null;\n    }\n\n    static getElementData(\n        tabster: Types.TabsterCore,\n        element: HTMLElement,\n        getOwner: Types.GetWindow,\n        context: CrossOriginInstanceContext,\n        ownerUId: string\n    ): CrossOriginElementDataOut {\n        const deloser = DeloserAPI.getDeloser(tabster, element);\n        const ctx = RootAPI.getTabsterContext(tabster, element);\n        const tabsterOnElement = getTabsterOnElement(tabster, element);\n        const observed = tabsterOnElement && tabsterOnElement.observed;\n\n        return {\n            uid: getElementUId(getOwner, element),\n            ownerUId,\n            id: element.id || undefined,\n            rootUId: ctx ? ctx.root.uid : undefined,\n            deloserUId: deloser\n                ? getDeloserUID(getOwner, context, deloser)\n                : undefined,\n            observedName: observed && observed.names && observed.names[0],\n            observedDetails: observed && observed.details,\n        };\n    }\n\n    static async makeResponse(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<\n            CrossOriginElementDataIn | undefined,\n            CrossOriginElementDataOut\n        >,\n        getOwner: Types.GetWindow,\n        ownerUId: string,\n        transactions: CrossOriginTransactions,\n        forwardResult: Promise<CrossOriginElementDataOut | undefined>\n    ): Promise<CrossOriginElementDataOut | undefined> {\n        const beginData = data.beginData;\n        let element: HTMLElement | undefined;\n        let dataOut: CrossOriginElementDataOut | undefined;\n\n        if (beginData === undefined) {\n            element = tabster.focusedElement.getFocusedElement();\n        } else if (beginData) {\n            element =\n                GetElementTransaction.findElement(\n                    tabster,\n                    getOwner,\n                    beginData\n                ) || undefined;\n        }\n\n        if (!element && beginData) {\n            const name = beginData.observedName;\n            const timeout = data.timeout;\n            const accessibility = beginData.accessibility;\n\n            if (name && timeout) {\n                const e: {\n                    element?: HTMLElement | null;\n                    crossOrigin?: CrossOriginElementDataOut;\n                } = await new (getPromise(getOwner))((resolve) => {\n                    let isWaitElementResolved = false;\n                    let isForwardResolved = false;\n                    let isResolved = false;\n\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    tabster\n                        .observedElement!.waitElement(\n                            name,\n                            timeout,\n                            accessibility\n                        )\n                        .result.then((value) => {\n                            isWaitElementResolved = true;\n\n                            if (!isResolved && (value || isForwardResolved)) {\n                                isResolved = true;\n                                resolve({ element: value });\n                            }\n                        });\n\n                    forwardResult.then((value) => {\n                        isForwardResolved = true;\n\n                        if (!isResolved && (value || isWaitElementResolved)) {\n                            isResolved = true;\n                            resolve({ crossOrigin: value });\n                        }\n                    });\n                });\n\n                if (e.element) {\n                    element = e.element;\n                } else if (e.crossOrigin) {\n                    dataOut = e.crossOrigin;\n                }\n            }\n        }\n\n        return element\n            ? GetElementTransaction.getElementData(\n                  tabster,\n                  element,\n                  getOwner,\n                  transactions.ctx,\n                  ownerUId\n              )\n            : dataOut;\n    }\n}\n\ninterface CrossOriginDeloser {\n    ownerUId: string;\n    deloserUId: string;\n    rootUId: string;\n}\n\ninterface RestoreFocusInDeloserTransactionData extends CrossOriginDeloser {\n    reset: boolean;\n}\n\nclass RestoreFocusInDeloserTransaction extends CrossOriginTransaction<\n    RestoreFocusInDeloserTransactionData,\n    boolean\n> {\n    type = CrossOriginTransactionTypes.RestoreFocusInDeloser;\n\n    static async makeResponse(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<\n            RestoreFocusInDeloserTransactionData,\n            boolean\n        >,\n        getOwner: Types.GetWindow,\n        ownerId: string,\n        transactions: CrossOriginTransactions,\n        forwardResult: Promise<boolean | undefined>\n    ): Promise<boolean | null> {\n        const forwardRet = await forwardResult;\n        const begin = !forwardRet && data.beginData;\n        const uid = begin && begin.deloserUId;\n        const deloser = uid && transactions.ctx.deloserByUId[uid];\n        const deloserAPI = tabster.deloser;\n\n        if (begin && deloser && deloserAPI) {\n            const history = DeloserAPI.getHistory(deloserAPI);\n            return begin.reset\n                ? history.resetFocus(deloser)\n                : history.focusAvailable(deloser);\n        }\n\n        return !!forwardRet;\n    }\n}\n\nclass PingTransaction extends CrossOriginTransaction<undefined, true> {\n    type = CrossOriginTransactionTypes.Ping;\n\n    static shouldForward() {\n        return false;\n    }\n\n    static async makeResponse(): Promise<true> {\n        return true;\n    }\n}\n\ninterface CrossOriginTransactionWrapper<I, O> {\n    transaction: CrossOriginTransaction<I, O>;\n    timer?: number;\n}\n\nclass CrossOriginTransactions {\n    private _owner: Types.GetWindow;\n    private _ownerUId: string;\n    private _knownTargets: KnownTargets = {};\n    private _transactions: {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        [id: string]: CrossOriginTransactionWrapper<any, any>;\n    } = {};\n    private _tabster: Types.TabsterCore;\n    private _pingTimer: number | undefined;\n    private _isDefaultSendUp = false;\n    private _deadPromise: Promise<true | undefined> | undefined;\n    isSetUp = false;\n    sendUp: Types.CrossOriginTransactionSend | undefined;\n    ctx: CrossOriginInstanceContext;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        getOwner: Types.GetWindow,\n        context: CrossOriginInstanceContext\n    ) {\n        this._tabster = tabster;\n        this._owner = getOwner;\n        this._ownerUId = getWindowUId(getOwner());\n        this.ctx = context;\n    }\n\n    setup(\n        sendUp?: Types.CrossOriginTransactionSend | null\n    ): (msg: Types.CrossOriginMessage) => void {\n        if (this.isSetUp) {\n            if (__DEV__) {\n                console.error(\"CrossOrigin is already set up.\");\n            }\n        } else {\n            this.isSetUp = true;\n\n            this.setSendUp(sendUp);\n\n            this._owner().addEventListener(\"pagehide\", this._onPageHide);\n\n            this._ping();\n        }\n\n        return this._onMessage;\n    }\n\n    setSendUp(\n        sendUp?: Types.CrossOriginTransactionSend | null\n    ): (msg: Types.CrossOriginMessage) => void {\n        if (!this.isSetUp) {\n            throw new Error(\"CrossOrigin is not set up.\");\n        }\n\n        this.sendUp = sendUp || undefined;\n\n        const owner = this._owner();\n\n        if (sendUp === undefined) {\n            if (!this._isDefaultSendUp) {\n                if (owner.document) {\n                    this._isDefaultSendUp = true;\n\n                    if (\n                        owner.parent &&\n                        owner.parent !== owner &&\n                        owner.parent.postMessage\n                    ) {\n                        this.sendUp = (\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            data: Types.CrossOriginTransactionData<any, any>\n                        ) => {\n                            owner.parent.postMessage(JSON.stringify(data), \"*\");\n                        };\n                    }\n\n                    owner.addEventListener(\"message\", this._onBrowserMessage);\n                }\n            }\n        } else if (this._isDefaultSendUp) {\n            owner.removeEventListener(\"message\", this._onBrowserMessage);\n            this._isDefaultSendUp = false;\n        }\n\n        return this._onMessage;\n    }\n\n    async dispose(): Promise<void> {\n        const owner = this._owner();\n\n        if (this._pingTimer) {\n            owner.clearTimeout(this._pingTimer);\n            this._pingTimer = undefined;\n        }\n\n        owner.removeEventListener(\"message\", this._onBrowserMessage);\n        owner.removeEventListener(\"pagehide\", this._onPageHide);\n\n        await this._dead();\n\n        delete this._deadPromise;\n\n        for (const id of Object.keys(this._transactions)) {\n            const t = this._transactions[id];\n\n            if (t.timer) {\n                owner.clearTimeout(t.timer);\n                delete t.timer;\n            }\n\n            t.transaction.end();\n        }\n\n        this._knownTargets = {};\n\n        delete this.sendUp;\n    }\n\n    beginTransaction<I, O>(\n        Transaction: CrossOriginTransactionClass<I, O>,\n        value: I,\n        timeout?: number,\n        sentTo?: Types.CrossOriginSentTo,\n        targetId?: string,\n        withReject?: boolean\n    ): Promise<O | undefined> {\n        if (!this._owner) {\n            return getPromise(this._owner).reject();\n        }\n\n        const transaction = new Transaction(\n            this._tabster,\n            this._owner,\n            this._knownTargets,\n            value,\n            timeout,\n            sentTo,\n            targetId,\n            this.sendUp\n        );\n        let selfResponse:\n            | ((\n                  data: Types.CrossOriginTransactionData<I, O>\n              ) => Promise<O | undefined>)\n            | undefined;\n\n        if (\n            Transaction.shouldSelfRespond &&\n            Transaction.shouldSelfRespond(\n                this._tabster,\n                value,\n                this._owner,\n                this._ownerUId\n            )\n        ) {\n            selfResponse = (data: Types.CrossOriginTransactionData<I, O>) => {\n                return Transaction.makeResponse(\n                    this._tabster,\n                    data,\n                    this._owner,\n                    this._ownerUId,\n                    this,\n                    getPromise(this._owner).resolve(undefined),\n                    true\n                );\n            };\n        }\n\n        return this._beginTransaction(\n            transaction,\n            timeout,\n            selfResponse,\n            withReject\n        );\n    }\n\n    removeTarget(uid: string): void {\n        delete this._knownTargets[uid];\n    }\n\n    private _beginTransaction<I, O>(\n        transaction: CrossOriginTransaction<I, O>,\n        timeout?: number,\n        selfResponse?: (\n            data: Types.CrossOriginTransactionData<I, O>\n        ) => Promise<O | undefined>,\n        withReject?: boolean\n    ): Promise<O | undefined> {\n        const owner = this._owner();\n\n        const wrapper: CrossOriginTransactionWrapper<I, O> = {\n            transaction,\n            timer: owner.setTimeout(\n                () => {\n                    delete wrapper.timer;\n                    transaction.end(\"Cross origin transaction timed out.\");\n                },\n                _transactionTimeout + (timeout || 0)\n            ),\n        };\n\n        this._transactions[transaction.id] = wrapper;\n\n        const ret = transaction.begin(selfResponse);\n\n        ret.catch(() => {\n            /**/\n        }).finally(() => {\n            if (wrapper.timer) {\n                owner.clearTimeout(wrapper.timer);\n            }\n            delete this._transactions[transaction.id];\n        });\n\n        return ret.then(\n            (value) => value,\n            withReject ? undefined : () => undefined\n        );\n    }\n\n    forwardTransaction(\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        data: Types.CrossOriginTransactionData<any, any>\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ): Promise<any> {\n        const owner = this._owner;\n        let targetId = data.target;\n\n        if (targetId === this._ownerUId) {\n            return getPromise(owner).resolve();\n        }\n\n        const Transaction = this._getTransactionClass(data.type);\n\n        if (Transaction) {\n            if (\n                Transaction.shouldForward === undefined ||\n                Transaction.shouldForward(\n                    this._tabster,\n                    data,\n                    owner,\n                    this._ownerUId\n                )\n            ) {\n                const sentTo = data.sentto;\n\n                if (targetId === _targetIdUp) {\n                    targetId = undefined;\n                    sentTo[this._ownerUId] = true;\n                }\n\n                delete sentTo[_targetIdUp];\n\n                return this._beginTransaction(\n                    new Transaction(\n                        this._tabster,\n                        owner,\n                        this._knownTargets,\n                        data.beginData,\n                        data.timeout,\n                        sentTo,\n                        targetId,\n                        this.sendUp\n                    ),\n                    data.timeout\n                );\n            } else {\n                return getPromise(owner).resolve();\n            }\n        }\n\n        return getPromise(owner).reject(\n            `Unknown transaction type ${data.type}`\n        );\n    }\n\n    private _getTransactionClass(\n        type: Types.CrossOriginTransactionType\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ): CrossOriginTransactionClass<any, any> | null {\n        switch (type) {\n            case CrossOriginTransactionTypes.Bootstrap:\n                return BootstrapTransaction;\n            case CrossOriginTransactionTypes.FocusElement:\n                return FocusElementTransaction;\n            case CrossOriginTransactionTypes.State:\n                return StateTransaction;\n            case CrossOriginTransactionTypes.GetElement:\n                return GetElementTransaction;\n            case CrossOriginTransactionTypes.RestoreFocusInDeloser:\n                return RestoreFocusInDeloserTransaction;\n            case CrossOriginTransactionTypes.Ping:\n                return PingTransaction;\n            default:\n                return null;\n        }\n    }\n\n    private _onMessage = (e: Types.CrossOriginMessage) => {\n        if (e.data.owner === this._ownerUId || !this._tabster) {\n            return;\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const data: Types.CrossOriginTransactionData<any, any> = e.data;\n        let transactionId: string;\n\n        if (\n            !data ||\n            !(transactionId = data.transaction) ||\n            !data.type ||\n            !data.timestamp ||\n            !data.owner ||\n            !data.sentto\n        ) {\n            return;\n        }\n\n        let knownTarget = this._knownTargets[data.owner];\n\n        if (!knownTarget && e.send && data.owner !== this._ownerUId) {\n            knownTarget = this._knownTargets[data.owner] = { send: e.send };\n        }\n\n        if (knownTarget) {\n            knownTarget.last = Date.now();\n        }\n\n        if (data.isResponse) {\n            const t = this._transactions[transactionId];\n\n            if (t && t.transaction && t.transaction.type === data.type) {\n                t.transaction.onResponse(data);\n            }\n        } else {\n            const Transaction = this._getTransactionClass(data.type);\n\n            const forwardResult = this.forwardTransaction(data);\n\n            if (Transaction && e.send) {\n                Transaction.makeResponse(\n                    this._tabster,\n                    data,\n                    this._owner,\n                    this._ownerUId,\n                    this,\n                    forwardResult,\n                    false\n                ).then((r) => {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    const response: Types.CrossOriginTransactionData<any, any> =\n                        {\n                            transaction: data.transaction,\n                            type: data.type,\n                            isResponse: true,\n                            timestamp: Date.now(),\n                            owner: this._ownerUId,\n                            timeout: data.timeout,\n                            sentto: {},\n                            target:\n                                data.target === _targetIdUp\n                                    ? _targetIdUp\n                                    : data.owner,\n                            endData: r,\n                        };\n\n                    e.send(response);\n                });\n            }\n        }\n    };\n\n    private _onPageHide = () => {\n        this._dead();\n    };\n\n    private async _dead(): Promise<void> {\n        if (!this._deadPromise && this.ctx.focusOwner === this._ownerUId) {\n            this._deadPromise = this.beginTransaction(StateTransaction, {\n                ownerUId: this._ownerUId,\n                state: CrossOriginStates.DeadWindow,\n            });\n        }\n\n        if (this._deadPromise) {\n            await this._deadPromise;\n        }\n    }\n\n    private async _ping(): Promise<void> {\n        if (this._pingTimer) {\n            return;\n        }\n\n        let deadWindows: { [key: string]: boolean } | undefined;\n        const now = Date.now();\n        const targets = Object.keys(this._knownTargets).filter(\n            (uid) => now - (this._knownTargets[uid].last || 0) > _pingTimeout\n        );\n\n        if (this.sendUp) {\n            targets.push(_targetIdUp);\n        }\n\n        if (targets.length) {\n            await getPromise(this._owner).all(\n                targets.map((uid) =>\n                    this.beginTransaction(\n                        PingTransaction,\n                        undefined,\n                        undefined,\n                        undefined,\n                        uid,\n                        true\n                    ).then(\n                        () => true,\n                        () => {\n                            if (uid !== _targetIdUp) {\n                                if (!deadWindows) {\n                                    deadWindows = {};\n                                }\n                                deadWindows[uid] = true;\n                                delete this._knownTargets[uid];\n                            }\n                            return false;\n                        }\n                    )\n                )\n            );\n        }\n\n        if (deadWindows) {\n            const focused = await this.beginTransaction(\n                GetElementTransaction,\n                undefined\n            );\n\n            if (\n                !focused &&\n                this.ctx.focusOwner &&\n                this.ctx.focusOwner in deadWindows\n            ) {\n                await this.beginTransaction(StateTransaction, {\n                    ownerUId: this._ownerUId,\n                    state: CrossOriginStates.Blurred,\n                    force: true,\n                });\n\n                const deloserAPI = this._tabster.deloser;\n\n                if (deloserAPI) {\n                    DeloserAPI.forceRestoreFocus(deloserAPI);\n                }\n            }\n        }\n\n        this._pingTimer = this._owner().setTimeout(() => {\n            this._pingTimer = undefined;\n            this._ping();\n        }, _pingTimeout);\n    }\n\n    private _onBrowserMessage = (e: MessageEvent) => {\n        if (e.source === this._owner()) {\n            return;\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const send = (data: Types.CrossOriginTransactionData<any, any>) => {\n            if (e.source && e.source.postMessage) {\n                (e.source.postMessage as Function)(JSON.stringify(data), \"*\");\n            }\n        };\n\n        try {\n            this._onMessage({\n                data: JSON.parse(e.data),\n                send,\n            });\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        } catch (e) {\n            /* Ignore */\n        }\n    };\n}\n\nexport class CrossOriginElement implements Types.CrossOriginElement {\n    private _tabster: Types.TabsterCore;\n    readonly uid: string;\n    readonly ownerId: string;\n    readonly id?: string;\n    readonly rootId?: string;\n    readonly observedName?: string;\n    readonly observedDetails?: string;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        uid: string,\n        ownerId: string,\n        id?: string,\n        rootId?: string,\n        observedName?: string,\n        observedDetails?: string\n    ) {\n        this._tabster = tabster;\n        this.uid = uid;\n        this.ownerId = ownerId;\n        this.id = id;\n        this.rootId = rootId;\n        this.observedName = observedName;\n        this.observedDetails = observedDetails;\n    }\n\n    focus(\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean> {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        return this._tabster.crossOrigin!.focusedElement.focus(\n            this,\n            noFocusedProgrammaticallyFlag,\n            noAccessibleCheck\n        );\n    }\n}\n\nexport class CrossOriginFocusedElementState\n    extends Subscribable<\n        CrossOriginElement | undefined,\n        Types.FocusedElementDetail\n    >\n    implements Types.CrossOriginFocusedElementState\n{\n    private _transactions: CrossOriginTransactions;\n\n    constructor(transactions: CrossOriginTransactions) {\n        super();\n        this._transactions = transactions;\n    }\n\n    async focus(\n        element: Types.CrossOriginElement,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean> {\n        return this._focus(\n            {\n                uid: element.uid,\n                id: element.id,\n                rootId: element.rootId,\n                ownerId: element.ownerId,\n                observedName: element.observedName,\n            },\n            noFocusedProgrammaticallyFlag,\n            noAccessibleCheck\n        );\n    }\n\n    async focusById(\n        elementId: string,\n        rootId?: string,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean> {\n        return this._focus(\n            { id: elementId, rootId },\n            noFocusedProgrammaticallyFlag,\n            noAccessibleCheck\n        );\n    }\n\n    async focusByObservedName(\n        observedName: string,\n        timeout?: number,\n        rootId?: string,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean> {\n        return this._focus(\n            { observedName, rootId },\n            noFocusedProgrammaticallyFlag,\n            noAccessibleCheck,\n            timeout\n        );\n    }\n\n    private async _focus(\n        elementData: CrossOriginElementDataIn,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean,\n        timeout?: number\n    ): Promise<boolean> {\n        return this._transactions\n            .beginTransaction(\n                FocusElementTransaction,\n                {\n                    ...elementData,\n                    noFocusedProgrammaticallyFlag,\n                    noAccessibleCheck,\n                },\n                timeout\n            )\n            .then((value) => !!value);\n    }\n\n    static setVal(\n        instance: Types.CrossOriginFocusedElementState,\n        val: CrossOriginElement | undefined,\n        detail: Types.FocusedElementDetail\n    ): void {\n        (instance as CrossOriginFocusedElementState).setVal(val, detail);\n    }\n}\n\nexport class CrossOriginObservedElementState\n    extends Subscribable<CrossOriginElement, Types.ObservedElementProps>\n    implements Types.CrossOriginObservedElementState\n{\n    private _tabster: Types.TabsterCore;\n    private _transactions: CrossOriginTransactions;\n    private _lastRequestFocusId = 0;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        transactions: CrossOriginTransactions\n    ) {\n        super();\n        this._tabster = tabster;\n        this._transactions = transactions;\n    }\n\n    async getElement(\n        observedName: string,\n        accessibility?: Types.ObservedElementAccessibility\n    ): Promise<CrossOriginElement | null> {\n        return this.waitElement(observedName, 0, accessibility);\n    }\n\n    async waitElement(\n        observedName: string,\n        timeout: number,\n        accessibility?: Types.ObservedElementAccessibility\n    ): Promise<CrossOriginElement | null> {\n        return this._transactions\n            .beginTransaction(\n                GetElementTransaction,\n                {\n                    observedName,\n                    accessibility,\n                },\n                timeout\n            )\n            .then((value) =>\n                value\n                    ? StateTransaction.createElement(this._tabster, value)\n                    : null\n            );\n    }\n\n    async requestFocus(\n        observedName: string,\n        timeout: number\n    ): Promise<boolean> {\n        const requestId = ++this._lastRequestFocusId;\n        return this.waitElement(\n            observedName,\n            timeout,\n            ObservedElementAccessibilities.Focusable\n        ).then((element) =>\n            this._lastRequestFocusId === requestId && element\n                ? // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                  this._tabster.crossOrigin!.focusedElement.focus(element, true)\n                : false\n        );\n    }\n\n    static trigger(\n        instance: Types.CrossOriginObservedElementState,\n        element: CrossOriginElement,\n        details: Types.ObservedElementProps\n    ): void {\n        (instance as CrossOriginObservedElementState).trigger(element, details);\n    }\n}\n\nexport class CrossOriginAPI implements Types.CrossOriginAPI {\n    private _tabster: Types.TabsterCore;\n    private _win: Types.GetWindow;\n    private _transactions: CrossOriginTransactions;\n    private _blurTimer: number | undefined;\n    private _ctx: CrossOriginInstanceContext;\n\n    focusedElement: Types.CrossOriginFocusedElementState;\n    observedElement: Types.CrossOriginObservedElementState;\n\n    constructor(tabster: Types.TabsterCore) {\n        this._tabster = tabster;\n        this._win = tabster.getWindow;\n        this._ctx = {\n            ignoreKeyboardNavigationStateUpdate: false,\n            deloserByUId: {},\n        };\n\n        this._transactions = new CrossOriginTransactions(\n            tabster,\n            this._win,\n            this._ctx\n        );\n        this.focusedElement = new CrossOriginFocusedElementState(\n            this._transactions\n        );\n        this.observedElement = new CrossOriginObservedElementState(\n            tabster,\n            this._transactions\n        );\n    }\n\n    setup(\n        sendUp?: Types.CrossOriginTransactionSend | null\n    ): (msg: Types.CrossOriginMessage) => void {\n        if (this.isSetUp()) {\n            return this._transactions.setSendUp(sendUp);\n        } else {\n            this._tabster.queueInit(this._init);\n            return this._transactions.setup(sendUp);\n        }\n    }\n\n    isSetUp(): boolean {\n        return this._transactions.isSetUp;\n    }\n\n    private _init = (): void => {\n        const tabster = this._tabster;\n\n        tabster.keyboardNavigation.subscribe(\n            this._onKeyboardNavigationStateChanged\n        );\n        tabster.focusedElement.subscribe(this._onFocus);\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        tabster.observedElement!.subscribe(this._onObserved);\n\n        if (!this._ctx.origOutlineSetup) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            this._ctx.origOutlineSetup = tabster.outline!.setup;\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            tabster.outline!.setup = this._outlineSetup;\n        }\n\n        this._transactions\n            .beginTransaction(\n                BootstrapTransaction,\n                undefined,\n                undefined,\n                undefined,\n                _targetIdUp\n            )\n            .then((data) => {\n                if (\n                    data &&\n                    this._tabster.keyboardNavigation.isNavigatingWithKeyboard() !==\n                        data.isNavigatingWithKeyboard\n                ) {\n                    this._ctx.ignoreKeyboardNavigationStateUpdate = true;\n                    this._tabster.keyboardNavigation.setNavigatingWithKeyboard(\n                        data.isNavigatingWithKeyboard\n                    );\n                    this._ctx.ignoreKeyboardNavigationStateUpdate = false;\n                }\n            });\n    };\n\n    dispose(): void {\n        const tabster = this._tabster;\n\n        tabster.keyboardNavigation.unsubscribe(\n            this._onKeyboardNavigationStateChanged\n        );\n        tabster.focusedElement.unsubscribe(this._onFocus);\n        tabster.observedElement?.unsubscribe(this._onObserved);\n\n        this._transactions.dispose();\n        this.focusedElement.dispose();\n        this.observedElement.dispose();\n\n        this._ctx.deloserByUId = {};\n    }\n\n    private _onKeyboardNavigationStateChanged = (value: boolean): void => {\n        if (!this._ctx.ignoreKeyboardNavigationStateUpdate) {\n            this._transactions.beginTransaction(StateTransaction, {\n                state: CrossOriginStates.KeyboardNavigation,\n                ownerUId: getWindowUId(this._win()),\n                isNavigatingWithKeyboard: value,\n            });\n        }\n    };\n\n    private _onFocus = (element: HTMLElementWithUID | undefined): void => {\n        const win = this._win();\n\n        const ownerUId = getWindowUId(win);\n\n        if (this._blurTimer) {\n            win.clearTimeout(this._blurTimer);\n            this._blurTimer = undefined;\n        }\n\n        if (element) {\n            this._transactions.beginTransaction(StateTransaction, {\n                ...GetElementTransaction.getElementData(\n                    this._tabster,\n                    element,\n                    this._win,\n                    this._ctx,\n                    ownerUId\n                ),\n                state: CrossOriginStates.Focused,\n            });\n        } else {\n            this._blurTimer = win.setTimeout(() => {\n                this._blurTimer = undefined;\n\n                if (this._ctx.focusOwner && this._ctx.focusOwner === ownerUId) {\n                    this._transactions\n                        .beginTransaction(GetElementTransaction, undefined)\n                        .then((value) => {\n                            if (!value && this._ctx.focusOwner === ownerUId) {\n                                this._transactions.beginTransaction(\n                                    StateTransaction,\n                                    {\n                                        ownerUId,\n                                        state: CrossOriginStates.Blurred,\n                                        force: false,\n                                    }\n                                );\n                            }\n                        });\n                }\n            }, 0);\n        }\n    };\n\n    private _onObserved = (\n        element: HTMLElement,\n        details: Types.ObservedElementProps\n    ): void => {\n        const d = GetElementTransaction.getElementData(\n            this._tabster,\n            element,\n            this._win,\n            this._ctx,\n            getWindowUId(this._win())\n        ) as CrossOriginStateData;\n\n        d.state = CrossOriginStates.Observed;\n        d.observedName = details.names?.[0];\n        d.observedDetails = details.details;\n\n        this._transactions.beginTransaction(StateTransaction, d);\n    };\n\n    private _outlineSetup = (props?: Partial<Types.OutlineProps>): void => {\n        this._transactions.beginTransaction(StateTransaction, {\n            state: CrossOriginStates.Outline,\n            ownerUId: getWindowUId(this._win()),\n            outline: props,\n        });\n    };\n}\n\nfunction getDeloserUID(\n    getWindow: Types.GetWindow,\n    context: CrossOriginInstanceContext,\n    deloser: Types.Deloser\n): string | undefined {\n    const deloserElement = deloser.getElement();\n\n    if (deloserElement) {\n        const uid = getElementUId(getWindow, deloserElement);\n\n        if (!context.deloserByUId[uid]) {\n            context.deloserByUId[uid] = deloser;\n        }\n\n        return uid;\n    }\n\n    return undefined;\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { getTabsterOnElement } from \"./Instance\";\nimport { RootAPI } from \"./Root\";\nimport * as Types from \"./Types\";\nimport { FOCUSABLE_SELECTOR } from \"./Consts\";\nimport {\n    createElementTreeWalker,\n    getDummyInputContainer,\n    getLastChild,\n    getRadioButtonGroup,\n    isDisplayNone,\n    isRadio,\n    matchesSelector,\n    shouldIgnoreFocus,\n} from \"./Utils\";\nimport { dom } from \"./DOMAPI\";\n\nexport class FocusableAPI implements Types.FocusableAPI {\n    private _tabster: Types.TabsterCore;\n\n    constructor(tabster: Types.TabsterCore) {\n        this._tabster = tabster;\n    }\n\n    dispose(): void {\n        /**/\n    }\n\n    getProps(element: HTMLElement): Types.FocusableProps {\n        const tabsterOnElement = getTabsterOnElement(this._tabster, element);\n        return (tabsterOnElement && tabsterOnElement.focusable) || {};\n    }\n\n    isFocusable(\n        el: HTMLElement,\n        includeProgrammaticallyFocusable?: boolean,\n        noVisibleCheck?: boolean,\n        noAccessibleCheck?: boolean\n    ): boolean {\n        if (\n            matchesSelector(el, FOCUSABLE_SELECTOR) &&\n            (includeProgrammaticallyFocusable || el.tabIndex !== -1)\n        ) {\n            return (\n                (noVisibleCheck || this.isVisible(el)) &&\n                (noAccessibleCheck || this.isAccessible(el))\n            );\n        }\n\n        return false;\n    }\n\n    isVisible(el: HTMLElement): boolean {\n        if (!el.ownerDocument || el.nodeType !== Node.ELEMENT_NODE) {\n            return false;\n        }\n\n        if (isDisplayNone(el)) {\n            return false;\n        }\n\n        const rect = el.ownerDocument.body.getBoundingClientRect();\n\n        if (rect.width === 0 && rect.height === 0) {\n            // This might happen, for example, if our <body> is in hidden <iframe>.\n            return false;\n        }\n\n        return true;\n    }\n\n    isAccessible(el: HTMLElement): boolean {\n        for (let e: HTMLElement | null = el; e; e = dom.getParentElement(e)) {\n            const tabsterOnElement = getTabsterOnElement(this._tabster, e);\n\n            if (this._isHidden(e)) {\n                return false;\n            }\n\n            const ignoreDisabled =\n                tabsterOnElement?.focusable?.ignoreAriaDisabled;\n\n            if (!ignoreDisabled && this._isDisabled(e)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    private _isDisabled(el: HTMLElement): boolean {\n        return el.hasAttribute(\"disabled\");\n    }\n\n    private _isHidden(el: HTMLElement): boolean {\n        const attrVal = el.getAttribute(\"aria-hidden\");\n\n        if (attrVal && attrVal.toLowerCase() === \"true\") {\n            if (!this._tabster.modalizer?.isAugmented(el)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    findFirst(\n        options: Types.FindFirstProps,\n        out?: Types.FindFocusableOutputProps\n    ): HTMLElement | null | undefined {\n        return this.findElement(\n            {\n                ...options,\n            },\n            out\n        );\n    }\n\n    findLast(\n        options: Types.FindFirstProps,\n        out?: Types.FindFocusableOutputProps\n    ): HTMLElement | null | undefined {\n        return this.findElement(\n            {\n                isBackward: true,\n                ...options,\n            },\n            out\n        );\n    }\n\n    findNext(\n        options: Types.FindNextProps,\n        out?: Types.FindFocusableOutputProps\n    ): HTMLElement | null | undefined {\n        return this.findElement({ ...options }, out);\n    }\n\n    findPrev(\n        options: Types.FindNextProps,\n        out?: Types.FindFocusableOutputProps\n    ): HTMLElement | null | undefined {\n        return this.findElement({ ...options, isBackward: true }, out);\n    }\n\n    findDefault(\n        options: Types.FindDefaultProps,\n        out?: Types.FindFocusableOutputProps\n    ): HTMLElement | null {\n        return (\n            this.findElement(\n                {\n                    ...options,\n                    acceptCondition: (el) =>\n                        this.isFocusable(\n                            el,\n                            options.includeProgrammaticallyFocusable\n                        ) && !!this.getProps(el).isDefault,\n                },\n                out\n            ) || null\n        );\n    }\n\n    findAll(options: Types.FindAllProps): HTMLElement[] {\n        return this._findElements(true, options) || [];\n    }\n\n    findElement(\n        options: Types.FindFocusableProps,\n        out?: Types.FindFocusableOutputProps\n    ): HTMLElement | null | undefined {\n        const found = this._findElements(false, options, out);\n        return found ? found[0] : found;\n    }\n\n    private _findElements(\n        isFindAll: boolean,\n        options: Types.FindFocusableProps,\n        out?: Types.FindFocusableOutputProps\n    ): HTMLElement[] | null | undefined {\n        const {\n            container,\n            currentElement = null,\n            includeProgrammaticallyFocusable,\n            useActiveModalizer,\n            ignoreAccessibility,\n            modalizerId,\n            isBackward,\n            onElement,\n        } = options;\n\n        if (!out) {\n            out = {};\n        }\n\n        const elements: HTMLElement[] = [];\n\n        let { acceptCondition } = options;\n        const hasCustomCondition = !!acceptCondition;\n\n        if (!container) {\n            return null;\n        }\n\n        if (!acceptCondition) {\n            acceptCondition = (el) =>\n                this.isFocusable(\n                    el,\n                    includeProgrammaticallyFocusable,\n                    false,\n                    ignoreAccessibility\n                );\n        }\n\n        const acceptElementState: Types.FocusableAcceptElementState = {\n            container,\n            modalizerUserId:\n                modalizerId === undefined && useActiveModalizer\n                    ? this._tabster.modalizer?.activeId\n                    : modalizerId ||\n                      RootAPI.getTabsterContext(this._tabster, container)\n                          ?.modalizer?.userId,\n            from: currentElement || container,\n            isBackward,\n            isFindAll,\n            acceptCondition,\n            hasCustomCondition,\n            includeProgrammaticallyFocusable,\n            ignoreAccessibility,\n            cachedGrouppers: {},\n            cachedRadioGroups: {},\n        };\n\n        const walker = createElementTreeWalker(\n            container.ownerDocument,\n            container,\n            (node) =>\n                this._acceptElement(node as HTMLElement, acceptElementState)\n        );\n\n        if (!walker) {\n            return null;\n        }\n\n        const prepareForNextElement = (\n            shouldContinueIfNotFound?: boolean\n        ): boolean => {\n            const foundElement =\n                acceptElementState.foundElement ??\n                acceptElementState.foundBackward;\n\n            if (foundElement) {\n                elements.push(foundElement);\n            }\n\n            if (isFindAll) {\n                if (foundElement) {\n                    acceptElementState.found = false;\n                    delete acceptElementState.foundElement;\n                    delete acceptElementState.foundBackward;\n                    delete acceptElementState.fromCtx;\n                    acceptElementState.from = foundElement;\n\n                    if (onElement && !onElement(foundElement)) {\n                        return false;\n                    }\n                }\n\n                return !!(foundElement || shouldContinueIfNotFound);\n            } else {\n                if (foundElement && out) {\n                    out.uncontrolled = RootAPI.getTabsterContext(\n                        this._tabster,\n                        foundElement\n                    )?.uncontrolled;\n                }\n\n                return !!(shouldContinueIfNotFound && !foundElement);\n            }\n        };\n\n        if (!currentElement) {\n            out.outOfDOMOrder = true;\n        }\n\n        if (currentElement && dom.nodeContains(container, currentElement)) {\n            walker.currentNode = currentElement;\n        } else if (isBackward) {\n            const lastChild = getLastChild(container);\n\n            if (!lastChild) {\n                return null;\n            }\n\n            if (\n                this._acceptElement(lastChild, acceptElementState) ===\n                    NodeFilter.FILTER_ACCEPT &&\n                !prepareForNextElement(true)\n            ) {\n                if (acceptElementState.skippedFocusable) {\n                    out.outOfDOMOrder = true;\n                }\n\n                return elements;\n            }\n\n            walker.currentNode = lastChild;\n        }\n\n        do {\n            if (isBackward) {\n                walker.previousNode();\n            } else {\n                walker.nextNode();\n            }\n        } while (prepareForNextElement());\n\n        if (acceptElementState.skippedFocusable) {\n            out.outOfDOMOrder = true;\n        }\n\n        return elements.length ? elements : null;\n    }\n\n    private _acceptElement(\n        element: HTMLElement,\n        state: Types.FocusableAcceptElementState\n    ): number {\n        if (state.found) {\n            return NodeFilter.FILTER_ACCEPT;\n        }\n\n        const foundBackward = state.foundBackward;\n\n        if (\n            foundBackward &&\n            (element === foundBackward ||\n                !dom.nodeContains(foundBackward, element))\n        ) {\n            state.found = true;\n            state.foundElement = foundBackward;\n            return NodeFilter.FILTER_ACCEPT;\n        }\n\n        const container = state.container;\n\n        if (element === container) {\n            return NodeFilter.FILTER_SKIP;\n        }\n\n        if (!dom.nodeContains(container, element)) {\n            return NodeFilter.FILTER_REJECT;\n        }\n\n        if (getDummyInputContainer(element)) {\n            return NodeFilter.FILTER_REJECT;\n        }\n\n        if (dom.nodeContains(state.rejectElementsFrom, element)) {\n            return NodeFilter.FILTER_REJECT;\n        }\n\n        const ctx = (state.currentCtx = RootAPI.getTabsterContext(\n            this._tabster,\n            element\n        ));\n\n        // Tabster is opt in, if it is not managed, don't try and get do anything special\n        if (!ctx) {\n            return NodeFilter.FILTER_SKIP;\n        }\n\n        if (shouldIgnoreFocus(element)) {\n            if (this.isFocusable(element, undefined, true, true)) {\n                state.skippedFocusable = true;\n            }\n\n            return NodeFilter.FILTER_SKIP;\n        }\n\n        // We assume iframes are focusable because native tab behaviour would tab inside.\n        // But we do it only during the standard search when there is no custom accept\n        // element condition.\n        if (\n            !state.hasCustomCondition &&\n            (element.tagName === \"IFRAME\" || element.tagName === \"WEBVIEW\")\n        ) {\n            if (\n                this.isVisible(element) &&\n                ctx.modalizer?.userId === this._tabster.modalizer?.activeId\n            ) {\n                state.found = true;\n                state.rejectElementsFrom = state.foundElement = element;\n\n                return NodeFilter.FILTER_ACCEPT;\n            } else {\n                return NodeFilter.FILTER_REJECT;\n            }\n        }\n\n        if (!state.ignoreAccessibility && !this.isAccessible(element)) {\n            if (this.isFocusable(element, false, true, true)) {\n                state.skippedFocusable = true;\n            }\n\n            return NodeFilter.FILTER_REJECT;\n        }\n\n        let result: number | undefined;\n\n        let fromCtx = state.fromCtx;\n\n        if (!fromCtx) {\n            fromCtx = state.fromCtx = RootAPI.getTabsterContext(\n                this._tabster,\n                state.from\n            );\n        }\n\n        const fromMover = fromCtx?.mover;\n        let groupper = ctx.groupper;\n        let mover = ctx.mover;\n\n        result = this._tabster.modalizer?.acceptElement(element, state);\n\n        if (result !== undefined) {\n            state.skippedFocusable = true;\n        }\n\n        if (result === undefined && (groupper || mover || fromMover)) {\n            const groupperElement = groupper?.getElement();\n            const fromMoverElement = fromMover?.getElement();\n            let moverElement = mover?.getElement();\n\n            if (\n                moverElement &&\n                dom.nodeContains(fromMoverElement, moverElement) &&\n                dom.nodeContains(container, fromMoverElement) &&\n                (!groupperElement ||\n                    !mover ||\n                    dom.nodeContains(fromMoverElement, groupperElement))\n            ) {\n                mover = fromMover;\n                moverElement = fromMoverElement;\n            }\n\n            if (groupperElement) {\n                if (\n                    groupperElement === container ||\n                    !dom.nodeContains(container, groupperElement)\n                ) {\n                    groupper = undefined;\n                } else if (!dom.nodeContains(groupperElement, element)) {\n                    // _acceptElement() callback is called during the tree walking.\n                    // Given the potentiality of virtual parents (driven by the custom getParent() function),\n                    // we need to make sure that the groupper from the current element's context is not,\n                    // portaling us out of the DOM order.\n                    return NodeFilter.FILTER_REJECT;\n                }\n            }\n\n            if (moverElement) {\n                if (!dom.nodeContains(container, moverElement)) {\n                    mover = undefined;\n                } else if (!dom.nodeContains(moverElement, element)) {\n                    // _acceptElement() callback is called during the tree walking.\n                    // Given the potentiality of virtual parents (driven by the custom getParent() function),\n                    // we need to make sure that the mover from the current element's context is not,\n                    // portaling us out of the DOM order.\n                    return NodeFilter.FILTER_REJECT;\n                }\n            }\n\n            if (groupper && mover) {\n                if (\n                    moverElement &&\n                    groupperElement &&\n                    !dom.nodeContains(groupperElement, moverElement)\n                ) {\n                    mover = undefined;\n                } else {\n                    groupper = undefined;\n                }\n            }\n\n            if (groupper) {\n                result = groupper.acceptElement(element, state);\n            }\n\n            if (mover) {\n                result = mover.acceptElement(element, state);\n            }\n        }\n\n        if (result === undefined) {\n            result = state.acceptCondition(element)\n                ? NodeFilter.FILTER_ACCEPT\n                : NodeFilter.FILTER_SKIP;\n\n            if (\n                result === NodeFilter.FILTER_SKIP &&\n                this.isFocusable(element, false, true, true)\n            ) {\n                state.skippedFocusable = true;\n            }\n        }\n\n        if (result === NodeFilter.FILTER_ACCEPT && !state.found) {\n            if (\n                !state.isFindAll &&\n                isRadio(element) &&\n                !(element as HTMLInputElement).checked\n            ) {\n                // We need to mimic the browser's behaviour to skip unchecked radio buttons.\n                const radioGroupName = (element as HTMLInputElement).name;\n                let radioGroup: Types.RadioButtonGroup | undefined =\n                    state.cachedRadioGroups[radioGroupName];\n\n                if (!radioGroup) {\n                    radioGroup = getRadioButtonGroup(element);\n\n                    if (radioGroup) {\n                        state.cachedRadioGroups[radioGroupName] = radioGroup;\n                    }\n                }\n\n                if (radioGroup?.checked && radioGroup.checked !== element) {\n                    // Currently found element is a radio button in a group that has another radio button checked.\n                    return NodeFilter.FILTER_SKIP;\n                }\n            }\n\n            if (state.isBackward) {\n                // When TreeWalker goes backwards, it visits the container first,\n                // then it goes inside. So, if the container is accepted, we remember it,\n                // but allowing the TreeWalker to check inside.\n                state.foundBackward = element;\n                result = NodeFilter.FILTER_SKIP;\n            } else {\n                state.found = true;\n                state.foundElement = element;\n            }\n        }\n\n        return result;\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport const Keys: {\n    Tab: \"Tab\";\n    Enter: \"Enter\";\n    Escape: \"Escape\";\n    Space: \" \";\n    PageUp: \"PageUp\";\n    PageDown: \"PageDown\";\n    End: \"End\";\n    Home: \"Home\";\n    ArrowLeft: \"ArrowLeft\";\n    ArrowUp: \"ArrowUp\";\n    ArrowRight: \"ArrowRight\";\n    ArrowDown: \"ArrowDown\";\n} = {\n    Tab: \"Tab\",\n    Enter: \"Enter\",\n    Escape: \"Escape\",\n    Space: \" \",\n    PageUp: \"PageUp\",\n    PageDown: \"PageDown\",\n    End: \"End\",\n    Home: \"Home\",\n    ArrowLeft: \"ArrowLeft\",\n    ArrowUp: \"ArrowUp\",\n    ArrowRight: \"ArrowRight\",\n    ArrowDown: \"ArrowDown\",\n};\n\nexport type Key = (typeof Keys)[keyof typeof Keys];\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    KEYBORG_FOCUSIN,\n    KEYBORG_FOCUSOUT,\n    KeyborgFocusInEvent,\n    KeyborgFocusOutEvent,\n    nativeFocus,\n} from \"keyborg\";\n\nimport { Keys } from \"../Keys\";\nimport { RootAPI } from \"../Root\";\nimport * as Types from \"../Types\";\nimport { AsyncFocusSources } from \"../Consts\";\nimport {\n    TabsterFocusInEvent,\n    TabsterFocusOutEvent,\n    TabsterMoveFocusEvent,\n} from \"../Events\";\nimport {\n    documentContains,\n    DummyInputManager,\n    getLastChild,\n    shouldIgnoreFocus,\n    WeakHTMLElement,\n} from \"../Utils\";\nimport { getTabsterOnElement } from \"../Instance\";\nimport { dom } from \"../DOMAPI\";\nimport { Subscribable } from \"./Subscribable\";\n\nfunction getUncontrolledCompletelyContainer(\n    tabster: Types.TabsterCore,\n    element: HTMLElement\n): HTMLElement | undefined {\n    const getParent = tabster.getParent;\n    let el: HTMLElement | null = element;\n\n    do {\n        const uncontrolledOnElement = getTabsterOnElement(\n            tabster,\n            el\n        )?.uncontrolled;\n\n        if (\n            uncontrolledOnElement &&\n            tabster.uncontrolled.isUncontrolledCompletely(\n                el,\n                !!uncontrolledOnElement.completely\n            )\n        ) {\n            return el;\n        }\n\n        el = getParent(el) as HTMLElement | null;\n    } while (el);\n\n    return undefined;\n}\n\nconst AsyncFocusIntentPriorityBySource = {\n    [AsyncFocusSources.Restorer]: 0,\n    [AsyncFocusSources.Deloser]: 1,\n    [AsyncFocusSources.EscapeGroupper]: 2,\n};\n\ninterface AsyncFocus {\n    source: Types.AsyncFocusSource;\n    callback: () => void;\n    timeout: number;\n}\n\nexport class FocusedElementState\n    extends Subscribable<HTMLElement | undefined, Types.FocusedElementDetail>\n    implements Types.FocusedElementState\n{\n    private static _lastResetElement: WeakHTMLElement | undefined;\n    private static _isTabbingTimer: number | undefined;\n    static isTabbing = false;\n\n    private _tabster: Types.TabsterCore;\n    private _win: Types.GetWindow;\n    private _nextVal:\n        | {\n              element: WeakHTMLElement | undefined;\n              detail: Types.FocusedElementDetail;\n          }\n        | undefined;\n    private _lastVal: WeakHTMLElement | undefined;\n    private _asyncFocus?: AsyncFocus;\n\n    constructor(tabster: Types.TabsterCore, getWindow: Types.GetWindow) {\n        super();\n\n        this._tabster = tabster;\n        this._win = getWindow;\n        tabster.queueInit(this._init);\n    }\n\n    private _init = (): void => {\n        const win = this._win();\n        const doc = win.document;\n\n        // Add these event listeners as capture - we want Tabster to run before user event handlers\n        doc.addEventListener(KEYBORG_FOCUSIN, this._onFocusIn, true);\n        doc.addEventListener(KEYBORG_FOCUSOUT, this._onFocusOut, true);\n        win.addEventListener(\"keydown\", this._onKeyDown, true);\n\n        const activeElement = dom.getActiveElement(doc);\n\n        if (activeElement && activeElement !== doc.body) {\n            this._setFocusedElement(activeElement as HTMLElement);\n        }\n\n        this.subscribe(this._onChanged);\n    };\n\n    dispose(): void {\n        super.dispose();\n\n        const win = this._win();\n        const doc = win.document;\n\n        doc.removeEventListener(KEYBORG_FOCUSIN, this._onFocusIn, true);\n        doc.removeEventListener(KEYBORG_FOCUSOUT, this._onFocusOut, true);\n        win.removeEventListener(\"keydown\", this._onKeyDown, true);\n\n        this.unsubscribe(this._onChanged);\n\n        const asyncFocus = this._asyncFocus;\n        if (asyncFocus) {\n            win.clearTimeout(asyncFocus.timeout);\n            delete this._asyncFocus;\n        }\n\n        delete FocusedElementState._lastResetElement;\n\n        delete this._nextVal;\n        delete this._lastVal;\n    }\n\n    static forgetMemorized(\n        instance: Types.FocusedElementState,\n        parent: HTMLElement\n    ): void {\n        let wel = FocusedElementState._lastResetElement;\n        let el = wel && wel.get();\n        if (el && dom.nodeContains(parent, el)) {\n            delete FocusedElementState._lastResetElement;\n        }\n\n        el = (instance as FocusedElementState)._nextVal?.element?.get();\n        if (el && dom.nodeContains(parent, el)) {\n            delete (instance as FocusedElementState)._nextVal;\n        }\n\n        wel = (instance as FocusedElementState)._lastVal;\n        el = wel && wel.get();\n        if (el && dom.nodeContains(parent, el)) {\n            delete (instance as FocusedElementState)._lastVal;\n        }\n    }\n\n    getFocusedElement(): HTMLElement | undefined {\n        return this.getVal();\n    }\n\n    getLastFocusedElement(): HTMLElement | undefined {\n        let el = this._lastVal?.get();\n\n        if (!el || (el && !documentContains(el.ownerDocument, el))) {\n            this._lastVal = el = undefined;\n        }\n\n        return el;\n    }\n\n    focus(\n        element: HTMLElement,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean,\n        preventScroll?: boolean\n    ): boolean {\n        if (\n            !this._tabster.focusable.isFocusable(\n                element,\n                noFocusedProgrammaticallyFlag,\n                false,\n                noAccessibleCheck\n            )\n        ) {\n            return false;\n        }\n\n        element.focus({ preventScroll });\n\n        return true;\n    }\n\n    focusDefault(container: HTMLElement): boolean {\n        const el = this._tabster.focusable.findDefault({ container });\n\n        if (el) {\n            this._tabster.focusedElement.focus(el);\n\n            return true;\n        }\n\n        return false;\n    }\n\n    getFirstOrLastTabbable(\n        isFirst: boolean,\n        props: Pick<\n            Types.FindFocusableProps,\n            \"container\" | \"ignoreAccessibility\"\n        >\n    ): HTMLElement | undefined {\n        const { container, ignoreAccessibility } = props;\n        let toFocus: HTMLElement | null | undefined;\n\n        if (container) {\n            const ctx = RootAPI.getTabsterContext(this._tabster, container);\n\n            if (ctx) {\n                toFocus = FocusedElementState.findNextTabbable(\n                    this._tabster,\n                    ctx,\n                    container,\n                    undefined,\n                    undefined,\n                    !isFirst,\n                    ignoreAccessibility\n                )?.element;\n            }\n        }\n\n        if (toFocus && !dom.nodeContains(container, toFocus)) {\n            toFocus = undefined;\n        }\n\n        return toFocus || undefined;\n    }\n\n    private _focusFirstOrLast(\n        isFirst: boolean,\n        props: Types.FindFirstProps\n    ): boolean {\n        const toFocus = this.getFirstOrLastTabbable(isFirst, props);\n\n        if (toFocus) {\n            this.focus(toFocus, false, true);\n\n            return true;\n        }\n\n        return false;\n    }\n\n    focusFirst(props: Types.FindFirstProps): boolean {\n        return this._focusFirstOrLast(true, props);\n    }\n\n    focusLast(props: Types.FindFirstProps): boolean {\n        return this._focusFirstOrLast(false, props);\n    }\n\n    resetFocus(container: HTMLElement): boolean {\n        if (!this._tabster.focusable.isVisible(container)) {\n            return false;\n        }\n\n        if (!this._tabster.focusable.isFocusable(container, true, true, true)) {\n            const prevTabIndex = container.getAttribute(\"tabindex\");\n            const prevAriaHidden = container.getAttribute(\"aria-hidden\");\n\n            container.tabIndex = -1;\n            container.setAttribute(\"aria-hidden\", \"true\");\n\n            FocusedElementState._lastResetElement = new WeakHTMLElement(\n                this._win,\n                container\n            );\n\n            this.focus(container, true, true);\n\n            this._setOrRemoveAttribute(container, \"tabindex\", prevTabIndex);\n            this._setOrRemoveAttribute(\n                container,\n                \"aria-hidden\",\n                prevAriaHidden\n            );\n        } else {\n            this.focus(container);\n        }\n\n        return true;\n    }\n\n    requestAsyncFocus(\n        source: Types.AsyncFocusSource,\n        callback: () => void,\n        delay: number\n    ): void {\n        const win = this._tabster.getWindow();\n        const currentAsyncFocus = this._asyncFocus;\n\n        if (currentAsyncFocus) {\n            if (\n                AsyncFocusIntentPriorityBySource[source] >\n                AsyncFocusIntentPriorityBySource[currentAsyncFocus.source]\n            ) {\n                // Previously registered intent has higher priority.\n                return;\n            }\n\n            // New intent has higher priority.\n            win.clearTimeout(currentAsyncFocus.timeout);\n        }\n\n        this._asyncFocus = {\n            source,\n            callback,\n            timeout: win.setTimeout(() => {\n                this._asyncFocus = undefined;\n                callback();\n            }, delay),\n        };\n    }\n\n    cancelAsyncFocus(source: Types.AsyncFocusSource): void {\n        const asyncFocus = this._asyncFocus;\n\n        if (asyncFocus?.source === source) {\n            this._tabster.getWindow().clearTimeout(asyncFocus.timeout);\n            this._asyncFocus = undefined;\n        }\n    }\n\n    private _setOrRemoveAttribute(\n        element: HTMLElement,\n        name: string,\n        value: string | null\n    ): void {\n        if (value === null) {\n            element.removeAttribute(name);\n        } else {\n            element.setAttribute(name, value);\n        }\n    }\n\n    private _setFocusedElement(\n        element?: HTMLElement,\n        relatedTarget?: HTMLElement,\n        isFocusedProgrammatically?: boolean\n    ): void {\n        if (this._tabster._noop) {\n            return;\n        }\n\n        const detail: Types.FocusedElementDetail = { relatedTarget };\n\n        if (element) {\n            const lastResetElement =\n                FocusedElementState._lastResetElement?.get();\n            FocusedElementState._lastResetElement = undefined;\n\n            if (lastResetElement === element || shouldIgnoreFocus(element)) {\n                return;\n            }\n\n            detail.isFocusedProgrammatically = isFocusedProgrammatically;\n\n            const ctx = RootAPI.getTabsterContext(this._tabster, element);\n\n            const modalizerId = ctx?.modalizer?.userId;\n\n            if (modalizerId) {\n                detail.modalizerId = modalizerId;\n            }\n        }\n\n        const nextVal = (this._nextVal = {\n            element: element\n                ? new WeakHTMLElement(this._win, element)\n                : undefined,\n            detail,\n        });\n\n        if (element && element !== this._val) {\n            this._validateFocusedElement(element);\n        }\n\n        // _validateFocusedElement() might cause the refocus which will trigger\n        // another call to this function. Making sure that the value is correct.\n        if (this._nextVal === nextVal) {\n            this.setVal(element, detail);\n        }\n\n        this._nextVal = undefined;\n    }\n\n    protected setVal(\n        val: HTMLElement | undefined,\n        detail: Types.FocusedElementDetail\n    ): void {\n        super.setVal(val, detail);\n\n        if (val) {\n            this._lastVal = new WeakHTMLElement(this._win, val);\n        }\n    }\n\n    private _onFocusIn = (e: KeyborgFocusInEvent): void => {\n        const target = e.composedPath()[0] as HTMLElement;\n\n        if (target) {\n            this._setFocusedElement(\n                target,\n                e.detail.relatedTarget as HTMLElement | undefined,\n                e.detail.isFocusedProgrammatically\n            );\n        }\n    };\n\n    private _onFocusOut = (e: KeyborgFocusOutEvent): void => {\n        this._setFocusedElement(\n            undefined,\n            e.detail?.originalEvent.relatedTarget as HTMLElement | undefined\n        );\n    };\n\n    static findNextTabbable(\n        tabster: Types.TabsterCore,\n        ctx: Types.TabsterContext,\n        container?: HTMLElement,\n        currentElement?: HTMLElement,\n        referenceElement?: HTMLElement,\n        isBackward?: boolean,\n        ignoreAccessibility?: boolean\n    ): Types.NextTabbable | null {\n        const actualContainer = container || ctx.root.getElement();\n\n        if (!actualContainer) {\n            return null;\n        }\n\n        let next: Types.NextTabbable | null = null;\n\n        const isTabbingTimer = FocusedElementState._isTabbingTimer;\n        const win = tabster.getWindow();\n\n        if (isTabbingTimer) {\n            win.clearTimeout(isTabbingTimer);\n        }\n\n        FocusedElementState.isTabbing = true;\n        FocusedElementState._isTabbingTimer = win.setTimeout(() => {\n            delete FocusedElementState._isTabbingTimer;\n            FocusedElementState.isTabbing = false;\n        }, 0);\n\n        const modalizer = ctx.modalizer;\n        const groupper = ctx.groupper;\n        const mover = ctx.mover;\n\n        const callFindNext = (\n            what: Types.Groupper | Types.Mover | Types.Modalizer\n        ) => {\n            next = what.findNextTabbable(\n                currentElement,\n                referenceElement,\n                isBackward,\n                ignoreAccessibility\n            );\n\n            if (currentElement && !next?.element) {\n                const parentElement =\n                    what !== modalizer &&\n                    dom.getParentElement(what.getElement());\n\n                if (parentElement) {\n                    const parentCtx = RootAPI.getTabsterContext(\n                        tabster,\n                        currentElement,\n                        { referenceElement: parentElement }\n                    );\n\n                    if (parentCtx) {\n                        const currentScopeElement = what.getElement();\n                        const newCurrent = isBackward\n                            ? currentScopeElement\n                            : (currentScopeElement &&\n                                  getLastChild(currentScopeElement)) ||\n                              currentScopeElement;\n\n                        if (newCurrent) {\n                            next = FocusedElementState.findNextTabbable(\n                                tabster,\n                                parentCtx,\n                                container,\n                                newCurrent,\n                                parentElement,\n                                isBackward,\n                                ignoreAccessibility\n                            );\n\n                            if (next) {\n                                next.outOfDOMOrder = true;\n                            }\n                        }\n                    }\n                }\n            }\n        };\n\n        if (groupper && mover) {\n            callFindNext(ctx.groupperBeforeMover ? groupper : mover);\n        } else if (groupper) {\n            callFindNext(groupper);\n        } else if (mover) {\n            callFindNext(mover);\n        } else if (modalizer) {\n            callFindNext(modalizer);\n        } else {\n            const findProps: Types.FindNextProps = {\n                container: actualContainer,\n                currentElement,\n                referenceElement,\n                ignoreAccessibility,\n                useActiveModalizer: true,\n            };\n\n            const findPropsOut: Types.FindFocusableOutputProps = {};\n\n            const nextElement = tabster.focusable[\n                isBackward ? \"findPrev\" : \"findNext\"\n            ](findProps, findPropsOut);\n\n            next = {\n                element: nextElement,\n                outOfDOMOrder: findPropsOut.outOfDOMOrder,\n                uncontrolled: findPropsOut.uncontrolled,\n            };\n        }\n\n        return next;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    private _validateFocusedElement = (element: HTMLElement): void => {\n        // TODO: Make sure this is not needed anymore and write tests.\n    };\n\n    private _onKeyDown = (event: KeyboardEvent): void => {\n        if (event.key !== Keys.Tab || event.ctrlKey) {\n            return;\n        }\n\n        const currentElement = this.getVal();\n\n        if (\n            !currentElement ||\n            !currentElement.ownerDocument ||\n            currentElement.contentEditable === \"true\"\n        ) {\n            return;\n        }\n\n        const tabster = this._tabster;\n        const controlTab = tabster.controlTab;\n        const ctx = RootAPI.getTabsterContext(tabster, currentElement);\n\n        if (!ctx || ctx.ignoreKeydown(event)) {\n            return;\n        }\n\n        const isBackward = event.shiftKey;\n\n        const next = FocusedElementState.findNextTabbable(\n            tabster,\n            ctx,\n            undefined,\n            currentElement,\n            undefined,\n            isBackward,\n            true\n        );\n\n        const rootElement = ctx.root.getElement();\n\n        if (!rootElement) {\n            return;\n        }\n\n        const nextElement = next?.element;\n        const uncontrolledCompletelyContainer =\n            getUncontrolledCompletelyContainer(tabster, currentElement);\n\n        if (nextElement) {\n            const nextUncontrolled = next.uncontrolled;\n\n            if (\n                ctx.uncontrolled ||\n                dom.nodeContains(nextUncontrolled, currentElement)\n            ) {\n                if (\n                    (!next.outOfDOMOrder &&\n                        nextUncontrolled === ctx.uncontrolled) ||\n                    (uncontrolledCompletelyContainer &&\n                        !dom.nodeContains(\n                            uncontrolledCompletelyContainer,\n                            nextElement\n                        ))\n                ) {\n                    // Nothing to do, everything will be done by the browser or something\n                    // that controls the uncontrolled area.\n                    return;\n                }\n\n                // We are in uncontrolled area. We allow whatever controls it to move\n                // focus, but we add a phantom dummy to make sure the focus is moved\n                // to the correct place if the uncontrolled area allows default action.\n                // We only need that in the controlled mode, because in uncontrolled\n                // mode we have dummy inputs around everything that redirects focus.\n                DummyInputManager.addPhantomDummyWithTarget(\n                    tabster,\n                    currentElement,\n                    isBackward,\n                    nextElement\n                );\n\n                return;\n            }\n\n            if (\n                (nextUncontrolled &&\n                    tabster.focusable.isVisible(nextUncontrolled)) ||\n                (nextElement.tagName === \"IFRAME\" &&\n                    tabster.focusable.isVisible(nextElement))\n            ) {\n                // For iframes and uncontrolled areas we always want to use default action to\n                // move focus into.\n                if (\n                    rootElement.dispatchEvent(\n                        new TabsterMoveFocusEvent({\n                            by: \"root\",\n                            owner: rootElement,\n                            next: nextElement,\n                            relatedEvent: event,\n                        })\n                    )\n                ) {\n                    DummyInputManager.moveWithPhantomDummy(\n                        tabster,\n                        nextUncontrolled ?? nextElement,\n                        false,\n                        isBackward,\n                        event\n                    );\n                }\n\n                return;\n            }\n\n            if (controlTab || next?.outOfDOMOrder) {\n                if (\n                    rootElement.dispatchEvent(\n                        new TabsterMoveFocusEvent({\n                            by: \"root\",\n                            owner: rootElement,\n                            next: nextElement,\n                            relatedEvent: event,\n                        })\n                    )\n                ) {\n                    event.preventDefault();\n                    event.stopImmediatePropagation();\n\n                    nativeFocus(nextElement);\n                }\n            } else {\n                // We are in uncontrolled mode and the next element is in DOM order.\n                // Just allow the default action.\n            }\n        } else {\n            if (\n                !uncontrolledCompletelyContainer &&\n                rootElement.dispatchEvent(\n                    new TabsterMoveFocusEvent({\n                        by: \"root\",\n                        owner: rootElement,\n                        next: null,\n                        relatedEvent: event,\n                    })\n                )\n            ) {\n                ctx.root.moveOutWithDefaultAction(isBackward, event);\n            }\n        }\n    };\n\n    _onChanged = (\n        element: HTMLElement | undefined,\n        detail: Types.FocusedElementDetail\n    ): void => {\n        if (element) {\n            element.dispatchEvent(new TabsterFocusInEvent(detail));\n        } else {\n            const last = this._lastVal?.get();\n\n            if (last) {\n                const d = { ...detail };\n                const lastCtx = RootAPI.getTabsterContext(this._tabster, last);\n                const modalizerId = lastCtx?.modalizer?.userId;\n\n                if (modalizerId) {\n                    d.modalizerId = modalizerId;\n                }\n\n                last.dispatchEvent(new TabsterFocusOutEvent(d));\n            }\n        }\n    };\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { nativeFocus } from \"keyborg\";\n\nimport { getTabsterOnElement } from \"./Instance\";\nimport { Keys } from \"./Keys\";\nimport { RootAPI } from \"./Root\";\nimport * as Types from \"./Types\";\nimport {\n    AsyncFocusSources,\n    GroupperMoveFocusActions,\n    GroupperTabbabilities,\n} from \"./Consts\";\nimport {\n    GroupperMoveFocusEvent,\n    GroupperMoveFocusEventName,\n    TabsterMoveFocusEvent,\n} from \"./Events\";\nimport { FocusedElementState } from \"./State/FocusedElement\";\nimport {\n    DummyInput,\n    DummyInputManager,\n    DummyInputManagerPriorities,\n    getAdjacentElement,\n    getDummyInputContainer,\n    TabsterPart,\n    WeakHTMLElement,\n} from \"./Utils\";\nimport { dom } from \"./DOMAPI\";\n\nclass GroupperDummyManager extends DummyInputManager {\n    constructor(\n        element: WeakHTMLElement,\n        groupper: Groupper,\n        tabster: Types.TabsterCore,\n        sys: Types.SysProps | undefined\n    ) {\n        super(\n            tabster,\n            element,\n            DummyInputManagerPriorities.Groupper,\n            sys,\n            true\n        );\n\n        this._setHandlers(\n            (\n                dummyInput: DummyInput,\n                isBackward: boolean,\n                relatedTarget: HTMLElement | null\n            ) => {\n                const container = element.get();\n                const input = dummyInput.input;\n\n                if (container && input) {\n                    const ctx = RootAPI.getTabsterContext(tabster, input);\n\n                    if (ctx) {\n                        let next: HTMLElement | null | undefined;\n\n                        next = groupper.findNextTabbable(\n                            relatedTarget || undefined,\n                            undefined,\n                            isBackward,\n                            true\n                        )?.element;\n\n                        if (!next) {\n                            next = FocusedElementState.findNextTabbable(\n                                tabster,\n                                ctx,\n                                undefined,\n                                dummyInput.isOutside\n                                    ? input\n                                    : getAdjacentElement(\n                                          container,\n                                          !isBackward\n                                      ),\n                                undefined,\n                                isBackward,\n                                true\n                            )?.element;\n                        }\n\n                        if (next) {\n                            nativeFocus(next);\n                        }\n                    }\n                }\n            }\n        );\n    }\n}\n\nexport class Groupper\n    extends TabsterPart<Types.GroupperProps>\n    implements Types.Groupper\n{\n    private _shouldTabInside = false;\n    private _first: WeakHTMLElement | undefined;\n    private _onDispose: (groupper: Groupper) => void;\n\n    dummyManager: GroupperDummyManager | undefined;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: HTMLElement,\n        onDispose: (groupper: Groupper) => void,\n        props: Types.GroupperProps,\n        sys: Types.SysProps | undefined\n    ) {\n        super(tabster, element, props);\n        this.makeTabbable(false);\n\n        this._onDispose = onDispose;\n\n        if (!tabster.controlTab) {\n            this.dummyManager = new GroupperDummyManager(\n                this._element,\n                this,\n                tabster,\n                sys\n            );\n        }\n    }\n\n    dispose(): void {\n        this._onDispose(this);\n\n        const element = this._element.get();\n        this.dummyManager?.dispose();\n        delete this.dummyManager;\n\n        if (element) {\n            if (__DEV__) {\n                _setInformativeStyle(this._element, true);\n            }\n        }\n\n        delete this._first;\n    }\n\n    findNextTabbable(\n        currentElement?: HTMLElement,\n        referenceElement?: HTMLElement,\n        isBackward?: boolean,\n        ignoreAccessibility?: boolean\n    ): Types.NextTabbable | null {\n        const groupperElement = this.getElement();\n\n        if (!groupperElement) {\n            return null;\n        }\n\n        const currentIsDummy =\n            getDummyInputContainer(currentElement) === groupperElement;\n\n        if (\n            !this._shouldTabInside &&\n            currentElement &&\n            dom.nodeContains(groupperElement, currentElement) &&\n            !currentIsDummy\n        ) {\n            return { element: undefined, outOfDOMOrder: true };\n        }\n\n        const groupperFirstFocusable = this.getFirst(true);\n\n        if (\n            !currentElement ||\n            !dom.nodeContains(groupperElement, currentElement) ||\n            currentIsDummy\n        ) {\n            return {\n                element: groupperFirstFocusable,\n                outOfDOMOrder: true,\n            };\n        }\n\n        const tabster = this._tabster;\n        let next: HTMLElement | null | undefined = null;\n        let outOfDOMOrder = false;\n        let uncontrolled: HTMLElement | null | undefined;\n\n        if (this._shouldTabInside && groupperFirstFocusable) {\n            const findProps: Types.FindNextProps = {\n                container: groupperElement,\n                currentElement,\n                referenceElement,\n                ignoreAccessibility,\n                useActiveModalizer: true,\n            };\n\n            const findPropsOut: Types.FindFocusableOutputProps = {};\n\n            next = tabster.focusable[isBackward ? \"findPrev\" : \"findNext\"](\n                findProps,\n                findPropsOut\n            );\n\n            outOfDOMOrder = !!findPropsOut.outOfDOMOrder;\n\n            if (\n                !next &&\n                this._props.tabbability ===\n                    GroupperTabbabilities.LimitedTrapFocus\n            ) {\n                next = tabster.focusable[isBackward ? \"findLast\" : \"findFirst\"](\n                    {\n                        container: groupperElement,\n                        ignoreAccessibility,\n                        useActiveModalizer: true,\n                    },\n                    findPropsOut\n                );\n\n                outOfDOMOrder = true;\n            }\n\n            uncontrolled = findPropsOut.uncontrolled;\n        }\n\n        return {\n            element: next,\n            uncontrolled,\n            outOfDOMOrder,\n        };\n    }\n\n    makeTabbable(isTabbable: boolean): void {\n        this._shouldTabInside = isTabbable || !this._props.tabbability;\n\n        if (__DEV__) {\n            _setInformativeStyle(this._element, !this._shouldTabInside);\n        }\n    }\n\n    isActive(noIfFirstIsFocused?: boolean): boolean | undefined {\n        const element = this.getElement() || null;\n        let isParentActive = true;\n\n        for (\n            let e = dom.getParentElement(element);\n            e;\n            e = dom.getParentElement(e)\n        ) {\n            const g = getTabsterOnElement(this._tabster, e)?.groupper as\n                | Groupper\n                | undefined;\n\n            if (g) {\n                if (!g._shouldTabInside) {\n                    isParentActive = false;\n                }\n            }\n        }\n\n        let ret = isParentActive\n            ? this._props.tabbability\n                ? this._shouldTabInside\n                : false\n            : undefined;\n\n        if (ret && noIfFirstIsFocused) {\n            const focused = this._tabster.focusedElement.getFocusedElement();\n\n            if (focused) {\n                ret = focused !== this.getFirst(true);\n            }\n        }\n\n        return ret;\n    }\n\n    getFirst(orContainer: boolean): HTMLElement | undefined {\n        const groupperElement = this.getElement();\n        let first: HTMLElement | undefined;\n\n        if (groupperElement) {\n            if (\n                orContainer &&\n                this._tabster.focusable.isFocusable(groupperElement)\n            ) {\n                return groupperElement;\n            }\n\n            first = this._first?.get();\n\n            if (!first) {\n                first =\n                    this._tabster.focusable.findFirst({\n                        container: groupperElement,\n                        useActiveModalizer: true,\n                    }) || undefined;\n\n                if (first) {\n                    this.setFirst(first);\n                }\n            }\n        }\n\n        return first;\n    }\n\n    setFirst(element: HTMLElement | undefined): void {\n        if (element) {\n            this._first = new WeakHTMLElement(this._tabster.getWindow, element);\n        } else {\n            delete this._first;\n        }\n    }\n\n    acceptElement(\n        element: HTMLElement,\n        state: Types.FocusableAcceptElementState\n    ): number | undefined {\n        const cachedGrouppers = state.cachedGrouppers;\n\n        const parentElement = dom.getParentElement(this.getElement());\n        const parentCtx =\n            parentElement &&\n            RootAPI.getTabsterContext(this._tabster, parentElement);\n        const parentCtxGroupper = parentCtx?.groupper;\n        const parentGroupper = parentCtx?.groupperBeforeMover\n            ? parentCtxGroupper\n            : undefined;\n        let parentGroupperElement: HTMLElement | undefined;\n\n        const getIsActive = (groupper: Types.Groupper) => {\n            let cached = cachedGrouppers[groupper.id];\n            let isActive: boolean | undefined;\n\n            if (cached) {\n                isActive = cached.isActive;\n            } else {\n                isActive = this.isActive(true);\n\n                cached = cachedGrouppers[groupper.id] = {\n                    isActive,\n                };\n            }\n\n            return isActive;\n        };\n\n        if (parentGroupper) {\n            parentGroupperElement = parentGroupper.getElement();\n\n            if (\n                !getIsActive(parentGroupper) &&\n                parentGroupperElement &&\n                state.container !== parentGroupperElement &&\n                dom.nodeContains(state.container, parentGroupperElement)\n            ) {\n                // Do not fall into a child groupper of inactive parent groupper if it's in the scope of the search.\n                state.skippedFocusable = true;\n                return NodeFilter.FILTER_REJECT;\n            }\n        }\n\n        const isActive = getIsActive(this);\n        const groupperElement = this.getElement();\n\n        if (groupperElement) {\n            if (isActive !== true) {\n                if (groupperElement === element && parentCtxGroupper) {\n                    if (!parentGroupperElement) {\n                        parentGroupperElement = parentCtxGroupper.getElement();\n                    }\n\n                    if (\n                        parentGroupperElement &&\n                        !getIsActive(parentCtxGroupper) &&\n                        dom.nodeContains(\n                            state.container,\n                            parentGroupperElement\n                        ) &&\n                        parentGroupperElement !== state.container\n                    ) {\n                        state.skippedFocusable = true;\n                        return NodeFilter.FILTER_REJECT;\n                    }\n                }\n\n                if (\n                    groupperElement !== element &&\n                    dom.nodeContains(groupperElement, element)\n                ) {\n                    state.skippedFocusable = true;\n                    return NodeFilter.FILTER_REJECT;\n                }\n\n                const cached = cachedGrouppers[this.id];\n                let first: HTMLElement | null | undefined;\n\n                if (\"first\" in cached) {\n                    first = cached.first;\n                } else {\n                    first = cached.first = this.getFirst(true);\n                }\n\n                if (first && state.acceptCondition(first)) {\n                    state.rejectElementsFrom = groupperElement;\n                    state.skippedFocusable = true;\n\n                    if (first !== state.from) {\n                        state.found = true;\n                        state.foundElement = first;\n                        return NodeFilter.FILTER_ACCEPT;\n                    } else {\n                        return NodeFilter.FILTER_REJECT;\n                    }\n                }\n            }\n        }\n\n        return undefined;\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction validateGroupperProps(props: Types.GroupperProps): void {\n    // TODO: Implement validation.\n}\n\nexport class GroupperAPI implements Types.GroupperAPI {\n    private _tabster: Types.TabsterCore;\n    private _updateTimer: number | undefined;\n    private _win: Types.GetWindow;\n    private _current: Record<string, Types.Groupper> = {};\n    private _grouppers: Record<string, Types.Groupper> = {};\n\n    constructor(tabster: Types.TabsterCore, getWindow: Types.GetWindow) {\n        this._tabster = tabster;\n        this._win = getWindow;\n        tabster.queueInit(this._init);\n    }\n\n    private _init = (): void => {\n        const win = this._win();\n\n        // Making sure groupper's onFocus is called before modalizer's onFocus.\n        this._tabster.focusedElement.subscribeFirst(this._onFocus);\n\n        const doc = win.document;\n\n        const activeElement = dom.getActiveElement(doc);\n\n        if (activeElement) {\n            this._onFocus(activeElement as HTMLElement);\n        }\n\n        doc.addEventListener(\"mousedown\", this._onMouseDown, true);\n        win.addEventListener(\"keydown\", this._onKeyDown, true);\n        win.addEventListener(GroupperMoveFocusEventName, this._onMoveFocus);\n    };\n\n    dispose(): void {\n        const win = this._win();\n\n        this._tabster.focusedElement.cancelAsyncFocus(\n            AsyncFocusSources.EscapeGroupper\n        );\n\n        this._current = {};\n\n        if (this._updateTimer) {\n            win.clearTimeout(this._updateTimer);\n            delete this._updateTimer;\n        }\n\n        this._tabster.focusedElement.unsubscribe(this._onFocus);\n\n        win.document.removeEventListener(\"mousedown\", this._onMouseDown, true);\n        win.removeEventListener(\"keydown\", this._onKeyDown, true);\n        win.removeEventListener(GroupperMoveFocusEventName, this._onMoveFocus);\n\n        Object.keys(this._grouppers).forEach((groupperId) => {\n            if (this._grouppers[groupperId]) {\n                this._grouppers[groupperId].dispose();\n                delete this._grouppers[groupperId];\n            }\n        });\n    }\n\n    createGroupper(\n        element: HTMLElement,\n        props: Types.GroupperProps,\n        sys: Types.SysProps | undefined\n    ) {\n        if (__DEV__) {\n            validateGroupperProps(props);\n        }\n\n        const tabster = this._tabster;\n        const newGroupper = new Groupper(\n            tabster,\n            element,\n            this._onGroupperDispose,\n            props,\n            sys\n        );\n\n        this._grouppers[newGroupper.id] = newGroupper;\n\n        const focusedElement = tabster.focusedElement.getFocusedElement();\n\n        // Newly created groupper contains currently focused element, update the state on the next tick (to\n        // make sure all grouppers are processed).\n        if (\n            focusedElement &&\n            dom.nodeContains(element, focusedElement) &&\n            !this._updateTimer\n        ) {\n            this._updateTimer = this._win().setTimeout(() => {\n                delete this._updateTimer;\n                // Making sure the focused element hasn't changed.\n                if (\n                    focusedElement ===\n                    tabster.focusedElement.getFocusedElement()\n                ) {\n                    this._updateCurrent(focusedElement);\n                }\n            }, 0);\n        }\n\n        return newGroupper;\n    }\n\n    forgetCurrentGrouppers(): void {\n        this._current = {};\n    }\n\n    private _onGroupperDispose = (groupper: Groupper) => {\n        delete this._grouppers[groupper.id];\n    };\n\n    private _onFocus = (element: HTMLElement | undefined): void => {\n        if (element) {\n            this._updateCurrent(element);\n        }\n    };\n\n    private _onMouseDown = (e: MouseEvent): void => {\n        let target = e.target as HTMLElement | null;\n\n        while (target && !this._tabster.focusable.isFocusable(target)) {\n            target = this._tabster.getParent(target) as HTMLElement | null;\n        }\n\n        if (target) {\n            this._updateCurrent(target);\n        }\n    };\n\n    private _updateCurrent(element: HTMLElement): void {\n        if (this._updateTimer) {\n            this._win().clearTimeout(this._updateTimer);\n            delete this._updateTimer;\n        }\n\n        const tabster = this._tabster;\n        const newIds: Record<string, true> = {};\n\n        for (\n            let el = tabster.getParent(element);\n            el;\n            el = tabster.getParent(el)\n        ) {\n            const groupper = getTabsterOnElement(\n                tabster,\n                el as HTMLElement\n            )?.groupper;\n\n            if (groupper) {\n                newIds[groupper.id] = true;\n\n                this._current[groupper.id] = groupper;\n                const isTabbable =\n                    groupper.isActive() ||\n                    (element !== el &&\n                        (!groupper.getProps().delegated ||\n                            groupper.getFirst(false) !== element));\n\n                groupper.makeTabbable(isTabbable);\n            }\n        }\n\n        for (const id of Object.keys(this._current)) {\n            const groupper = this._current[id];\n\n            if (!(groupper.id in newIds)) {\n                groupper.makeTabbable(false);\n                groupper.setFirst(undefined);\n                delete this._current[id];\n            }\n        }\n    }\n\n    private _onKeyDown = (event: KeyboardEvent): void => {\n        if (event.key !== Keys.Enter && event.key !== Keys.Escape) {\n            return;\n        }\n\n        // Give a chance to other listeners to handle the event.\n        if (event.ctrlKey || event.altKey || event.shiftKey || event.metaKey) {\n            return;\n        }\n\n        const element = this._tabster.focusedElement.getFocusedElement();\n\n        if (element) {\n            this.handleKeyPress(element, event);\n        }\n    };\n\n    private _onMoveFocus = (e: GroupperMoveFocusEvent): void => {\n        const element = e.composedPath()[0] as HTMLElement | null | undefined;\n        const action = e.detail?.action;\n\n        if (element && action !== undefined && !e.defaultPrevented) {\n            if (action === GroupperMoveFocusActions.Enter) {\n                this._enterGroupper(element);\n            } else {\n                this._escapeGroupper(element);\n            }\n\n            e.stopImmediatePropagation();\n        }\n    };\n\n    private _enterGroupper(\n        element: HTMLElement,\n        relatedEvent?: KeyboardEvent\n    ): HTMLElement | null {\n        const tabster = this._tabster;\n        const ctx = RootAPI.getTabsterContext(tabster, element);\n        const groupper = ctx?.groupper || ctx?.modalizerInGroupper;\n        const groupperElement = groupper?.getElement();\n\n        if (\n            groupper &&\n            groupperElement &&\n            (element === groupperElement ||\n                (groupper.getProps().delegated &&\n                    element === groupper.getFirst(false)))\n        ) {\n            const next = tabster.focusable.findNext({\n                container: groupperElement,\n                currentElement: element,\n                useActiveModalizer: true,\n            });\n\n            if (\n                next &&\n                (!relatedEvent ||\n                    (relatedEvent &&\n                        groupperElement.dispatchEvent(\n                            new TabsterMoveFocusEvent({\n                                by: \"groupper\",\n                                owner: groupperElement,\n                                next,\n                                relatedEvent,\n                            })\n                        )))\n            ) {\n                if (relatedEvent) {\n                    // When the application hasn't prevented default,\n                    // we consider the event completely handled, hence we\n                    // prevent the initial event's default action and stop\n                    // propagation.\n                    relatedEvent.preventDefault();\n                    relatedEvent.stopImmediatePropagation();\n                }\n\n                next.focus();\n\n                return next;\n            }\n        }\n\n        return null;\n    }\n\n    private _escapeGroupper(\n        element: HTMLElement,\n        relatedEvent?: KeyboardEvent,\n        fromModalizer?: boolean\n    ): HTMLElement | null {\n        const tabster = this._tabster;\n        const ctx = RootAPI.getTabsterContext(tabster, element);\n        let groupper = ctx?.groupper || ctx?.modalizerInGroupper;\n        const groupperElement = groupper?.getElement();\n\n        if (\n            groupper &&\n            groupperElement &&\n            dom.nodeContains(groupperElement, element)\n        ) {\n            let next: HTMLElement | null | undefined;\n\n            if (element !== groupperElement || fromModalizer) {\n                next = groupper.getFirst(true);\n            } else {\n                const parentElement = dom.getParentElement(groupperElement);\n                const parentCtx = parentElement\n                    ? RootAPI.getTabsterContext(tabster, parentElement)\n                    : undefined;\n\n                groupper = parentCtx?.groupper;\n                next = groupper?.getFirst(true);\n            }\n\n            if (\n                next &&\n                (!relatedEvent ||\n                    (relatedEvent &&\n                        groupperElement.dispatchEvent(\n                            new TabsterMoveFocusEvent({\n                                by: \"groupper\",\n                                owner: groupperElement,\n                                next,\n                                relatedEvent,\n                            })\n                        )))\n            ) {\n                if (groupper) {\n                    groupper.makeTabbable(false);\n                }\n\n                // This part happens asynchronously inside setTimeout,\n                // so no need to prevent default or stop propagation.\n                next.focus();\n\n                return next;\n            }\n        }\n\n        return null;\n    }\n\n    moveFocus(\n        element: HTMLElement,\n        action: Types.GroupperMoveFocusAction\n    ): HTMLElement | null {\n        return action === GroupperMoveFocusActions.Enter\n            ? this._enterGroupper(element)\n            : this._escapeGroupper(element);\n    }\n\n    handleKeyPress(\n        element: HTMLElement,\n        event: KeyboardEvent,\n        fromModalizer?: boolean\n    ): void {\n        const tabster = this._tabster;\n        const ctx = RootAPI.getTabsterContext(tabster, element);\n\n        if (ctx && (ctx?.groupper || ctx?.modalizerInGroupper)) {\n            tabster.focusedElement.cancelAsyncFocus(\n                AsyncFocusSources.EscapeGroupper\n            );\n\n            if (ctx.ignoreKeydown(event)) {\n                return;\n            }\n\n            if (event.key === Keys.Enter) {\n                this._enterGroupper(element, event);\n            } else if (event.key === Keys.Escape) {\n                // We will handle Esc asynchronously, if something in the application will\n                // move focus during the keypress handling, we will not interfere.\n                const focusedElement =\n                    tabster.focusedElement.getFocusedElement();\n\n                tabster.focusedElement.requestAsyncFocus(\n                    AsyncFocusSources.EscapeGroupper,\n                    () => {\n                        if (\n                            focusedElement !==\n                                tabster.focusedElement.getFocusedElement() &&\n                            // A part of Modalizer that has called this handler to escape the active groupper\n                            // might have been removed from DOM, if the focus is on body, we still want to handle Esc.\n                            ((fromModalizer && !focusedElement) ||\n                                !fromModalizer)\n                        ) {\n                            // Something else in the application has moved focus, we will not handle Esc.\n                            return;\n                        }\n\n                        this._escapeGroupper(element, event, fromModalizer);\n                    },\n                    0\n                );\n            }\n        }\n    }\n}\n\nfunction _setInformativeStyle(\n    weakElement: Types.WeakHTMLElement,\n    remove: boolean\n): void {\n    if (__DEV__) {\n        const element = weakElement.get();\n\n        if (element) {\n            if (remove) {\n                element.style.removeProperty(\"--tabster-groupper\");\n            } else {\n                element.style.setProperty(\"--tabster-groupper\", \"unlimited\");\n            }\n        }\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { createKeyborg, disposeKeyborg, Keyborg } from \"keyborg\";\n\nimport * as Types from \"../Types\";\nimport { Subscribable } from \"./Subscribable\";\n\nexport class KeyboardNavigationState\n    extends Subscribable<boolean>\n    implements Types.KeyboardNavigationState\n{\n    private _keyborg?: Keyborg;\n\n    constructor(getWindow: Types.GetWindow) {\n        super();\n        this._keyborg = createKeyborg(getWindow());\n        this._keyborg.subscribe(this._onChange);\n    }\n\n    dispose(): void {\n        super.dispose();\n\n        if (this._keyborg) {\n            this._keyborg.unsubscribe(this._onChange);\n\n            disposeKeyborg(this._keyborg);\n\n            delete this._keyborg;\n        }\n    }\n\n    private _onChange = (isNavigatingWithKeyboard: boolean) => {\n        this.setVal(isNavigatingWithKeyboard, undefined);\n    };\n\n    setNavigatingWithKeyboard(isNavigatingWithKeyboard: boolean): void {\n        this._keyborg?.setVal(isNavigatingWithKeyboard);\n    }\n\n    isNavigatingWithKeyboard(): boolean {\n        return !!this._keyborg?.isNavigatingWithKeyboard();\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { nativeFocus } from \"keyborg\";\nimport { getTabsterOnElement } from \"./Instance\";\nimport { RootAPI } from \"./Root\";\nimport { FocusedElementState } from \"./State/FocusedElement\";\nimport { Keys } from \"./Keys\";\nimport * as Types from \"./Types\";\nimport { ModalizerActiveEvent, ModalizerInactiveEvent } from \"./Events\";\nimport { ModalizerEventDetail } from \"./EventsTypes\";\nimport {\n    augmentAttribute,\n    DummyInput,\n    DummyInputManager,\n    DummyInputManagerPriorities,\n    getDummyInputContainer,\n    TabsterPart,\n    WeakHTMLElement,\n} from \"./Utils\";\nimport { dom } from \"./DOMAPI\";\n\nlet _wasFocusedCounter = 0;\n\nconst _ariaHidden = \"aria-hidden\";\n\nfunction _setInformativeStyle(\n    weakElement: WeakHTMLElement,\n    remove: boolean,\n    internalId?: string,\n    userId?: string,\n    isActive?: boolean,\n    wasFocused?: number\n): void {\n    if (__DEV__) {\n        const element = weakElement.get();\n\n        if (element) {\n            if (remove) {\n                element.style.removeProperty(\"--tabster-modalizer\");\n            } else {\n                element.style.setProperty(\n                    \"--tabster-modalizer\",\n                    internalId +\n                        \",\" +\n                        userId +\n                        \",\" +\n                        (isActive ? \"active\" : \"inactive\") +\n                        \",\" +\n                        \",\" +\n                        (wasFocused ? `focused(${wasFocused})` : \"not-focused\")\n                );\n            }\n        }\n    }\n}\n\n/**\n * Manages the dummy inputs for the Modalizer.\n */\nclass ModalizerDummyManager extends DummyInputManager {\n    constructor(\n        element: WeakHTMLElement,\n        tabster: Types.TabsterCore,\n        sys: Types.SysProps | undefined\n    ) {\n        super(tabster, element, DummyInputManagerPriorities.Modalizer, sys);\n\n        this._setHandlers((dummyInput: DummyInput, isBackward: boolean) => {\n            const el = element.get();\n            const container = el && RootAPI.getRoot(tabster, el)?.getElement();\n            const input = dummyInput.input;\n            let toFocus: HTMLElement | null | undefined;\n\n            if (container && input) {\n                const dummyContainer = getDummyInputContainer(input);\n\n                const ctx = RootAPI.getTabsterContext(\n                    tabster,\n                    dummyContainer || input\n                );\n\n                if (ctx) {\n                    toFocus = FocusedElementState.findNextTabbable(\n                        tabster,\n                        ctx,\n                        container,\n                        input,\n                        undefined,\n                        isBackward,\n                        true\n                    )?.element;\n                }\n\n                if (toFocus) {\n                    nativeFocus(toFocus);\n                }\n            }\n        });\n    }\n}\n\nexport class Modalizer\n    extends TabsterPart<Types.ModalizerProps>\n    implements Types.Modalizer\n{\n    userId: string;\n\n    private _isActive: boolean | undefined;\n    private _wasFocused = 0;\n    private _onDispose: (modalizer: Modalizer) => void;\n    private _activeElements: WeakHTMLElement<HTMLElement>[];\n\n    dummyManager: ModalizerDummyManager | undefined;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: HTMLElement,\n        onDispose: (modalizer: Modalizer) => void,\n        props: Types.ModalizerProps,\n        sys: Types.SysProps | undefined,\n        activeElements: WeakHTMLElement<HTMLElement>[]\n    ) {\n        super(tabster, element, props);\n\n        this.userId = props.id;\n        this._onDispose = onDispose;\n        this._activeElements = activeElements;\n\n        if (!tabster.controlTab) {\n            this.dummyManager = new ModalizerDummyManager(\n                this._element,\n                tabster,\n                sys\n            );\n        }\n\n        if (__DEV__) {\n            _setInformativeStyle(\n                this._element,\n                false,\n                this.id,\n                this.userId,\n                this._isActive,\n                this._wasFocused\n            );\n        }\n    }\n\n    makeActive(isActive: boolean): void {\n        if (this._isActive !== isActive) {\n            this._isActive = isActive;\n\n            const element = this.getElement();\n\n            if (element) {\n                const activeElements = this._activeElements;\n                const index = activeElements\n                    .map((e) => e.get())\n                    .indexOf(element);\n\n                if (isActive) {\n                    if (index < 0) {\n                        activeElements.push(\n                            new WeakHTMLElement(\n                                this._tabster.getWindow,\n                                element\n                            )\n                        );\n                    }\n                } else {\n                    if (index >= 0) {\n                        activeElements.splice(index, 1);\n                    }\n                }\n            }\n\n            if (__DEV__) {\n                _setInformativeStyle(\n                    this._element,\n                    false,\n                    this.id,\n                    this.userId,\n                    this._isActive,\n                    this._wasFocused\n                );\n            }\n\n            this._dispatchEvent(isActive);\n        }\n    }\n\n    focused(noIncrement?: boolean): number {\n        if (!noIncrement) {\n            this._wasFocused = ++_wasFocusedCounter;\n        }\n\n        return this._wasFocused;\n    }\n\n    setProps(props: Types.ModalizerProps): void {\n        if (props.id) {\n            this.userId = props.id;\n        }\n\n        this._props = { ...props };\n    }\n\n    dispose(): void {\n        this.makeActive(false);\n        this._onDispose(this);\n        this.dummyManager?.dispose();\n        delete this.dummyManager;\n        this._activeElements = [];\n        this._remove();\n    }\n\n    isActive(): boolean {\n        return !!this._isActive;\n    }\n\n    contains(element: HTMLElement) {\n        return dom.nodeContains(this.getElement(), element);\n    }\n\n    findNextTabbable(\n        currentElement?: HTMLElement,\n        referenceElement?: HTMLElement,\n        isBackward?: boolean,\n        ignoreAccessibility?: boolean\n    ): Types.NextTabbable | null {\n        const modalizerElement = this.getElement();\n\n        if (!modalizerElement) {\n            return null;\n        }\n\n        const tabster = this._tabster;\n        let next: HTMLElement | null | undefined = null;\n        let outOfDOMOrder = false;\n        let uncontrolled: HTMLElement | null | undefined;\n\n        const container =\n            currentElement &&\n            RootAPI.getRoot(tabster, currentElement)?.getElement();\n\n        if (container) {\n            const findProps: Types.FindNextProps = {\n                container,\n                currentElement,\n                referenceElement,\n                ignoreAccessibility,\n                useActiveModalizer: true,\n            };\n\n            const findPropsOut: Types.FindFocusableOutputProps = {};\n\n            next = tabster.focusable[isBackward ? \"findPrev\" : \"findNext\"](\n                findProps,\n                findPropsOut\n            );\n\n            if (!next && this._props.isTrapped && tabster.modalizer?.activeId) {\n                next = tabster.focusable[isBackward ? \"findLast\" : \"findFirst\"](\n                    {\n                        container,\n                        ignoreAccessibility,\n                        useActiveModalizer: true,\n                    },\n                    findPropsOut\n                );\n\n                if (next === null) {\n                    next = currentElement;\n                }\n\n                outOfDOMOrder = true;\n            } else {\n                outOfDOMOrder = !!findPropsOut.outOfDOMOrder;\n            }\n\n            uncontrolled = findPropsOut.uncontrolled;\n        }\n\n        return {\n            element: next,\n            uncontrolled,\n            outOfDOMOrder,\n        };\n    }\n\n    private _dispatchEvent(isActive: boolean, allElements?: boolean): boolean {\n        const element = this.getElement();\n        let defaultPrevented = false;\n\n        if (element) {\n            const elements = allElements\n                ? this._activeElements.map((e) => e.get())\n                : [element];\n\n            for (const el of elements) {\n                if (el) {\n                    const eventDetail: ModalizerEventDetail = {\n                        id: this.userId,\n                        element,\n                    };\n\n                    const event = isActive\n                        ? new ModalizerActiveEvent(eventDetail)\n                        : new ModalizerInactiveEvent(eventDetail);\n\n                    el.dispatchEvent(event);\n\n                    if (event.defaultPrevented) {\n                        defaultPrevented = true;\n                    }\n                }\n            }\n        }\n\n        return defaultPrevented;\n    }\n\n    private _remove(): void {\n        if (__DEV__) {\n            _setInformativeStyle(this._element, true);\n        }\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction validateModalizerProps(props: Types.ModalizerProps): void {\n    // TODO: Implement validation.\n}\n\nexport class ModalizerAPI implements Types.ModalizerAPI {\n    private _tabster: Types.TabsterCore;\n    private _win: Types.GetWindow;\n    private _restoreModalizerFocusTimer: number | undefined;\n    private _modalizers: Record<string, Types.Modalizer>;\n    private _parts: Record<string, Record<string, Types.Modalizer>>;\n    private _augMap: WeakMap<HTMLElement, true>;\n    private _aug: WeakHTMLElement<HTMLElement>[];\n    private _hiddenUpdateTimer: number | undefined;\n    private _alwaysAccessibleSelector: string | undefined;\n    private _accessibleCheck: Types.ModalizerElementAccessibleCheck | undefined;\n    private _activationHistory: (string | undefined)[];\n\n    activeId: string | undefined;\n    currentIsOthersAccessible: boolean | undefined;\n    activeElements: WeakHTMLElement<HTMLElement>[];\n\n    constructor(\n        tabster: Types.TabsterCore,\n        // @deprecated use accessibleCheck.\n        alwaysAccessibleSelector?: string,\n        accessibleCheck?: Types.ModalizerElementAccessibleCheck\n    ) {\n        this._tabster = tabster;\n        this._win = tabster.getWindow;\n        this._modalizers = {};\n        this._parts = {};\n        this._augMap = new WeakMap();\n        this._aug = [];\n        this._alwaysAccessibleSelector = alwaysAccessibleSelector;\n        this._accessibleCheck = accessibleCheck;\n        this._activationHistory = [];\n        this.activeElements = [];\n\n        if (!tabster.controlTab) {\n            tabster.root.addDummyInputs();\n        }\n\n        const win = this._win();\n        win.addEventListener(\"keydown\", this._onKeyDown, true);\n\n        tabster.queueInit(() => {\n            this._tabster.focusedElement.subscribe(this._onFocus);\n        });\n    }\n\n    dispose(): void {\n        const win = this._win();\n\n        win.removeEventListener(\"keydown\", this._onKeyDown, true);\n\n        // Dispose all modalizers managed by the API\n        Object.keys(this._modalizers).forEach((modalizerId) => {\n            if (this._modalizers[modalizerId]) {\n                this._modalizers[modalizerId].dispose();\n                delete this._modalizers[modalizerId];\n            }\n        });\n\n        win.clearTimeout(this._restoreModalizerFocusTimer);\n        win.clearTimeout(this._hiddenUpdateTimer);\n\n        this._parts = {};\n        delete this.activeId;\n        this.activeElements = [];\n\n        this._augMap = new WeakMap();\n        this._aug = [];\n\n        this._tabster.focusedElement.unsubscribe(this._onFocus);\n    }\n\n    createModalizer(\n        element: HTMLElement,\n        props: Types.ModalizerProps,\n        sys: Types.SysProps | undefined\n    ): Types.Modalizer {\n        if (__DEV__) {\n            validateModalizerProps(props);\n        }\n\n        const modalizer = new Modalizer(\n            this._tabster,\n            element,\n            this._onModalizerDispose,\n            props,\n            sys,\n            this.activeElements\n        );\n\n        const id = modalizer.id;\n        const userId = props.id;\n\n        this._modalizers[id] = modalizer;\n\n        let part = this._parts[userId];\n        if (!part) {\n            part = this._parts[userId] = {};\n        }\n        part[id] = modalizer;\n\n        const focusedElement =\n            this._tabster.focusedElement.getFocusedElement() ?? null;\n\n        // Adding a modalizer which is already focused, activate it\n        if (\n            element !== focusedElement &&\n            dom.nodeContains(element, focusedElement)\n        ) {\n            if (userId !== this.activeId) {\n                this.setActive(modalizer);\n            } else {\n                modalizer.makeActive(true);\n            }\n        }\n\n        return modalizer;\n    }\n\n    private _onModalizerDispose = (modalizer: Modalizer) => {\n        const id = modalizer.id;\n        const userId = modalizer.userId;\n        const part = this._parts[userId];\n\n        delete this._modalizers[id];\n\n        if (part) {\n            delete part[id];\n\n            if (Object.keys(part).length === 0) {\n                delete this._parts[userId];\n\n                const activationHistory = this._activationHistory;\n                const cleanActivationHistory: (string | undefined)[] = [];\n                let prevHistoryItem: string | undefined;\n\n                // The history order is from most recent to oldest.\n                for (let i = activationHistory.length; i--; ) {\n                    // Remove from activation history, making sure there are no duplicates\n                    // for cases like [modal2, modal1, modal2, modal1]: just removing modal2\n                    // will result in [modal1, modal1] and we want just [modal1]. Otherwise,\n                    // there is a chance for this array to grow forever in a narrow case of\n                    // a modalizer that stays in DOM forever and is being activated/deactivated\n                    // switching between other modalizers that come and go.\n                    const modalizerUserIdFromHistory = activationHistory[i];\n\n                    if (modalizerUserIdFromHistory === userId) {\n                        continue;\n                    }\n\n                    if (modalizerUserIdFromHistory !== prevHistoryItem) {\n                        prevHistoryItem = modalizerUserIdFromHistory;\n\n                        if (\n                            modalizerUserIdFromHistory ||\n                            cleanActivationHistory.length > 0\n                        ) {\n                            cleanActivationHistory.unshift(\n                                modalizerUserIdFromHistory\n                            );\n                        }\n                    }\n                }\n\n                this._activationHistory = cleanActivationHistory;\n\n                if (this.activeId === userId) {\n                    const prevActiveId = cleanActivationHistory[0];\n                    const prevActive = prevActiveId\n                        ? Object.values(this._parts[prevActiveId])[0]\n                        : undefined;\n                    this.setActive(prevActive);\n                }\n            }\n        }\n    };\n\n    private _onKeyDown = (event: KeyboardEvent): void => {\n        if (event.key !== Keys.Escape) {\n            return;\n        }\n\n        const tabster = this._tabster;\n        const element = tabster.focusedElement.getFocusedElement();\n\n        if (element) {\n            const ctx = RootAPI.getTabsterContext(tabster, element);\n            const modalizer = ctx?.modalizer;\n\n            if (\n                ctx &&\n                !ctx.groupper &&\n                modalizer?.isActive() &&\n                !ctx.ignoreKeydown(event)\n            ) {\n                const activeId = modalizer.userId;\n\n                if (activeId) {\n                    const part = this._parts[activeId];\n\n                    if (part) {\n                        const focusedSince = Object.keys(part)\n                            .map((id) => {\n                                const m = part[id];\n                                const el = m.getElement();\n                                let groupper: Types.Groupper | undefined;\n\n                                if (el) {\n                                    groupper = getTabsterOnElement(\n                                        tabster,\n                                        el\n                                    )?.groupper;\n                                }\n\n                                return m && el && groupper\n                                    ? {\n                                          el,\n                                          focusedSince: m.focused(true),\n                                      }\n                                    : { focusedSince: 0 };\n                            })\n                            .filter((f) => f.focusedSince > 0)\n                            .sort((a, b) =>\n                                a.focusedSince > b.focusedSince\n                                    ? -1\n                                    : a.focusedSince < b.focusedSince\n                                      ? 1\n                                      : 0\n                            );\n\n                        if (focusedSince.length) {\n                            const groupperElement = focusedSince[0].el;\n\n                            if (groupperElement) {\n                                tabster.groupper?.handleKeyPress(\n                                    groupperElement,\n                                    event,\n                                    true\n                                );\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    isAugmented(element: HTMLElement): boolean {\n        return this._augMap.has(element);\n    }\n\n    hiddenUpdate(): void {\n        if (this._hiddenUpdateTimer) {\n            return;\n        }\n\n        this._hiddenUpdateTimer = this._win().setTimeout(() => {\n            delete this._hiddenUpdateTimer;\n            this._hiddenUpdate();\n        }, 250);\n    }\n\n    setActive(modalizer: Types.Modalizer | undefined): void {\n        const userId = modalizer?.userId;\n        const activeId = this.activeId;\n\n        if (activeId === userId) {\n            return;\n        }\n\n        this.activeId = userId;\n\n        if (activeId) {\n            const part = this._parts[activeId];\n\n            if (part) {\n                for (const id of Object.keys(part)) {\n                    part[id].makeActive(false);\n                }\n            }\n        }\n\n        if (userId) {\n            const part = this._parts[userId];\n\n            if (part) {\n                for (const id of Object.keys(part)) {\n                    part[id].makeActive(true);\n                }\n            }\n        }\n\n        this.currentIsOthersAccessible =\n            modalizer?.getProps().isOthersAccessible;\n\n        this.hiddenUpdate();\n\n        const activationHistory = this._activationHistory;\n        if (\n            activationHistory[0] !== userId &&\n            (userId !== undefined || activationHistory.length > 0)\n        ) {\n            activationHistory.unshift(userId);\n        }\n    }\n\n    focus(\n        elementFromModalizer: HTMLElement,\n        noFocusFirst?: boolean,\n        noFocusDefault?: boolean\n    ): boolean {\n        const tabster = this._tabster;\n        const ctx = RootAPI.getTabsterContext(tabster, elementFromModalizer);\n\n        const modalizer = ctx?.modalizer;\n\n        if (modalizer) {\n            this.setActive(modalizer);\n\n            const props = modalizer.getProps();\n            const modalizerRoot = modalizer.getElement();\n\n            if (modalizerRoot) {\n                if (noFocusFirst === undefined) {\n                    noFocusFirst = props.isNoFocusFirst;\n                }\n\n                if (\n                    !noFocusFirst &&\n                    tabster.keyboardNavigation.isNavigatingWithKeyboard() &&\n                    tabster.focusedElement.focusFirst({\n                        container: modalizerRoot,\n                    })\n                ) {\n                    return true;\n                }\n\n                if (noFocusDefault === undefined) {\n                    noFocusDefault = props.isNoFocusDefault;\n                }\n\n                if (\n                    !noFocusDefault &&\n                    tabster.focusedElement.focusDefault(modalizerRoot)\n                ) {\n                    return true;\n                }\n\n                tabster.focusedElement.resetFocus(modalizerRoot);\n            }\n        } else if (__DEV__) {\n            console.error(\"Element is not in Modalizer.\", elementFromModalizer);\n        }\n\n        return false;\n    }\n\n    activate(modalizerElementOrContainer: HTMLElement | undefined): boolean {\n        const modalizerToActivate: Types.Modalizer | undefined =\n            modalizerElementOrContainer\n                ? RootAPI.getTabsterContext(\n                      this._tabster,\n                      modalizerElementOrContainer\n                  )?.modalizer\n                : undefined;\n\n        if (!modalizerElementOrContainer || modalizerToActivate) {\n            this.setActive(modalizerToActivate);\n            return true;\n        }\n\n        return false;\n    }\n\n    acceptElement(\n        element: HTMLElement,\n        state: Types.FocusableAcceptElementState\n    ): number | undefined {\n        const modalizerUserId = state.modalizerUserId;\n        const currentModalizer = state.currentCtx?.modalizer;\n\n        if (modalizerUserId) {\n            for (const e of this.activeElements) {\n                const el = e.get();\n\n                if (el && (dom.nodeContains(element, el) || el === element)) {\n                    // We have a part of currently active modalizer somewhere deeper in the DOM,\n                    // skipping all other checks.\n                    return NodeFilter.FILTER_SKIP;\n                }\n            }\n        }\n\n        const ret =\n            modalizerUserId === currentModalizer?.userId ||\n            (!modalizerUserId &&\n                currentModalizer?.getProps().isAlwaysAccessible)\n                ? undefined\n                : NodeFilter.FILTER_SKIP;\n\n        if (ret !== undefined) {\n            state.skippedFocusable = true;\n        }\n\n        return ret;\n    }\n\n    private _hiddenUpdate(): void {\n        const tabster = this._tabster;\n        const body = tabster.getWindow().document.body;\n        const activeId = this.activeId;\n\n        const parts = this._parts;\n        const visibleElements: HTMLElement[] = [];\n        const hiddenElements: HTMLElement[] = [];\n        const alwaysAccessibleSelector = this._alwaysAccessibleSelector;\n        const alwaysAccessibleElements: HTMLElement[] = alwaysAccessibleSelector\n            ? Array.from(\n                  dom.querySelectorAll(\n                      body,\n                      alwaysAccessibleSelector\n                  ) as HTMLElement[]\n              )\n            : [];\n        const activeModalizerElements: HTMLElement[] = [];\n\n        for (const userId of Object.keys(parts)) {\n            const modalizerParts = parts[userId];\n\n            for (const id of Object.keys(modalizerParts)) {\n                const modalizer = modalizerParts[id];\n                const el = modalizer.getElement();\n                const props = modalizer.getProps();\n                const isAlwaysAccessible = props.isAlwaysAccessible;\n\n                if (el) {\n                    if (userId === activeId) {\n                        activeModalizerElements.push(el);\n\n                        if (!this.currentIsOthersAccessible) {\n                            visibleElements.push(el);\n                        }\n                    } else if (isAlwaysAccessible) {\n                        alwaysAccessibleElements.push(el);\n                    } else {\n                        hiddenElements.push(el);\n                    }\n                }\n            }\n        }\n\n        const augmentedMap = this._augMap;\n        const allVisibleElements: HTMLElement[] | undefined =\n            visibleElements.length > 0\n                ? [...visibleElements, ...alwaysAccessibleElements]\n                : undefined;\n\n        const newAugmented: WeakHTMLElement<HTMLElement>[] = [];\n        const newAugmentedMap: WeakMap<HTMLElement, true> = new WeakMap();\n\n        const toggle = (element: HTMLElement, hide: boolean) => {\n            const tagName = element.tagName;\n\n            if (tagName === \"SCRIPT\" || tagName === \"STYLE\") {\n                return;\n            }\n\n            let isAugmented = false;\n\n            if (augmentedMap.has(element)) {\n                if (hide) {\n                    isAugmented = true;\n                } else {\n                    augmentedMap.delete(element);\n                    augmentAttribute(tabster, element, _ariaHidden);\n                }\n            } else if (\n                hide &&\n                !this._accessibleCheck?.(element, activeModalizerElements) &&\n                augmentAttribute(tabster, element, _ariaHidden, \"true\")\n            ) {\n                augmentedMap.set(element, true);\n                isAugmented = true;\n            }\n\n            if (isAugmented) {\n                newAugmented.push(\n                    new WeakHTMLElement(tabster.getWindow, element)\n                );\n                newAugmentedMap.set(element, true);\n            }\n        };\n\n        const walk = (element: HTMLElement) => {\n            for (\n                let el = dom.getFirstElementChild(\n                    element\n                ) as Types.HTMLElementWithTabsterFlags | null;\n                el;\n                el = dom.getNextElementSibling(\n                    el\n                ) as Types.HTMLElementWithTabsterFlags | null\n            ) {\n                let skip = false;\n                let containsModalizer = false;\n                let containedByModalizer = false;\n\n                if (allVisibleElements) {\n                    const elParent = tabster.getParent(el);\n\n                    for (const c of allVisibleElements) {\n                        if (el === c) {\n                            skip = true;\n                            break;\n                        }\n\n                        if (dom.nodeContains(el, c)) {\n                            containsModalizer = true;\n                            break;\n                        } else if (dom.nodeContains(c, elParent)) {\n                            // tabster.getParent() could be provided by the application to\n                            // handle, for example, virtual parents. Making sure, we are\n                            // not setting aria-hidden on elements which are virtually\n                            // inside modalizer.\n                            containedByModalizer = true;\n                        }\n                    }\n\n                    if (\n                        containsModalizer ||\n                        el.__tabsterElementFlags?.noDirectAriaHidden\n                    ) {\n                        walk(el as HTMLElement);\n                    } else if (!skip && !containedByModalizer) {\n                        toggle(el as HTMLElement, true);\n                    }\n                } else {\n                    toggle(el as HTMLElement, false);\n                }\n            }\n        };\n\n        if (!allVisibleElements) {\n            alwaysAccessibleElements.forEach((e) => toggle(e, false));\n        }\n\n        hiddenElements.forEach((e) => toggle(e, true));\n\n        if (body) {\n            walk(body);\n        }\n\n        this._aug\n            ?.map((e) => e.get())\n            .forEach((e) => {\n                if (e && !newAugmentedMap.get(e)) {\n                    toggle(e, false);\n                }\n            });\n\n        this._aug = newAugmented;\n        this._augMap = newAugmentedMap;\n    }\n\n    /**\n     * Subscribes to the focus state and handles modalizer related focus events\n     * @param focusedElement - Element that is focused\n     * @param detail - Additional data about the focus event\n     */\n    private _onFocus = (\n        focusedElement: HTMLElement | undefined,\n        detail: Types.FocusedElementDetail\n    ): void => {\n        const tabster = this._tabster;\n        const ctx =\n            focusedElement &&\n            RootAPI.getTabsterContext(tabster, focusedElement);\n\n        // Modalizer behaviour is opt in, only apply to elements that have a tabster context\n        if (!ctx || !focusedElement) {\n            return;\n        }\n\n        const augmentedMap = this._augMap;\n\n        for (\n            let e: HTMLElement | null = focusedElement;\n            e;\n            e = dom.getParentElement(e)\n        ) {\n            // If the newly focused element is inside some of the hidden containers,\n            // remove aria-hidden from those synchronously for the screen readers\n            // to be able to read the element. The rest of aria-hiddens, will be removed\n            // acynchronously for the sake of performance.\n\n            if (augmentedMap.has(e)) {\n                augmentedMap.delete(e);\n                augmentAttribute(tabster, e, _ariaHidden);\n            }\n        }\n\n        let modalizer = ctx.modalizer;\n\n        const tabsterOnFocusedElement = getTabsterOnElement(\n            tabster,\n            focusedElement\n        );\n        const modalizerOnFocusedElement = tabsterOnFocusedElement?.modalizer;\n\n        if (modalizerOnFocusedElement) {\n            modalizerOnFocusedElement.focused();\n\n            if (\n                modalizerOnFocusedElement.userId === this.activeId &&\n                tabsterOnFocusedElement.groupper\n            ) {\n                const parentElement = tabster.getParent(focusedElement);\n                const parentModalizer =\n                    parentElement &&\n                    RootAPI.getTabsterContext(tabster, parentElement)\n                        ?.modalizer;\n\n                if (parentModalizer) {\n                    modalizer = parentModalizer;\n                } else {\n                    this.setActive(undefined);\n                    return;\n                }\n            }\n        }\n\n        // An inactive groupper with the modalizer on the same node will not give the modalizer\n        // in the context, yet we still want to track that the modalizer's container was focused.\n        modalizer?.focused();\n\n        if (modalizer?.userId === this.activeId) {\n            this.currentIsOthersAccessible =\n                modalizer?.getProps().isOthersAccessible;\n\n            return;\n        }\n\n        // Developers calling `element.focus()` should change/deactivate active modalizer\n        if (\n            detail.isFocusedProgrammatically ||\n            this.currentIsOthersAccessible ||\n            modalizer?.getProps().isAlwaysAccessible\n        ) {\n            this.setActive(modalizer);\n        } else {\n            // Focused outside of the active modalizer, try pull focus back to current modalizer\n            const win = this._win();\n            win.clearTimeout(this._restoreModalizerFocusTimer);\n            // TODO some rendering frameworks (i.e. React) might async rerender the DOM so we need to wait for a duration\n            // Figure out a better way of doing this rather than a 100ms timeout\n            this._restoreModalizerFocusTimer = win.setTimeout(\n                () => this._restoreModalizerFocus(focusedElement),\n                100\n            );\n        }\n    };\n\n    /**\n     * Called when an element is focused outside of an active modalizer.\n     * Attempts to pull focus back into the active modalizer\n     * @param outsideElement - An element being focused outside of the modalizer\n     */\n    private _restoreModalizerFocus(\n        outsideElement: HTMLElement | undefined\n    ): void {\n        const ownerDocument = outsideElement?.ownerDocument;\n\n        if (!outsideElement || !ownerDocument) {\n            return;\n        }\n\n        const focusedElement = this._tabster.focusedElement.getFocusedElement();\n        const focusedElementModalizer =\n            focusedElement &&\n            RootAPI.getTabsterContext(this._tabster, focusedElement)?.modalizer;\n\n        if (\n            !focusedElement ||\n            (focusedElement &&\n                focusedElementModalizer?.userId === this.activeId)\n        ) {\n            // If there is no currently focused element, or the currently focused element\n            // is in the active modalizer, we don't need to do anything.\n            return;\n        }\n\n        const tabster = this._tabster;\n        const ctx = RootAPI.getTabsterContext(tabster, outsideElement);\n        const modalizer = ctx?.modalizer;\n        const activeId = this.activeId;\n\n        if (\n            (!modalizer && !activeId) ||\n            (modalizer && activeId === modalizer.userId)\n        ) {\n            return;\n        }\n\n        const container = ctx?.root.getElement();\n\n        if (container) {\n            let toFocus = tabster.focusable.findFirst({\n                container,\n                useActiveModalizer: true,\n            });\n\n            if (toFocus) {\n                if (\n                    outsideElement.compareDocumentPosition(toFocus) &\n                    document.DOCUMENT_POSITION_PRECEDING\n                ) {\n                    toFocus = tabster.focusable.findLast({\n                        container,\n                        useActiveModalizer: true,\n                    });\n\n                    if (!toFocus) {\n                        // This only might mean that findFirst/findLast are buggy and inconsistent.\n                        throw new Error(\"Something went wrong.\");\n                    }\n                }\n\n                tabster.focusedElement.focus(toFocus);\n\n                return;\n            }\n        }\n\n        // Current Modalizer doesn't seem to have focusable elements.\n        // Blurring the currently focused element which is outside of the current Modalizer.\n        outsideElement.blur();\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { nativeFocus } from \"keyborg\";\nimport { FocusedElementState } from \"./State/FocusedElement\";\nimport { getTabsterOnElement } from \"./Instance\";\nimport { Keys } from \"./Keys\";\nimport { RootAPI } from \"./Root\";\nimport * as Types from \"./Types\";\nimport { Visibilities, MoverDirections, MoverKeys } from \"./Consts\";\nimport {\n    MoverMemorizedElementEvent,\n    MoverMemorizedElementEventName,\n    MoverMoveFocusEvent,\n    MoverMoveFocusEventName,\n    MoverStateEvent,\n    TabsterMoveFocusEvent,\n} from \"./Events\";\nimport {\n    createElementTreeWalker,\n    DummyInput,\n    DummyInputManager,\n    DummyInputManagerPriorities,\n    getElementUId,\n    getPromise,\n    isElementVerticallyVisibleInContainer,\n    matchesSelector,\n    scrollIntoView,\n    TabsterPart,\n    WeakHTMLElement,\n    getDummyInputContainer,\n} from \"./Utils\";\nimport { dom } from \"./DOMAPI\";\n\nconst _inputSelector = [\"input\", \"textarea\", \"*[contenteditable]\"].join(\", \");\n\nclass MoverDummyManager extends DummyInputManager {\n    private _tabster: Types.TabsterCore;\n    private _getMemorized: () => WeakHTMLElement | undefined;\n\n    constructor(\n        element: WeakHTMLElement,\n        tabster: Types.TabsterCore,\n        getMemorized: () => WeakHTMLElement | undefined,\n        sys: Types.SysProps | undefined\n    ) {\n        super(tabster, element, DummyInputManagerPriorities.Mover, sys);\n\n        this._tabster = tabster;\n        this._getMemorized = getMemorized;\n\n        this._setHandlers(this._onFocusDummyInput);\n    }\n\n    private _onFocusDummyInput = (dummyInput: DummyInput) => {\n        const container = this._element.get();\n        const input = dummyInput.input;\n\n        if (container && input) {\n            const ctx = RootAPI.getTabsterContext(this._tabster, container);\n\n            let toFocus: HTMLElement | null | undefined;\n\n            if (ctx) {\n                toFocus = FocusedElementState.findNextTabbable(\n                    this._tabster,\n                    ctx,\n                    undefined,\n                    input,\n                    undefined,\n                    !dummyInput.isFirst,\n                    true\n                )?.element;\n            }\n\n            const memorized = this._getMemorized()?.get();\n\n            if (memorized && this._tabster.focusable.isFocusable(memorized)) {\n                toFocus = memorized;\n            }\n\n            if (toFocus) {\n                nativeFocus(toFocus);\n            }\n        }\n    };\n}\n\n// TypeScript enums produce depressing JavaScript code, so, we're just using\n// a few old style constants here.\nconst _moverUpdateAdd = 1;\nconst _moverUpdateAttr = 2;\nconst _moverUpdateRemove = 3;\n\ninterface MoverUpdateQueueItem {\n    element: HTMLElement;\n    type:\n        | typeof _moverUpdateAdd\n        | typeof _moverUpdateAttr\n        | typeof _moverUpdateRemove;\n}\n\nexport class Mover\n    extends TabsterPart<Types.MoverProps>\n    implements Types.Mover\n{\n    private _unobserve: (() => void) | undefined;\n    private _intersectionObserver: IntersectionObserver | undefined;\n    private _setCurrentTimer: number | undefined;\n    private _current: WeakHTMLElement | undefined;\n    private _prevCurrent: WeakHTMLElement | undefined;\n    private _visible: Record<string, Types.Visibility> = {};\n    private _fullyVisible: string | undefined;\n    private _win: Types.GetWindow;\n    private _onDispose: (mover: Mover) => void;\n    private _allElements: WeakMap<HTMLElement, Mover> | undefined;\n    private _updateQueue: MoverUpdateQueueItem[] | undefined;\n    private _updateTimer: number | undefined;\n\n    visibilityTolerance: number;\n    dummyManager: MoverDummyManager | undefined;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: HTMLElement,\n        onDispose: (mover: Mover) => void,\n        props: Types.MoverProps,\n        sys: Types.SysProps | undefined\n    ) {\n        super(tabster, element, props);\n\n        this._win = tabster.getWindow;\n        this.visibilityTolerance = props.visibilityTolerance ?? 0.8;\n\n        if (this._props.trackState || this._props.visibilityAware) {\n            this._intersectionObserver = new IntersectionObserver(\n                this._onIntersection,\n                { threshold: [0, 0.25, 0.5, 0.75, 1] }\n            );\n            this._observeState();\n        }\n\n        this._onDispose = onDispose;\n        const getMemorized = () =>\n            props.memorizeCurrent ? this._current : undefined;\n\n        if (!tabster.controlTab) {\n            this.dummyManager = new MoverDummyManager(\n                this._element,\n                tabster,\n                getMemorized,\n                sys\n            );\n        }\n    }\n\n    dispose(): void {\n        this._onDispose(this);\n\n        if (this._intersectionObserver) {\n            this._intersectionObserver.disconnect();\n            delete this._intersectionObserver;\n        }\n\n        delete this._current;\n        delete this._fullyVisible;\n        delete this._allElements;\n        delete this._updateQueue;\n\n        if (this._unobserve) {\n            this._unobserve();\n            delete this._unobserve;\n        }\n\n        const win = this._win();\n\n        if (this._setCurrentTimer) {\n            win.clearTimeout(this._setCurrentTimer);\n            delete this._setCurrentTimer;\n        }\n\n        if (this._updateTimer) {\n            win.clearTimeout(this._updateTimer);\n            delete this._updateTimer;\n        }\n\n        this.dummyManager?.dispose();\n        delete this.dummyManager;\n    }\n\n    setCurrent(element: HTMLElement | undefined): void {\n        if (element) {\n            this._current = new WeakHTMLElement(this._win, element);\n        } else {\n            this._current = undefined;\n        }\n\n        if (\n            (this._props.trackState || this._props.visibilityAware) &&\n            !this._setCurrentTimer\n        ) {\n            this._setCurrentTimer = this._win().setTimeout(() => {\n                delete this._setCurrentTimer;\n\n                const changed: (WeakHTMLElement | undefined)[] = [];\n\n                if (this._current !== this._prevCurrent) {\n                    changed.push(this._current);\n                    changed.push(this._prevCurrent);\n                    this._prevCurrent = this._current;\n                }\n\n                for (const weak of changed) {\n                    const el = weak?.get();\n\n                    if (el && this._allElements?.get(el) === this) {\n                        const props = this._props;\n\n                        if (\n                            el &&\n                            (props.visibilityAware !== undefined ||\n                                props.trackState)\n                        ) {\n                            const state = this.getState(el);\n\n                            if (state) {\n                                el.dispatchEvent(new MoverStateEvent(state));\n                            }\n                        }\n                    }\n                }\n            });\n        }\n    }\n\n    getCurrent(): HTMLElement | null {\n        return this._current?.get() || null;\n    }\n\n    findNextTabbable(\n        currentElement?: HTMLElement,\n        referenceElement?: HTMLElement,\n        isBackward?: boolean,\n        ignoreAccessibility?: boolean\n    ): Types.NextTabbable | null {\n        const container = this.getElement();\n        const currentIsDummy =\n            container && getDummyInputContainer(currentElement) === container;\n\n        if (!container) {\n            return null;\n        }\n\n        let next: HTMLElement | null | undefined = null;\n        let outOfDOMOrder = false;\n        let uncontrolled: HTMLElement | null | undefined;\n\n        if (\n            this._props.tabbable ||\n            currentIsDummy ||\n            (currentElement && !dom.nodeContains(container, currentElement))\n        ) {\n            const findProps: Types.FindNextProps = {\n                currentElement,\n                referenceElement,\n                container,\n                ignoreAccessibility,\n                useActiveModalizer: true,\n            };\n\n            const findPropsOut: Types.FindFocusableOutputProps = {};\n\n            next = this._tabster.focusable[\n                isBackward ? \"findPrev\" : \"findNext\"\n            ](findProps, findPropsOut);\n\n            outOfDOMOrder = !!findPropsOut.outOfDOMOrder;\n            uncontrolled = findPropsOut.uncontrolled;\n        }\n\n        return {\n            element: next,\n            uncontrolled,\n            outOfDOMOrder,\n        };\n    }\n\n    acceptElement(\n        element: HTMLElement,\n        state: Types.FocusableAcceptElementState\n    ): number | undefined {\n        if (!FocusedElementState.isTabbing) {\n            return state.currentCtx?.excludedFromMover\n                ? NodeFilter.FILTER_REJECT\n                : undefined;\n        }\n\n        const {\n            memorizeCurrent,\n            visibilityAware,\n            hasDefault = true,\n        } = this._props;\n        const moverElement = this.getElement();\n\n        if (\n            moverElement &&\n            (memorizeCurrent || visibilityAware || hasDefault) &&\n            (!dom.nodeContains(moverElement, state.from) ||\n                getDummyInputContainer(state.from) === moverElement)\n        ) {\n            let found: HTMLElement | undefined | null;\n\n            if (memorizeCurrent) {\n                const current = this._current?.get();\n\n                if (current && state.acceptCondition(current)) {\n                    found = current;\n                }\n            }\n\n            if (!found && hasDefault) {\n                found = this._tabster.focusable.findDefault({\n                    container: moverElement,\n                    useActiveModalizer: true,\n                });\n            }\n\n            if (!found && visibilityAware) {\n                found = this._tabster.focusable.findElement({\n                    container: moverElement,\n                    useActiveModalizer: true,\n                    isBackward: state.isBackward,\n                    acceptCondition: (el) => {\n                        const id = getElementUId(this._win, el);\n                        const visibility = this._visible[id];\n\n                        return (\n                            moverElement !== el &&\n                            !!this._allElements?.get(el) &&\n                            state.acceptCondition(el) &&\n                            (visibility === Visibilities.Visible ||\n                                (visibility === Visibilities.PartiallyVisible &&\n                                    (visibilityAware ===\n                                        Visibilities.PartiallyVisible ||\n                                        !this._fullyVisible)))\n                        );\n                    },\n                });\n            }\n\n            if (found) {\n                state.found = true;\n                state.foundElement = found;\n                state.rejectElementsFrom = moverElement;\n                state.skippedFocusable = true;\n                return NodeFilter.FILTER_ACCEPT;\n            }\n        }\n\n        return undefined;\n    }\n\n    private _onIntersection = (entries: IntersectionObserverEntry[]): void => {\n        for (const entry of entries) {\n            const el = entry.target as HTMLElement;\n            const id = getElementUId(this._win, el);\n\n            let newVisibility: Types.Visibility;\n            let fullyVisible = this._fullyVisible;\n\n            if (entry.intersectionRatio >= 0.25) {\n                newVisibility =\n                    entry.intersectionRatio >= 0.75\n                        ? Visibilities.Visible\n                        : Visibilities.PartiallyVisible;\n\n                if (newVisibility === Visibilities.Visible) {\n                    fullyVisible = id;\n                }\n            } else {\n                newVisibility = Visibilities.Invisible;\n            }\n\n            if (this._visible[id] !== newVisibility) {\n                if (newVisibility === undefined) {\n                    delete this._visible[id];\n\n                    if (fullyVisible === id) {\n                        delete this._fullyVisible;\n                    }\n                } else {\n                    this._visible[id] = newVisibility;\n                    this._fullyVisible = fullyVisible;\n                }\n\n                const state = this.getState(el);\n\n                if (state) {\n                    el.dispatchEvent(new MoverStateEvent(state));\n                }\n            }\n        }\n    };\n\n    private _observeState(): void {\n        const element = this.getElement();\n\n        if (\n            this._unobserve ||\n            !element ||\n            typeof MutationObserver === \"undefined\"\n        ) {\n            return;\n        }\n\n        const win = this._win();\n        const allElements = (this._allElements = new WeakMap());\n        const tabsterFocusable = this._tabster.focusable;\n        let updateQueue: MoverUpdateQueueItem[] = (this._updateQueue = []);\n\n        const observer = dom.createMutationObserver(\n            (mutations: MutationRecord[]) => {\n                for (const mutation of mutations) {\n                    const target = mutation.target;\n                    const removed = mutation.removedNodes;\n                    const added = mutation.addedNodes;\n\n                    if (mutation.type === \"attributes\") {\n                        if (mutation.attributeName === \"tabindex\") {\n                            updateQueue.push({\n                                element: target as HTMLElement,\n                                type: _moverUpdateAttr,\n                            });\n                        }\n                    } else {\n                        for (let i = 0; i < removed.length; i++) {\n                            updateQueue.push({\n                                element: removed[\n                                    i\n                                ] as HTMLElement as HTMLElement,\n                                type: _moverUpdateRemove,\n                            });\n                        }\n\n                        for (let i = 0; i < added.length; i++) {\n                            updateQueue.push({\n                                element: added[i] as HTMLElement,\n                                type: _moverUpdateAdd,\n                            });\n                        }\n                    }\n                }\n\n                requestUpdate();\n            }\n        );\n\n        const setElement = (element: HTMLElement, remove?: boolean): void => {\n            const current = allElements.get(element);\n\n            if (current && remove) {\n                this._intersectionObserver?.unobserve(element);\n                allElements.delete(element);\n            }\n\n            if (!current && !remove) {\n                allElements.set(element, this);\n                this._intersectionObserver?.observe(element);\n            }\n        };\n\n        const updateElement = (element: HTMLElement): void => {\n            const isFocusable = tabsterFocusable.isFocusable(element);\n            const current = allElements.get(element);\n\n            if (current) {\n                if (!isFocusable) {\n                    setElement(element, true);\n                }\n            } else {\n                if (isFocusable) {\n                    setElement(element);\n                }\n            }\n        };\n\n        const addNewElements = (element: HTMLElement): void => {\n            const { mover } = getMoverGroupper(element);\n\n            if (mover && mover !== this) {\n                if (\n                    mover.getElement() === element &&\n                    tabsterFocusable.isFocusable(element)\n                ) {\n                    setElement(element);\n                } else {\n                    return;\n                }\n            }\n\n            const walker = createElementTreeWalker(\n                win.document,\n                element,\n                (node: Node): number => {\n                    const { mover, groupper } = getMoverGroupper(\n                        node as HTMLElement\n                    );\n\n                    if (mover && mover !== this) {\n                        return NodeFilter.FILTER_REJECT;\n                    }\n\n                    const groupperFirstFocusable = groupper?.getFirst(true);\n\n                    if (\n                        groupper &&\n                        groupper.getElement() !== node &&\n                        groupperFirstFocusable &&\n                        groupperFirstFocusable !== node\n                    ) {\n                        return NodeFilter.FILTER_REJECT;\n                    }\n\n                    if (tabsterFocusable.isFocusable(node as HTMLElement)) {\n                        setElement(node as HTMLElement);\n                    }\n\n                    return NodeFilter.FILTER_SKIP;\n                }\n            );\n\n            if (walker) {\n                walker.currentNode = element;\n\n                while (walker.nextNode()) {\n                    /* Iterating for the sake of calling processNode() callback. */\n                }\n            }\n        };\n\n        const removeWalk = (element: HTMLElement): void => {\n            const current = allElements.get(element);\n\n            if (current) {\n                setElement(element, true);\n            }\n\n            for (\n                let el = dom.getFirstElementChild(element);\n                el;\n                el = dom.getNextElementSibling(el)\n            ) {\n                removeWalk(el as HTMLElement);\n            }\n        };\n\n        const requestUpdate = () => {\n            if (!this._updateTimer && updateQueue.length) {\n                this._updateTimer = win.setTimeout(() => {\n                    delete this._updateTimer;\n\n                    for (const { element, type } of updateQueue) {\n                        switch (type) {\n                            case _moverUpdateAttr:\n                                updateElement(element);\n                                break;\n                            case _moverUpdateAdd:\n                                addNewElements(element);\n                                break;\n                            case _moverUpdateRemove:\n                                removeWalk(element);\n                                break;\n                        }\n                    }\n\n                    updateQueue = this._updateQueue = [];\n                }, 0);\n            }\n        };\n\n        const getMoverGroupper = (\n            element: HTMLElement\n        ): { mover?: Mover; groupper?: Types.Groupper } => {\n            const ret: {\n                mover?: Mover;\n                groupper?: Types.Groupper;\n            } = {};\n\n            for (\n                let el: HTMLElement | null = element;\n                el;\n                el = dom.getParentElement(el)\n            ) {\n                const toe = getTabsterOnElement(this._tabster, el);\n\n                if (toe) {\n                    if (toe.groupper && !ret.groupper) {\n                        ret.groupper = toe.groupper;\n                    }\n\n                    if (toe.mover) {\n                        ret.mover = toe.mover as Mover;\n                        break;\n                    }\n                }\n            }\n\n            return ret;\n        };\n\n        updateQueue.push({ element, type: _moverUpdateAdd });\n        requestUpdate();\n\n        observer.observe(element, {\n            childList: true,\n            subtree: true,\n            attributes: true,\n            attributeFilter: [\"tabindex\"],\n        });\n\n        this._unobserve = () => {\n            observer.disconnect();\n        };\n    }\n\n    getState(element: HTMLElement): Types.MoverElementState | undefined {\n        const id = getElementUId(this._win, element);\n\n        if (id in this._visible) {\n            const visibility = this._visible[id] || Visibilities.Invisible;\n            const isCurrent = this._current\n                ? this._current.get() === element\n                : undefined;\n\n            return {\n                isCurrent,\n                visibility,\n            };\n        }\n\n        return undefined;\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction validateMoverProps(props: Types.MoverProps): void {\n    // TODO: Implement validation.\n}\n\n/**\n * Calculates distance between two rectangles.\n *\n * @param ax1 first rectangle left\n * @param ay1 first rectangle top\n * @param ax2 first rectangle right\n * @param ay2 first rectangle bottom\n * @param bx1 second rectangle left\n * @param by1 second rectangle top\n * @param bx2 second rectangle right\n * @param by2 second rectangle bottom\n * @returns number, shortest distance between the rectangles.\n */\nfunction getDistance(\n    ax1: number,\n    ay1: number,\n    ax2: number,\n    ay2: number,\n    bx1: number,\n    by1: number,\n    bx2: number,\n    by2: number\n): number {\n    const xDistance = ax2 < bx1 ? bx1 - ax2 : bx2 < ax1 ? ax1 - bx2 : 0;\n    const yDistance = ay2 < by1 ? by1 - ay2 : by2 < ay1 ? ay1 - by2 : 0;\n\n    return xDistance === 0\n        ? yDistance\n        : yDistance === 0\n          ? xDistance\n          : Math.sqrt(xDistance * xDistance + yDistance * yDistance);\n}\n\nexport class MoverAPI implements Types.MoverAPI {\n    private _tabster: Types.TabsterCore;\n    private _win: Types.GetWindow;\n    private _movers: Record<string, Mover>;\n    private _ignoredInputTimer: number | undefined;\n    private _ignoredInputResolve: ((value: boolean) => void) | undefined;\n\n    constructor(tabster: Types.TabsterCore, getWindow: Types.GetWindow) {\n        this._tabster = tabster;\n        this._win = getWindow;\n        this._movers = {};\n\n        tabster.queueInit(this._init);\n    }\n\n    private _init = (): void => {\n        const win = this._win();\n\n        win.addEventListener(\"keydown\", this._onKeyDown, true);\n        win.addEventListener(MoverMoveFocusEventName, this._onMoveFocus);\n        win.addEventListener(\n            MoverMemorizedElementEventName,\n            this._onMemorizedElement\n        );\n\n        this._tabster.focusedElement.subscribe(this._onFocus);\n    };\n\n    dispose(): void {\n        const win = this._win();\n\n        this._tabster.focusedElement.unsubscribe(this._onFocus);\n\n        this._ignoredInputResolve?.(false);\n\n        if (this._ignoredInputTimer) {\n            win.clearTimeout(this._ignoredInputTimer);\n            delete this._ignoredInputTimer;\n        }\n\n        win.removeEventListener(\"keydown\", this._onKeyDown, true);\n        win.removeEventListener(MoverMoveFocusEventName, this._onMoveFocus);\n        win.removeEventListener(\n            MoverMemorizedElementEventName,\n            this._onMemorizedElement\n        );\n\n        Object.keys(this._movers).forEach((moverId) => {\n            if (this._movers[moverId]) {\n                this._movers[moverId].dispose();\n                delete this._movers[moverId];\n            }\n        });\n    }\n\n    createMover(\n        element: HTMLElement,\n        props: Types.MoverProps,\n        sys: Types.SysProps | undefined\n    ): Types.Mover {\n        if (__DEV__) {\n            validateMoverProps(props);\n        }\n\n        const newMover = new Mover(\n            this._tabster,\n            element,\n            this._onMoverDispose,\n            props,\n            sys\n        );\n        this._movers[newMover.id] = newMover;\n        return newMover;\n    }\n\n    private _onMoverDispose = (mover: Mover) => {\n        delete this._movers[mover.id];\n    };\n\n    private _onFocus = (element: HTMLElement | undefined): void => {\n        // When something in the app gets focused, we are making sure that\n        // the relevant context Mover is aware of it.\n        // Looking for the relevant context Mover from the currently\n        // focused element parent, not from the element itself, because the\n        // Mover element itself cannot be its own current (but might be\n        // current for its parent Mover).\n        let currentFocusableElement = element;\n        let deepestFocusableElement = element;\n\n        for (\n            let el: HTMLElement | null | undefined =\n                dom.getParentElement(element);\n            el;\n            el = dom.getParentElement(el)\n        ) {\n            // We go through all Movers up from the focused element and\n            // set their current element to the deepest focusable of that\n            // Mover.\n            const mover = getTabsterOnElement(this._tabster, el)?.mover;\n\n            if (mover) {\n                mover.setCurrent(deepestFocusableElement);\n                currentFocusableElement = undefined;\n            }\n\n            if (\n                !currentFocusableElement &&\n                this._tabster.focusable.isFocusable(el)\n            ) {\n                currentFocusableElement = deepestFocusableElement = el;\n            }\n        }\n    };\n\n    moveFocus(\n        fromElement: HTMLElement,\n        key: Types.MoverKey\n    ): HTMLElement | null {\n        return this._moveFocus(fromElement, key);\n    }\n\n    private _moveFocus(\n        fromElement: HTMLElement,\n        key: Types.MoverKey,\n        relatedEvent?: KeyboardEvent\n    ): HTMLElement | null {\n        const tabster = this._tabster;\n        const ctx = RootAPI.getTabsterContext(tabster, fromElement, {\n            checkRtl: true,\n        });\n\n        if (\n            !ctx ||\n            !ctx.mover ||\n            ctx.excludedFromMover ||\n            (relatedEvent && ctx.ignoreKeydown(relatedEvent))\n        ) {\n            return null;\n        }\n\n        const mover = ctx.mover;\n        const container = mover.getElement();\n\n        if (ctx.groupperBeforeMover) {\n            const groupper = ctx.groupper;\n\n            if (groupper && !groupper.isActive(true)) {\n                // For the cases when we have Mover/Active Groupper/Inactive Groupper, we need to check\n                // the grouppers between the current element and the current mover.\n                for (\n                    let el: HTMLElement | null | undefined =\n                        dom.getParentElement(groupper.getElement());\n                    el && el !== container;\n                    el = dom.getParentElement(el)\n                ) {\n                    if (\n                        getTabsterOnElement(tabster, el)?.groupper?.isActive(\n                            true\n                        )\n                    ) {\n                        return null;\n                    }\n                }\n            } else {\n                return null;\n            }\n        }\n\n        if (!container) {\n            return null;\n        }\n\n        const focusable = tabster.focusable;\n        const moverProps = mover.getProps();\n        const direction = moverProps.direction || MoverDirections.Both;\n        const isBoth = direction === MoverDirections.Both;\n        const isVertical = isBoth || direction === MoverDirections.Vertical;\n        const isHorizontal = isBoth || direction === MoverDirections.Horizontal;\n        const isGridLinear = direction === MoverDirections.GridLinear;\n        const isGrid = isGridLinear || direction === MoverDirections.Grid;\n        const isCyclic = moverProps.cyclic;\n\n        let next: HTMLElement | null | undefined;\n        let scrollIntoViewArg: boolean | undefined;\n\n        let focusedElementRect: DOMRect;\n        let focusedElementX1 = 0;\n        let focusedElementX2 = 0;\n\n        if (isGrid) {\n            focusedElementRect = fromElement.getBoundingClientRect();\n            focusedElementX1 = Math.ceil(focusedElementRect.left);\n            focusedElementX2 = Math.floor(focusedElementRect.right);\n        }\n\n        if (ctx.rtl) {\n            if (key === MoverKeys.ArrowRight) {\n                key = MoverKeys.ArrowLeft;\n            } else if (key === MoverKeys.ArrowLeft) {\n                key = MoverKeys.ArrowRight;\n            }\n        }\n\n        if (\n            (key === MoverKeys.ArrowDown && isVertical) ||\n            (key === MoverKeys.ArrowRight && (isHorizontal || isGrid))\n        ) {\n            next = focusable.findNext({\n                currentElement: fromElement,\n                container,\n                useActiveModalizer: true,\n            });\n\n            if (next && isGrid) {\n                const nextElementX1 = Math.ceil(\n                    next.getBoundingClientRect().left\n                );\n\n                if (!isGridLinear && focusedElementX2 > nextElementX1) {\n                    next = undefined;\n                }\n            } else if (!next && isCyclic) {\n                next = focusable.findFirst({\n                    container,\n                    useActiveModalizer: true,\n                });\n            }\n        } else if (\n            (key === MoverKeys.ArrowUp && isVertical) ||\n            (key === MoverKeys.ArrowLeft && (isHorizontal || isGrid))\n        ) {\n            next = focusable.findPrev({\n                currentElement: fromElement,\n                container,\n                useActiveModalizer: true,\n            });\n\n            if (next && isGrid) {\n                const nextElementX2 = Math.floor(\n                    next.getBoundingClientRect().right\n                );\n\n                if (!isGridLinear && nextElementX2 > focusedElementX1) {\n                    next = undefined;\n                }\n            } else if (!next && isCyclic) {\n                next = focusable.findLast({\n                    container,\n                    useActiveModalizer: true,\n                });\n            }\n        } else if (key === MoverKeys.Home) {\n            if (isGrid) {\n                focusable.findElement({\n                    container,\n                    currentElement: fromElement,\n                    useActiveModalizer: true,\n                    isBackward: true,\n                    acceptCondition: (el) => {\n                        if (!focusable.isFocusable(el)) {\n                            return false;\n                        }\n\n                        const nextElementX1 = Math.ceil(\n                            el.getBoundingClientRect().left ?? 0\n                        );\n\n                        if (\n                            el !== fromElement &&\n                            focusedElementX1 <= nextElementX1\n                        ) {\n                            return true;\n                        }\n\n                        next = el;\n                        return false;\n                    },\n                });\n            } else {\n                next = focusable.findFirst({\n                    container,\n                    useActiveModalizer: true,\n                });\n            }\n        } else if (key === MoverKeys.End) {\n            if (isGrid) {\n                focusable.findElement({\n                    container,\n                    currentElement: fromElement,\n                    useActiveModalizer: true,\n                    acceptCondition: (el) => {\n                        if (!focusable.isFocusable(el)) {\n                            return false;\n                        }\n\n                        const nextElementX1 = Math.ceil(\n                            el.getBoundingClientRect().left ?? 0\n                        );\n\n                        if (\n                            el !== fromElement &&\n                            focusedElementX1 >= nextElementX1\n                        ) {\n                            return true;\n                        }\n\n                        next = el;\n                        return false;\n                    },\n                });\n            } else {\n                next = focusable.findLast({\n                    container,\n                    useActiveModalizer: true,\n                });\n            }\n        } else if (key === MoverKeys.PageUp) {\n            focusable.findElement({\n                currentElement: fromElement,\n                container,\n                useActiveModalizer: true,\n                isBackward: true,\n                acceptCondition: (el) => {\n                    if (!focusable.isFocusable(el)) {\n                        return false;\n                    }\n\n                    if (\n                        isElementVerticallyVisibleInContainer(\n                            this._win,\n                            el,\n                            mover.visibilityTolerance\n                        )\n                    ) {\n                        next = el;\n                        return false;\n                    }\n\n                    return true;\n                },\n            });\n\n            // will be on the first column move forward and preserve previous column\n            if (isGrid && next) {\n                const firstColumnX1 = Math.ceil(\n                    next.getBoundingClientRect().left\n                );\n                focusable.findElement({\n                    currentElement: next,\n                    container,\n                    useActiveModalizer: true,\n                    acceptCondition: (el) => {\n                        if (!focusable.isFocusable(el)) {\n                            return false;\n                        }\n\n                        const nextElementX1 = Math.ceil(\n                            el.getBoundingClientRect().left\n                        );\n                        if (\n                            focusedElementX1 < nextElementX1 ||\n                            firstColumnX1 >= nextElementX1\n                        ) {\n                            return true;\n                        }\n                        next = el;\n                        return false;\n                    },\n                });\n            }\n\n            scrollIntoViewArg = false;\n        } else if (key === MoverKeys.PageDown) {\n            focusable.findElement({\n                currentElement: fromElement,\n                container,\n                useActiveModalizer: true,\n                acceptCondition: (el) => {\n                    if (!focusable.isFocusable(el)) {\n                        return false;\n                    }\n\n                    if (\n                        isElementVerticallyVisibleInContainer(\n                            this._win,\n                            el,\n                            mover.visibilityTolerance\n                        )\n                    ) {\n                        next = el;\n                        return false;\n                    }\n\n                    return true;\n                },\n            });\n\n            // will be on the last column move backwards and preserve previous column\n            if (isGrid && next) {\n                const lastColumnX1 = Math.ceil(\n                    next.getBoundingClientRect().left\n                );\n                focusable.findElement({\n                    currentElement: next,\n                    container,\n                    useActiveModalizer: true,\n                    isBackward: true,\n                    acceptCondition: (el) => {\n                        if (!focusable.isFocusable(el)) {\n                            return false;\n                        }\n\n                        const nextElementX1 = Math.ceil(\n                            el.getBoundingClientRect().left\n                        );\n                        if (\n                            focusedElementX1 > nextElementX1 ||\n                            lastColumnX1 <= nextElementX1\n                        ) {\n                            return true;\n                        }\n                        next = el;\n                        return false;\n                    },\n                });\n            }\n\n            scrollIntoViewArg = true;\n        } else if (isGrid) {\n            const isBackward = key === MoverKeys.ArrowUp;\n            const ax1 = focusedElementX1;\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const ay1 = Math.ceil(focusedElementRect!.top);\n            const ax2 = focusedElementX2;\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const ay2 = Math.floor(focusedElementRect!.bottom);\n            let targetElement: HTMLElement | undefined;\n            let lastDistance: number | undefined;\n            let lastIntersection = 0;\n\n            focusable.findAll({\n                container,\n                currentElement: fromElement,\n                isBackward,\n                onElement: (el) => {\n                    // Find element which has maximal intersection with the focused element horizontally,\n                    // or the closest one.\n                    const rect = el.getBoundingClientRect();\n\n                    const bx1 = Math.ceil(rect.left);\n                    const by1 = Math.ceil(rect.top);\n                    const bx2 = Math.floor(rect.right);\n                    const by2 = Math.floor(rect.bottom);\n\n                    if (\n                        (isBackward && ay1 < by2) ||\n                        (!isBackward && ay2 > by1)\n                    ) {\n                        // Only consider elements which are below/above curretly focused.\n                        return true;\n                    }\n\n                    const xIntersectionWidth =\n                        Math.ceil(Math.min(ax2, bx2)) -\n                        Math.floor(Math.max(ax1, bx1));\n                    const minWidth = Math.ceil(Math.min(ax2 - ax1, bx2 - bx1));\n\n                    if (\n                        xIntersectionWidth > 0 &&\n                        minWidth >= xIntersectionWidth\n                    ) {\n                        // Element intersects with the focused element on X axis.\n                        const intersection = xIntersectionWidth / minWidth;\n\n                        if (intersection > lastIntersection) {\n                            targetElement = el;\n                            lastIntersection = intersection;\n                        }\n                    } else if (lastIntersection === 0) {\n                        // If we didn't have intersection, try just the closest one.\n                        const distance = getDistance(\n                            ax1,\n                            ay1,\n                            ax2,\n                            ay2,\n                            bx1,\n                            by1,\n                            bx2,\n                            by2\n                        );\n\n                        if (\n                            lastDistance === undefined ||\n                            distance < lastDistance\n                        ) {\n                            lastDistance = distance;\n                            targetElement = el;\n                        }\n                    } else if (lastIntersection > 0) {\n                        // Element doesn't intersect, but we had intersection already, stop search.\n                        return false;\n                    }\n\n                    return true;\n                },\n            });\n\n            next = targetElement;\n        }\n\n        if (\n            next &&\n            (!relatedEvent ||\n                (relatedEvent &&\n                    container.dispatchEvent(\n                        new TabsterMoveFocusEvent({\n                            by: \"mover\",\n                            owner: container,\n                            next,\n                            relatedEvent,\n                        })\n                    )))\n        ) {\n            if (scrollIntoViewArg !== undefined) {\n                scrollIntoView(this._win, next, scrollIntoViewArg);\n            }\n\n            if (relatedEvent) {\n                relatedEvent.preventDefault();\n                relatedEvent.stopImmediatePropagation();\n            }\n\n            nativeFocus(next);\n\n            return next;\n        }\n\n        return null;\n    }\n\n    private _onKeyDown = async (event: KeyboardEvent): Promise<void> => {\n        if (this._ignoredInputTimer) {\n            this._win().clearTimeout(this._ignoredInputTimer);\n            delete this._ignoredInputTimer;\n        }\n\n        this._ignoredInputResolve?.(false);\n\n        // Give a chance to other listeners to handle the event (for example,\n        // to scroll instead of moving focus).\n        if (event.ctrlKey || event.altKey || event.shiftKey || event.metaKey) {\n            return;\n        }\n\n        const key = event.key;\n        let moverKey: Types.MoverKey | undefined;\n\n        if (key === Keys.ArrowDown) {\n            moverKey = MoverKeys.ArrowDown;\n        } else if (key === Keys.ArrowRight) {\n            moverKey = MoverKeys.ArrowRight;\n        } else if (key === Keys.ArrowUp) {\n            moverKey = MoverKeys.ArrowUp;\n        } else if (key === Keys.ArrowLeft) {\n            moverKey = MoverKeys.ArrowLeft;\n        } else if (key === Keys.PageDown) {\n            moverKey = MoverKeys.PageDown;\n        } else if (key === Keys.PageUp) {\n            moverKey = MoverKeys.PageUp;\n        } else if (key === Keys.Home) {\n            moverKey = MoverKeys.Home;\n        } else if (key === Keys.End) {\n            moverKey = MoverKeys.End;\n        }\n\n        if (!moverKey) {\n            return;\n        }\n\n        const focused = this._tabster.focusedElement.getFocusedElement();\n\n        if (!focused || (await this._isIgnoredInput(focused, key))) {\n            return;\n        }\n\n        this._moveFocus(focused, moverKey, event);\n    };\n\n    private _onMoveFocus = (e: MoverMoveFocusEvent): void => {\n        const element = e.composedPath()[0] as HTMLElement | null | undefined;\n        const key = e.detail?.key;\n\n        if (element && key !== undefined && !e.defaultPrevented) {\n            this._moveFocus(element, key);\n            e.stopImmediatePropagation();\n        }\n    };\n\n    private _onMemorizedElement = (e: MoverMemorizedElementEvent): void => {\n        const target = e.composedPath()[0] as HTMLElement | null | undefined;\n        let memorizedElement = e.detail?.memorizedElement;\n\n        if (target) {\n            const ctx = RootAPI.getTabsterContext(this._tabster, target);\n            const mover = ctx?.mover;\n\n            if (mover) {\n                if (\n                    memorizedElement &&\n                    !dom.nodeContains(mover.getElement(), memorizedElement)\n                ) {\n                    memorizedElement = undefined;\n                }\n\n                mover.setCurrent(memorizedElement);\n\n                e.stopImmediatePropagation();\n            }\n        }\n    };\n\n    private async _isIgnoredInput(\n        element: HTMLElement,\n        key: string\n    ): Promise<boolean> {\n        if (\n            element.getAttribute(\"aria-expanded\") === \"true\" &&\n            element.hasAttribute(\"aria-activedescendant\")\n        ) {\n            // It is likely a combobox with expanded options and arrow keys are\n            // controlled by it.\n            return true;\n        }\n\n        if (matchesSelector(element, _inputSelector)) {\n            let selectionStart = 0;\n            let selectionEnd = 0;\n            let textLength = 0;\n            let asyncRet: Promise<boolean> | undefined;\n\n            if (element.tagName === \"INPUT\" || element.tagName === \"TEXTAREA\") {\n                const type = (element as HTMLInputElement).type;\n                const value = (element as HTMLInputElement).value;\n\n                textLength = (value || \"\").length;\n\n                if (type === \"email\" || type === \"number\") {\n                    // For these types Chromium doesn't provide selectionStart and selectionEnd.\n                    // Hence the ugly workaround to find if the caret position is changed with\n                    // the keypress.\n                    // TODO: Have a look at range, week, time, time, date, datetime-local.\n                    if (textLength) {\n                        const selection = dom.getSelection(element);\n\n                        if (selection) {\n                            const initialLength = selection.toString().length;\n                            const isBackward =\n                                key === Keys.ArrowLeft || key === Keys.ArrowUp;\n\n                            selection.modify(\n                                \"extend\",\n                                isBackward ? \"backward\" : \"forward\",\n                                \"character\"\n                            );\n\n                            if (initialLength !== selection.toString().length) {\n                                // The caret is moved, so, we're not on the edge of the value.\n                                // Restore original selection.\n                                selection.modify(\n                                    \"extend\",\n                                    isBackward ? \"forward\" : \"backward\",\n                                    \"character\"\n                                );\n\n                                return true;\n                            } else {\n                                textLength = 0;\n                            }\n                        }\n                    }\n                } else {\n                    const selStart = (element as HTMLInputElement)\n                        .selectionStart;\n\n                    if (selStart === null) {\n                        // Do not ignore not text editable inputs like checkboxes and radios (but ignore hidden).\n                        return type === \"hidden\";\n                    }\n\n                    selectionStart = selStart || 0;\n                    selectionEnd =\n                        (element as HTMLInputElement).selectionEnd || 0;\n                }\n            } else if (element.contentEditable === \"true\") {\n                asyncRet = new (getPromise(this._win))((resolve) => {\n                    this._ignoredInputResolve = (value: boolean) => {\n                        delete this._ignoredInputResolve;\n                        resolve(value);\n                    };\n\n                    const win = this._win();\n\n                    if (this._ignoredInputTimer) {\n                        win.clearTimeout(this._ignoredInputTimer);\n                    }\n\n                    const {\n                        anchorNode: prevAnchorNode,\n                        focusNode: prevFocusNode,\n                        anchorOffset: prevAnchorOffset,\n                        focusOffset: prevFocusOffset,\n                    } = dom.getSelection(element) || {};\n\n                    // Get selection gives incorrect value if we call it syncronously onKeyDown.\n                    this._ignoredInputTimer = win.setTimeout(() => {\n                        delete this._ignoredInputTimer;\n\n                        const {\n                            anchorNode,\n                            focusNode,\n                            anchorOffset,\n                            focusOffset,\n                        } = dom.getSelection(element) || {};\n\n                        if (\n                            anchorNode !== prevAnchorNode ||\n                            focusNode !== prevFocusNode ||\n                            anchorOffset !== prevAnchorOffset ||\n                            focusOffset !== prevFocusOffset\n                        ) {\n                            this._ignoredInputResolve?.(false);\n                            return;\n                        }\n\n                        selectionStart = anchorOffset || 0;\n                        selectionEnd = focusOffset || 0;\n                        textLength = element.textContent?.length || 0;\n\n                        if (anchorNode && focusNode) {\n                            if (\n                                dom.nodeContains(element, anchorNode) &&\n                                dom.nodeContains(element, focusNode)\n                            ) {\n                                if (anchorNode !== element) {\n                                    let anchorFound = false;\n\n                                    const addOffsets = (\n                                        node: ChildNode\n                                    ): boolean => {\n                                        if (node === anchorNode) {\n                                            anchorFound = true;\n                                        } else if (node === focusNode) {\n                                            return true;\n                                        }\n\n                                        const nodeText = node.textContent;\n\n                                        if (\n                                            nodeText &&\n                                            !dom.getFirstChild(node)\n                                        ) {\n                                            const len = nodeText.length;\n\n                                            if (anchorFound) {\n                                                if (focusNode !== anchorNode) {\n                                                    selectionEnd += len;\n                                                }\n                                            } else {\n                                                selectionStart += len;\n                                                selectionEnd += len;\n                                            }\n                                        }\n\n                                        let stop = false;\n\n                                        for (\n                                            let e = dom.getFirstChild(node);\n                                            e && !stop;\n                                            e = e.nextSibling\n                                        ) {\n                                            stop = addOffsets(e);\n                                        }\n\n                                        return stop;\n                                    };\n\n                                    addOffsets(element);\n                                }\n                            }\n                        }\n\n                        this._ignoredInputResolve?.(true);\n                    }, 0);\n                });\n            }\n\n            if (asyncRet && !(await asyncRet)) {\n                return true;\n            }\n\n            if (selectionStart !== selectionEnd) {\n                return true;\n            }\n\n            if (\n                selectionStart > 0 &&\n                (key === Keys.ArrowLeft ||\n                    key === Keys.ArrowUp ||\n                    key === Keys.Home)\n            ) {\n                return true;\n            }\n\n            if (\n                selectionStart < textLength &&\n                (key === Keys.ArrowRight ||\n                    key === Keys.ArrowDown ||\n                    key === Keys.End)\n            ) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { getTabsterOnElement } from \"./Instance\";\nimport * as Types from \"./Types\";\nimport { TABSTER_ATTRIBUTE_NAME } from \"./Consts\";\nimport {\n    createElementTreeWalker,\n    getInstanceContext,\n    HTMLElementWithUID,\n    InstanceContext,\n    WeakHTMLElement,\n} from \"./Utils\";\nimport { dom } from \"./DOMAPI\";\n\nexport function observeMutations(\n    doc: Document,\n    tabster: Types.TabsterCore,\n    updateTabsterByAttribute: (\n        tabster: Types.TabsterCore,\n        element: HTMLElementWithUID,\n        dispose?: boolean\n    ) => void,\n    syncState: boolean\n): () => void {\n    if (typeof MutationObserver === \"undefined\") {\n        return () => {\n            /* Noop */\n        };\n    }\n\n    const getWindow = tabster.getWindow;\n\n    let elementByUId: InstanceContext[\"elementByUId\"] | undefined;\n\n    const onMutation = (mutations: MutationRecord[]) => {\n        const removedNodes = new Set<Node>();\n\n        for (const mutation of mutations) {\n            const target = mutation.target;\n            const removed = mutation.removedNodes;\n            const added = mutation.addedNodes;\n\n            if (mutation.type === \"attributes\") {\n                if (mutation.attributeName === TABSTER_ATTRIBUTE_NAME) {\n                    // removedNodes helps to make sure we are not recreating things\n                    // for the removed elements.\n                    // For some reason, if we do removeChild() and setAttribute() on the\n                    // removed child in the same tick, both the child removal and the attribute\n                    // change will be present in the mutation records. And the attribute change\n                    // will follow the child removal.\n                    // So, we remember the removed nodes and ignore attribute changes for them.\n                    if (!removedNodes.has(target)) {\n                        updateTabsterByAttribute(\n                            tabster,\n                            target as HTMLElement\n                        );\n                    }\n                }\n            } else {\n                for (let i = 0; i < removed.length; i++) {\n                    const removedNode = removed[i];\n                    removedNodes.add(removedNode);\n                    updateTabsterElements(removedNode, true);\n                    tabster._dummyObserver.domChanged?.(target as HTMLElement);\n                }\n\n                for (let i = 0; i < added.length; i++) {\n                    updateTabsterElements(added[i]);\n                    tabster._dummyObserver.domChanged?.(target as HTMLElement);\n                }\n            }\n        }\n\n        removedNodes.clear();\n\n        tabster.modalizer?.hiddenUpdate();\n    };\n\n    function updateTabsterElements(node: Node, removed?: boolean): void {\n        if (!elementByUId) {\n            elementByUId = getInstanceContext(getWindow).elementByUId;\n        }\n\n        processNode(node as HTMLElement, removed);\n\n        const walker = createElementTreeWalker(\n            doc,\n            node,\n            (element: Node): number => {\n                return processNode(element as HTMLElement, removed);\n            }\n        );\n\n        if (walker) {\n            while (walker.nextNode()) {\n                /* Iterating for the sake of calling processNode() callback. */\n            }\n        }\n    }\n\n    function processNode(element: HTMLElement, removed?: boolean): number {\n        if (!element.getAttribute) {\n            // It might actually be a text node.\n            return NodeFilter.FILTER_SKIP;\n        }\n\n        const uid = (element as HTMLElementWithUID).__tabsterElementUID;\n\n        if (uid && elementByUId) {\n            if (removed) {\n                delete elementByUId[uid];\n            } else {\n                elementByUId[uid] ??= new WeakHTMLElement(getWindow, element);\n            }\n        }\n\n        if (\n            getTabsterOnElement(tabster, element) ||\n            element.hasAttribute(TABSTER_ATTRIBUTE_NAME)\n        ) {\n            updateTabsterByAttribute(tabster, element, removed);\n        }\n\n        return NodeFilter.FILTER_SKIP;\n    }\n\n    const observer = dom.createMutationObserver(onMutation);\n\n    if (syncState) {\n        updateTabsterElements(getWindow().document.body);\n    }\n\n    observer.observe(doc, {\n        childList: true,\n        subtree: true,\n        attributes: true,\n        attributeFilter: [TABSTER_ATTRIBUTE_NAME],\n    });\n\n    return () => {\n        observer.disconnect();\n    };\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { getTabsterOnElement } from \"../Instance\";\nimport * as Types from \"../Types\";\nimport {\n    ObservedElementAccessibilities,\n    ObservedElementRequestStatuses,\n} from \"../Consts\";\nimport {\n    documentContains,\n    getElementUId,\n    getPromise,\n    WeakHTMLElement,\n} from \"../Utils\";\nimport { Subscribable } from \"./Subscribable\";\n\nconst _conditionCheckTimeout = 100;\n\ninterface ObservedElementInfo {\n    element: WeakHTMLElement;\n    prevNames?: string[];\n}\n\ninterface ObservedWaiting {\n    timer?: number;\n    conditionTimer?: number;\n    request?: Types.ObservedElementAsyncRequest<HTMLElement | null>;\n    resolve?: (value: HTMLElement | null) => void;\n    reject?: () => void;\n}\n\nexport class ObservedElementAPI\n    extends Subscribable<HTMLElement, Types.ObservedElementDetails>\n    implements Types.ObservedElementAPI\n{\n    private _win: Types.GetWindow;\n    private _tabster: Types.TabsterCore;\n    private _waiting: Record<string, ObservedWaiting> = {};\n    private _lastRequestFocusId = 0;\n    private _observedById: { [uid: string]: ObservedElementInfo } = {};\n    private _observedByName: {\n        [name: string]: { [uid: string]: ObservedElementInfo };\n    } = {};\n    private _currentRequest:\n        | Types.ObservedElementAsyncRequest<HTMLElement | null>\n        | undefined;\n    private _currentRequestTimestamp = 0;\n\n    constructor(tabster: Types.TabsterCore) {\n        super();\n        this._tabster = tabster;\n        this._win = tabster.getWindow;\n\n        tabster.queueInit(() => {\n            this._tabster.focusedElement.subscribe(this._onFocus);\n        });\n    }\n\n    dispose(): void {\n        this._tabster.focusedElement.unsubscribe(this._onFocus);\n\n        for (const key of Object.keys(this._waiting)) {\n            this._rejectWaiting(key);\n        }\n\n        this._observedById = {};\n        this._observedByName = {};\n    }\n\n    private _onFocus = (e: HTMLElement | undefined): void => {\n        if (e) {\n            const current = this._currentRequest;\n\n            if (current) {\n                const delta = Date.now() - this._currentRequestTimestamp;\n                const settleTime = 300;\n\n                if (delta >= settleTime) {\n                    // Giving some time for the focus to settle before\n                    // automatically cancelling the current request on focus change.\n                    delete this._currentRequest;\n                    current.cancel();\n                }\n            }\n        }\n    };\n\n    private _rejectWaiting(key: string, shouldResolve?: boolean): void {\n        const w = this._waiting[key];\n\n        if (w) {\n            const win = this._win();\n\n            if (w.timer) {\n                win.clearTimeout(w.timer);\n            }\n\n            if (w.conditionTimer) {\n                win.clearTimeout(w.conditionTimer);\n            }\n\n            if (!shouldResolve && w.reject) {\n                w.reject();\n            } else if (shouldResolve && w.resolve) {\n                w.resolve(null);\n            }\n\n            delete this._waiting[key];\n        }\n    }\n\n    private _isObservedNamesUpdated(cur: string[], prev?: string[]) {\n        if (!prev || cur.length !== prev.length) {\n            return true;\n        }\n        for (let i = 0; i < cur.length; ++i) {\n            if (cur[i] !== prev[i]) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Returns existing element by observed name\n     *\n     * @param observedName An observed name\n     * @param accessibility Optionally, return only if the element is accessible or focusable\n     * @returns HTMLElement | null\n     */\n    getElement(\n        observedName: string,\n        accessibility?: Types.ObservedElementAccessibility\n    ): HTMLElement | null {\n        const o = this._observedByName[observedName];\n\n        if (o) {\n            for (const uid of Object.keys(o)) {\n                let el = o[uid].element.get() || null;\n                if (el) {\n                    if (\n                        (accessibility ===\n                            ObservedElementAccessibilities.Accessible &&\n                            !this._tabster.focusable.isAccessible(el)) ||\n                        (accessibility ===\n                            ObservedElementAccessibilities.Focusable &&\n                            !this._tabster.focusable.isFocusable(el, true))\n                    ) {\n                        el = null;\n                    }\n                } else {\n                    delete o[uid];\n                    delete this._observedById[uid];\n                }\n\n                return el;\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Waits for the element to appear in the DOM and returns it.\n     *\n     * @param observedName An observed name\n     * @param timeout Wait no longer than this timeout\n     * @param accessibility Optionally, wait for the element to also become accessible or focusable before returning it\n     * @returns Promise<HTMLElement | null>\n     */\n    waitElement(\n        observedName: string,\n        timeout: number,\n        accessibility?: Types.ObservedElementAccessibility\n    ): Types.ObservedElementAsyncRequest<HTMLElement | null> {\n        const el = this.getElement(observedName, accessibility);\n\n        if (el) {\n            return {\n                result: getPromise(this._win).resolve(el),\n                cancel: () => {\n                    /**/\n                },\n                status: ObservedElementRequestStatuses.Succeeded,\n            };\n        }\n\n        let prefix: string;\n\n        if (accessibility === ObservedElementAccessibilities.Accessible) {\n            prefix = \"a\";\n        } else if (accessibility === ObservedElementAccessibilities.Focusable) {\n            prefix = \"f\";\n        } else {\n            prefix = \"_\";\n        }\n\n        const key = prefix + observedName;\n        let w = this._waiting[key];\n\n        if (w && w.request) {\n            return w.request;\n        }\n\n        w = this._waiting[key] = {\n            timer: this._win().setTimeout(() => {\n                if (w.conditionTimer) {\n                    this._win().clearTimeout(w.conditionTimer);\n                }\n\n                delete this._waiting[key];\n\n                if (w.request) {\n                    w.request.status = ObservedElementRequestStatuses.TimedOut;\n                }\n\n                if (w.resolve) {\n                    w.resolve(null);\n                }\n            }, timeout),\n        };\n\n        const promise = new (getPromise(this._win))<HTMLElement | null>(\n            (resolve, reject) => {\n                w.resolve = resolve;\n                w.reject = reject;\n            }\n        ).catch(() => {\n            // Ignore the error, it is expected to be rejected when the request is canceled.\n            return null;\n        });\n\n        const request: Types.ObservedElementAsyncRequest<HTMLElement | null> = {\n            result: promise,\n            cancel: () => {\n                if (request.status === ObservedElementRequestStatuses.Waiting) {\n                    // cancel() function is callable by user, someone might call it after request is finished,\n                    // we are making sure that status of a finished request is not overriden.\n                    request.status = ObservedElementRequestStatuses.Canceled;\n                }\n                this._rejectWaiting(key, true);\n            },\n            status: ObservedElementRequestStatuses.Waiting,\n        };\n\n        w.request = request;\n\n        if (accessibility && this.getElement(observedName)) {\n            // If the observed element is alread in DOM, but not accessible yet,\n            // we need to run the wait logic.\n            this._waitConditional(observedName);\n        }\n\n        return request;\n    }\n\n    requestFocus(\n        observedName: string,\n        timeout: number,\n        options: Pick<FocusOptions, \"preventScroll\"> = {}\n    ): Types.ObservedElementAsyncRequest<boolean> {\n        const requestId = ++this._lastRequestFocusId;\n        const currentRequestFocus = this._currentRequest;\n\n        if (currentRequestFocus) {\n            currentRequestFocus.cancel();\n        }\n\n        const request = this.waitElement(\n            observedName,\n            timeout,\n            ObservedElementAccessibilities.Focusable\n        );\n\n        this._currentRequest = request;\n        this._currentRequestTimestamp = Date.now();\n\n        const ret: Types.ObservedElementAsyncRequest<boolean> = {\n            result: request.result.then((element) =>\n                this._lastRequestFocusId === requestId && element\n                    ? this._tabster.focusedElement.focus(\n                          element,\n                          true,\n                          undefined,\n                          options.preventScroll\n                      )\n                    : false\n            ),\n            cancel: () => {\n                request.cancel();\n            },\n            status: request.status,\n        };\n\n        request.result.finally(() => {\n            if (this._currentRequest === request) {\n                delete this._currentRequest;\n            }\n\n            ret.status = request.status;\n        });\n\n        return ret;\n    }\n\n    onObservedElementUpdate = (element: HTMLElement): void => {\n        const observed = getTabsterOnElement(this._tabster, element)?.observed;\n        const uid = getElementUId(this._win, element);\n        let info: ObservedElementInfo | undefined = this._observedById[uid];\n\n        if (observed && documentContains(element.ownerDocument, element)) {\n            if (!info) {\n                info = this._observedById[uid] = {\n                    element: new WeakHTMLElement(this._win, element),\n                };\n            }\n\n            observed.names.sort();\n            const observedNames = observed.names;\n            const prevNames = info.prevNames; // prevNames are already sorted\n\n            if (this._isObservedNamesUpdated(observedNames, prevNames)) {\n                if (prevNames) {\n                    prevNames.forEach((prevName) => {\n                        const obn = this._observedByName[prevName];\n\n                        if (obn && obn[uid]) {\n                            if (Object.keys(obn).length > 1) {\n                                delete obn[uid];\n                            } else {\n                                delete this._observedByName[prevName];\n                            }\n                        }\n                    });\n                }\n\n                info.prevNames = observedNames;\n            }\n\n            observedNames.forEach((observedName) => {\n                let obn = this._observedByName[observedName];\n\n                if (!obn) {\n                    obn = this._observedByName[observedName] = {};\n                }\n\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                obn[uid] = info!;\n\n                this._waitConditional(observedName);\n            });\n        } else if (info) {\n            const prevNames = info.prevNames;\n\n            if (prevNames) {\n                prevNames.forEach((prevName) => {\n                    const obn = this._observedByName[prevName];\n\n                    if (obn && obn[uid]) {\n                        if (Object.keys(obn).length > 1) {\n                            delete obn[uid];\n                        } else {\n                            delete this._observedByName[prevName];\n                        }\n                    }\n                });\n            }\n\n            delete this._observedById[uid];\n        }\n    };\n\n    private _waitConditional(observedName: string): void {\n        const waitingElementKey = \"_\" + observedName;\n        const waitingAccessibleElementKey = \"a\" + observedName;\n        const waitingFocusableElementKey = \"f\" + observedName;\n        const waitingElement = this._waiting[waitingElementKey];\n        const waitingAccessibleElement =\n            this._waiting[waitingAccessibleElementKey];\n        const waitingFocusableElement =\n            this._waiting[waitingFocusableElementKey];\n        const win = this._win();\n\n        const resolve = (\n            element: HTMLElement,\n            key: string,\n            waiting: ObservedWaiting,\n            accessibility: Types.ObservedElementAccessibility\n        ) => {\n            const observed = getTabsterOnElement(\n                this._tabster,\n                element\n            )?.observed;\n\n            if (!observed || !observed.names.includes(observedName)) {\n                return;\n            }\n\n            if (waiting.timer) {\n                win.clearTimeout(waiting.timer);\n            }\n\n            delete this._waiting[key];\n\n            if (waiting.request) {\n                waiting.request.status =\n                    ObservedElementRequestStatuses.Succeeded;\n            }\n\n            if (waiting.resolve) {\n                waiting.resolve(element);\n            }\n\n            this.trigger(element, {\n                names: [observedName],\n                details: observed.details,\n                accessibility,\n            });\n        };\n\n        if (waitingElement) {\n            const element = this.getElement(observedName);\n\n            if (element && documentContains(element.ownerDocument, element)) {\n                resolve(\n                    element,\n                    waitingElementKey,\n                    waitingElement,\n                    ObservedElementAccessibilities.Any\n                );\n            }\n        }\n\n        if (\n            waitingAccessibleElement &&\n            !waitingAccessibleElement.conditionTimer\n        ) {\n            const resolveAccessible = () => {\n                const element = this.getElement(observedName);\n\n                if (\n                    element &&\n                    documentContains(element.ownerDocument, element) &&\n                    this._tabster.focusable.isAccessible(element)\n                ) {\n                    resolve(\n                        element,\n                        waitingAccessibleElementKey,\n                        waitingAccessibleElement,\n                        ObservedElementAccessibilities.Accessible\n                    );\n                } else {\n                    waitingAccessibleElement.conditionTimer = win.setTimeout(\n                        resolveAccessible,\n                        _conditionCheckTimeout\n                    );\n                }\n            };\n\n            resolveAccessible();\n        }\n\n        if (\n            waitingFocusableElement &&\n            !waitingFocusableElement.conditionTimer\n        ) {\n            const resolveFocusable = () => {\n                const element = this.getElement(observedName);\n\n                if (\n                    element &&\n                    documentContains(element.ownerDocument, element) &&\n                    this._tabster.focusable.isFocusable(element, true)\n                ) {\n                    resolve(\n                        element,\n                        waitingFocusableElementKey,\n                        waitingFocusableElement,\n                        ObservedElementAccessibilities.Focusable\n                    );\n                } else {\n                    waitingFocusableElement.conditionTimer = win.setTimeout(\n                        resolveFocusable,\n                        _conditionCheckTimeout\n                    );\n                }\n            };\n\n            resolveFocusable();\n        }\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { getTabsterOnElement } from \"./Instance\";\nimport * as Types from \"./Types\";\nimport { getBoundingRect } from \"./Utils\";\n\ninterface WindowWithOutlineStyle extends Window {\n    __tabsterOutline?: {\n        style?: HTMLStyleElement;\n        elements?: Types.OutlineElements;\n    };\n}\n\nconst defaultProps: Types.OutlineProps = {\n    areaClass: \"tabster-focus-outline-area\",\n    outlineClass: \"tabster-focus-outline\",\n    outlineColor: \"#ff4500\",\n    outlineWidth: 2,\n    zIndex: 2147483647,\n};\n\nlet _props: Types.OutlineProps = defaultProps;\n\nclass OutlinePosition {\n    public left: number;\n    public top: number;\n    public right: number;\n    public bottom: number;\n\n    constructor(left: number, top: number, right: number, bottom: number) {\n        this.left = left;\n        this.top = top;\n        this.right = right;\n        this.bottom = bottom;\n    }\n\n    public equalsTo(other: OutlinePosition): boolean {\n        return (\n            this.left === other.left &&\n            this.top === other.top &&\n            this.right === other.right &&\n            this.bottom === other.bottom\n        );\n    }\n\n    public clone(): OutlinePosition {\n        return new OutlinePosition(\n            this.left,\n            this.top,\n            this.right,\n            this.bottom\n        );\n    }\n}\n\nexport class OutlineAPI implements Types.OutlineAPI {\n    private _tabster: Types.TabsterCore;\n    private _win: Types.GetWindow;\n    private _updateTimer: number | undefined;\n    private _outlinedElement: HTMLElement | undefined;\n    private _curPos: OutlinePosition | undefined;\n    private _isVisible = false;\n    private _curOutlineElements: Types.OutlineElements | undefined;\n    private _allOutlineElements: Types.OutlineElements[] = [];\n    private _fullScreenElement: HTMLElement | undefined;\n    private _fullScreenEventName: string | undefined;\n    private _fullScreenElementName: string | undefined;\n\n    constructor(tabster: Types.TabsterCore) {\n        this._tabster = tabster;\n        this._win = tabster.getWindow;\n\n        tabster.queueInit(this._init);\n\n        if (typeof document !== \"undefined\") {\n            if (\"onfullscreenchange\" in document) {\n                this._fullScreenEventName = \"fullscreenchange\";\n                this._fullScreenElementName = \"fullscreenElement\";\n            } else if (\"onwebkitfullscreenchange\" in document) {\n                this._fullScreenEventName = \"webkitfullscreenchange\";\n                this._fullScreenElementName = \"webkitFullscreenElement\";\n            } else if (\"onmozfullscreenchange\" in document) {\n                this._fullScreenEventName = \"mozfullscreenchange\";\n                this._fullScreenElementName = \"mozFullScreenElement\";\n            } else if (\"onmsfullscreenchange\" in document) {\n                this._fullScreenEventName = \"msfullscreenchange\";\n                this._fullScreenElementName = \"msFullscreenElement\";\n            }\n        }\n    }\n\n    private _init = (): void => {\n        this._tabster.keyboardNavigation.subscribe(\n            this._onKeyboardNavigationStateChanged\n        );\n        this._tabster.focusedElement.subscribe(this._onFocus);\n\n        const win = this._win();\n\n        win.addEventListener(\"scroll\", this._onScroll, true); // Capture!\n\n        if (this._fullScreenEventName) {\n            win.document.addEventListener(\n                this._fullScreenEventName,\n                this._onFullScreenChanged\n            );\n        }\n    };\n\n    setup(props?: Partial<Types.OutlineProps>): void {\n        _props = { ..._props, ...props };\n\n        const win = this._win() as WindowWithOutlineStyle;\n\n        if (!win.__tabsterOutline) {\n            win.__tabsterOutline = {};\n        }\n\n        if (!win.__tabsterOutline.style) {\n            win.__tabsterOutline.style = appendStyles(win.document, _props);\n        }\n\n        if (!props || !props.areaClass) {\n            win.document.body.classList.add(defaultProps.areaClass);\n        } else {\n            win.document.body.classList.remove(defaultProps.areaClass);\n        }\n    }\n\n    dispose(): void {\n        const win = this._win();\n\n        if (this._updateTimer) {\n            win.clearTimeout(this._updateTimer);\n            this._updateTimer = undefined;\n        }\n\n        this._tabster.keyboardNavigation.unsubscribe(\n            this._onKeyboardNavigationStateChanged\n        );\n        this._tabster.focusedElement.unsubscribe(this._onFocus);\n\n        win.removeEventListener(\"scroll\", this._onScroll, true);\n\n        if (this._fullScreenEventName) {\n            win.document.removeEventListener(\n                this._fullScreenEventName,\n                this._onFullScreenChanged\n            );\n        }\n\n        this._allOutlineElements.forEach((outlineElements) =>\n            this._removeDOM(outlineElements.container)\n        );\n        this._allOutlineElements = [];\n\n        delete this._outlinedElement;\n        delete this._curPos;\n        delete this._curOutlineElements;\n        delete this._fullScreenElement;\n    }\n\n    private _onFullScreenChanged = (e: Event): void => {\n        if (!this._fullScreenElementName || !e.target) {\n            return;\n        }\n\n        const target = (e.target as Document).body || (e.target as HTMLElement);\n        const outlineElements = this._getDOM(target);\n\n        if (target.ownerDocument && outlineElements) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const fsElement: HTMLElement | null = (target.ownerDocument as any)[\n                this._fullScreenElementName\n            ];\n\n            if (fsElement) {\n                fsElement.appendChild(outlineElements.container);\n                this._fullScreenElement = fsElement;\n            } else {\n                target.ownerDocument.body.appendChild(\n                    outlineElements.container\n                );\n                this._fullScreenElement = undefined;\n            }\n        }\n    };\n\n    private _onKeyboardNavigationStateChanged = (): void => {\n        this._onFocus(this._tabster.focusedElement.getFocusedElement());\n    };\n\n    private _shouldShowCustomOutline(element: HTMLElement): boolean {\n        const tabsterOnElement = getTabsterOnElement(this._tabster, element);\n\n        if (\n            tabsterOnElement &&\n            tabsterOnElement.outline &&\n            tabsterOnElement.outline.isIgnored\n        ) {\n            return false;\n        }\n\n        for (let i: HTMLElement | null = element; i; i = i.parentElement) {\n            if (i.classList && i.classList.contains(_props.areaClass)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    private _onFocus = (e: HTMLElement | undefined): void => {\n        if (!this._updateElement(e) && this._isVisible) {\n            this._setVisibility(false);\n        }\n    };\n\n    private _updateElement(e: HTMLElement | undefined): boolean {\n        this._outlinedElement = undefined;\n\n        if (this._updateTimer) {\n            this._win().clearTimeout(this._updateTimer);\n            this._updateTimer = undefined;\n        }\n\n        this._curPos = undefined;\n\n        if (!this._tabster.keyboardNavigation.isNavigatingWithKeyboard()) {\n            return false;\n        }\n\n        if (e) {\n            // TODO: It's hard (and not necessary) to come up with every possible\n            // condition when there should be no outline, it's better to add an\n            // API to customize the ignores.\n            if (e.tagName === \"INPUT\") {\n                const inputType = (e as HTMLInputElement).type;\n                const outlinedInputTypes = {\n                    button: true,\n                    checkbox: true,\n                    file: true,\n                    image: true,\n                    radio: true,\n                    range: true,\n                    reset: true,\n                    submit: true,\n                };\n\n                if (!(inputType in outlinedInputTypes)) {\n                    return false;\n                }\n            } else if (\n                e.tagName === \"TEXTAREA\" ||\n                e.contentEditable === \"true\" ||\n                e.tagName === \"IFRAME\"\n            ) {\n                return false;\n            }\n\n            if (!this._shouldShowCustomOutline(e)) {\n                return false;\n            }\n\n            if (this._tabster.keyboardNavigation.isNavigatingWithKeyboard()) {\n                this._outlinedElement = e;\n                this._updateOutline();\n            }\n\n            return true;\n        }\n\n        return false;\n    }\n\n    private _onScroll = (e: UIEvent): void => {\n        if (\n            !this._outlinedElement ||\n            !OutlineAPI._isParentChild(\n                e.target as HTMLElement,\n                this._outlinedElement\n            )\n        ) {\n            return;\n        }\n\n        this._curPos = undefined;\n\n        this._setOutlinePosition();\n    };\n\n    private _updateOutline(): void {\n        this._setOutlinePosition();\n\n        if (this._updateTimer) {\n            this._win().clearTimeout(this._updateTimer);\n            this._updateTimer = undefined;\n        }\n\n        if (!this._outlinedElement) {\n            return;\n        }\n\n        this._updateTimer = this._win().setTimeout(() => {\n            this._updateTimer = undefined;\n            this._updateOutline();\n        }, 30);\n    }\n\n    private _setVisibility(visible: boolean): void {\n        this._isVisible = visible;\n\n        if (this._curOutlineElements) {\n            if (visible) {\n                this._curOutlineElements.container.classList.add(\n                    `${_props.outlineClass}_visible`\n                );\n            } else {\n                this._curOutlineElements.container.classList.remove(\n                    `${_props.outlineClass}_visible`\n                );\n                this._curPos = undefined;\n            }\n        }\n    }\n\n    private _setOutlinePosition(): void {\n        if (!this._outlinedElement) {\n            return;\n        }\n\n        let boundingRect = getBoundingRect(this._win, this._outlinedElement);\n\n        const position = new OutlinePosition(\n            boundingRect.left,\n            boundingRect.top,\n            boundingRect.right,\n            boundingRect.bottom\n        );\n\n        if (this._curPos && position.equalsTo(this._curPos)) {\n            return;\n        }\n\n        const outlineElements = this._getDOM(this._outlinedElement);\n        const win =\n            this._outlinedElement.ownerDocument &&\n            this._outlinedElement.ownerDocument.defaultView;\n\n        if (!outlineElements || !win) {\n            return;\n        }\n\n        if (this._curOutlineElements !== outlineElements) {\n            this._setVisibility(false);\n            this._curOutlineElements = outlineElements;\n        }\n\n        this._curPos = position;\n\n        const p = position.clone();\n        let hasAbsolutePositionedParent = false;\n        let hasFixedPositionedParent = false;\n\n        const container = outlineElements.container;\n        const scrollingElement =\n            container &&\n            container.ownerDocument &&\n            (container.ownerDocument.scrollingElement as HTMLElement);\n\n        if (!scrollingElement) {\n            return;\n        }\n\n        for (\n            let parent = this._outlinedElement.parentElement;\n            parent && parent.nodeType === Node.ELEMENT_NODE;\n            parent = parent.parentElement\n        ) {\n            // The element might be partially visible within its scrollable parent,\n            // reduce the bounding rect if this is the case.\n\n            if (parent === this._fullScreenElement) {\n                break;\n            }\n\n            boundingRect = getBoundingRect(this._win, parent);\n\n            const win =\n                parent.ownerDocument && parent.ownerDocument.defaultView;\n\n            if (!win) {\n                return;\n            }\n\n            const computedStyle = win.getComputedStyle(parent);\n            const position = computedStyle.position;\n\n            if (position === \"absolute\") {\n                hasAbsolutePositionedParent = true;\n            } else if (position === \"fixed\" || position === \"sticky\") {\n                hasFixedPositionedParent = true;\n            }\n\n            if (computedStyle.overflow === \"visible\") {\n                continue;\n            }\n\n            if (\n                (!hasAbsolutePositionedParent && !hasFixedPositionedParent) ||\n                computedStyle.overflow === \"hidden\"\n            ) {\n                if (boundingRect.left > p.left) {\n                    p.left = boundingRect.left;\n                }\n                if (boundingRect.top > p.top) {\n                    p.top = boundingRect.top;\n                }\n                if (boundingRect.right < p.right) {\n                    p.right = boundingRect.right;\n                }\n                if (boundingRect.bottom < p.bottom) {\n                    p.bottom = boundingRect.bottom;\n                }\n            }\n        }\n\n        const allRect = getBoundingRect(this._win, scrollingElement);\n        const allWidth = allRect.left + allRect.right;\n        const allHeight = allRect.top + allRect.bottom;\n        const ow = _props.outlineWidth;\n\n        p.left = p.left > ow ? p.left - ow : 0;\n        p.top = p.top > ow ? p.top - ow : 0;\n        p.right = p.right < allWidth - ow ? p.right + ow : allWidth;\n        p.bottom = p.bottom < allHeight - ow ? p.bottom + ow : allHeight;\n\n        const width = p.right - p.left;\n        const height = p.bottom - p.top;\n\n        if (width > ow * 2 && height > ow * 2) {\n            const leftBorderNode = outlineElements.left;\n            const topBorderNode = outlineElements.top;\n            const rightBorderNode = outlineElements.right;\n            const bottomBorderNode = outlineElements.bottom;\n            const sx =\n                this._fullScreenElement || hasFixedPositionedParent\n                    ? 0\n                    : win.pageXOffset;\n            const sy =\n                this._fullScreenElement || hasFixedPositionedParent\n                    ? 0\n                    : win.pageYOffset;\n\n            container.style.position = hasFixedPositionedParent\n                ? \"fixed\"\n                : \"absolute\";\n\n            container.style.background = _props.outlineColor;\n\n            leftBorderNode.style.width =\n                rightBorderNode.style.width =\n                topBorderNode.style.height =\n                bottomBorderNode.style.height =\n                    _props.outlineWidth + \"px\";\n\n            leftBorderNode.style.left =\n                topBorderNode.style.left =\n                bottomBorderNode.style.left =\n                    p.left + sx + \"px\";\n            rightBorderNode.style.left = p.left + sx + width - ow + \"px\";\n\n            leftBorderNode.style.top =\n                rightBorderNode.style.top =\n                topBorderNode.style.top =\n                    p.top + sy + \"px\";\n            bottomBorderNode.style.top = p.top + sy + height - ow + \"px\";\n\n            leftBorderNode.style.height = rightBorderNode.style.height =\n                height + \"px\";\n\n            topBorderNode.style.width = bottomBorderNode.style.width =\n                width + \"px\";\n\n            this._setVisibility(true);\n        } else {\n            this._setVisibility(false);\n        }\n    }\n\n    private _getDOM(\n        contextElement: HTMLElement\n    ): Types.OutlineElements | undefined {\n        const doc = contextElement.ownerDocument;\n        const win = (doc && doc.defaultView) as WindowWithOutlineStyle;\n\n        if (!doc || !win || !win.__tabsterOutline) {\n            return undefined;\n        }\n\n        if (!win.__tabsterOutline.style) {\n            win.__tabsterOutline.style = appendStyles(doc, _props);\n        }\n\n        if (!win.__tabsterOutline.elements) {\n            const outlineElements: Types.OutlineElements = {\n                container: doc.createElement(\"div\"),\n                left: doc.createElement(\"div\"),\n                top: doc.createElement(\"div\"),\n                right: doc.createElement(\"div\"),\n                bottom: doc.createElement(\"div\"),\n            };\n\n            outlineElements.container.className = _props.outlineClass;\n            outlineElements.left.className = `${_props.outlineClass}__left`;\n            outlineElements.top.className = `${_props.outlineClass}__top`;\n            outlineElements.right.className = `${_props.outlineClass}__right`;\n            outlineElements.bottom.className = `${_props.outlineClass}__bottom`;\n\n            outlineElements.container.appendChild(outlineElements.left);\n            outlineElements.container.appendChild(outlineElements.top);\n            outlineElements.container.appendChild(outlineElements.right);\n            outlineElements.container.appendChild(outlineElements.bottom);\n\n            doc.body.appendChild(outlineElements.container);\n\n            win.__tabsterOutline.elements = outlineElements;\n\n            // TODO: Make a garbage collector to remove the references\n            // to the outlines which are nowhere in the DOM anymore.\n            this._allOutlineElements.push(outlineElements);\n        }\n\n        return win.__tabsterOutline.elements;\n    }\n\n    private _removeDOM(contextElement: HTMLElement): void {\n        const win = (contextElement.ownerDocument &&\n            contextElement.ownerDocument.defaultView) as WindowWithOutlineStyle;\n        const outline = win && win.__tabsterOutline;\n\n        if (!outline) {\n            return;\n        }\n\n        if (outline.style && outline.style.parentNode) {\n            outline.style.parentNode.removeChild(outline.style);\n\n            delete outline.style;\n        }\n\n        const outlineElements = outline && outline.elements;\n\n        if (outlineElements) {\n            if (outlineElements.container.parentNode) {\n                outlineElements.container.parentNode.removeChild(\n                    outlineElements.container\n                );\n            }\n\n            delete outline.elements;\n        }\n    }\n\n    private static _isParentChild(\n        parent: HTMLElement,\n        child: HTMLElement\n    ): boolean {\n        return (\n            child === parent ||\n            // tslint:disable-next-line:no-bitwise\n            !!(\n                parent.compareDocumentPosition(child) &\n                document.DOCUMENT_POSITION_CONTAINED_BY\n            )\n        );\n    }\n}\n\nfunction appendStyles(\n    document: HTMLDocument,\n    props: Types.OutlineProps\n): HTMLStyleElement {\n    const style = document.createElement(\"style\");\n    style.type = \"text/css\";\n    style.appendChild(document.createTextNode(getOutlineStyles(props)));\n    document.head.appendChild(style);\n    return style;\n}\n\nfunction getOutlineStyles(props: Types.OutlineProps): string {\n    return `\n.${props.areaClass} *, .${props.areaClass} *:focus {\noutline: none !important;\n}\n\n.${props.outlineClass} {\ndisplay: none;\nposition: absolute;\nwidth: 0;\nheight: 0;\nleft: 0;\ntop: 0;\nz-index: ${props.zIndex};\n}\n\n.${props.outlineClass}.${props.outlineClass}_visible {\ndisplay: block;\n}\n\n.${props.outlineClass}__left,\n.${props.outlineClass}__top,\n.${props.outlineClass}__right,\n.${props.outlineClass}__bottom {\nposition: absolute;\nbackground: inherit;\n}`;\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport * as Types from \"./Types\";\n\n/**\n * Allows default or user focus behaviour on the DOM subtree\n * i.e. Tabster will not control focus events within an uncontrolled area\n */\nexport class UncontrolledAPI implements Types.UncontrolledAPI {\n    private _isUncontrolledCompletely?: (\n        element: HTMLElement,\n        completely: boolean\n    ) => boolean | undefined;\n\n    constructor(\n        isUncontrolledCompletely?: (\n            element: HTMLElement,\n            completely: boolean\n        ) => boolean | undefined\n    ) {\n        this._isUncontrolledCompletely = isUncontrolledCompletely;\n    }\n\n    isUncontrolledCompletely(\n        element: HTMLElement,\n        completely: boolean\n    ): boolean {\n        const isUncontrolledCompletely = this._isUncontrolledCompletely?.(\n            element,\n            completely\n        );\n        // If isUncontrolledCompletely callback is not defined or returns undefined, then the default\n        // behaviour is to return the uncontrolled.completely value from the element.\n        return isUncontrolledCompletely === undefined\n            ? completely\n            : isUncontrolledCompletely;\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { getTabsterOnElement } from \"./Instance\";\nimport type {\n    FocusedElementState,\n    GetWindow,\n    KeyboardNavigationState,\n    Restorer as RestorerInterface,\n    RestorerAPI as RestorerAPIType,\n    RestorerProps,\n    TabsterCore,\n} from \"./Types\";\nimport { RestorerTypes, AsyncFocusSources } from \"./Consts\";\nimport {\n    RestorerRestoreFocusEvent,\n    RestorerRestoreFocusEventName,\n} from \"./Events\";\nimport { TabsterPart, WeakHTMLElement } from \"./Utils\";\nimport { dom } from \"./DOMAPI\";\n\nclass Restorer extends TabsterPart<RestorerProps> implements RestorerInterface {\n    private _hasFocus = false;\n\n    constructor(\n        tabster: TabsterCore,\n        element: HTMLElement,\n        props: RestorerProps\n    ) {\n        super(tabster, element, props);\n\n        if (this._props.type === RestorerTypes.Source) {\n            const element = this._element?.get();\n            element?.addEventListener(\"focusout\", this._onFocusOut);\n            element?.addEventListener(\"focusin\", this._onFocusIn);\n\n            // set hasFocus when the instance is created, in case focus has already moved within it\n            this._hasFocus = dom.nodeContains(\n                element,\n                element && dom.getActiveElement(element.ownerDocument)\n            );\n        }\n    }\n\n    dispose(): void {\n        if (this._props.type === RestorerTypes.Source) {\n            const element = this._element?.get();\n            element?.removeEventListener(\"focusout\", this._onFocusOut);\n            element?.removeEventListener(\"focusin\", this._onFocusIn);\n\n            if (this._hasFocus) {\n                const doc = this._tabster.getWindow().document;\n                doc.body.dispatchEvent(new RestorerRestoreFocusEvent());\n            }\n        }\n    }\n\n    private _onFocusOut = (e: FocusEvent) => {\n        const element = this._element?.get();\n        if (element && e.relatedTarget === null) {\n            element.dispatchEvent(new RestorerRestoreFocusEvent());\n        }\n        if (\n            element &&\n            !dom.nodeContains(element, e.relatedTarget as HTMLElement | null)\n        ) {\n            this._hasFocus = false;\n        }\n    };\n\n    private _onFocusIn = () => {\n        this._hasFocus = true;\n    };\n}\n\nclass History {\n    private static readonly DEPTH = 10;\n    private _stack: WeakHTMLElement<HTMLElement>[] = [];\n    private _getWindow: GetWindow;\n    constructor(getWindow: GetWindow) {\n        this._getWindow = getWindow;\n    }\n    /**\n     * Push a weak element to the top of the history stack.\n     * If the stack is full, the bottom weak element is removed.\n     * If the element is already at the top of the stack, it is not duplicated.\n     */\n    push(element: HTMLElement): void {\n        // Don't duplicate the top of history\n        if (this._stack[this._stack.length - 1]?.get() === element) {\n            return;\n        }\n\n        if (this._stack.length > History.DEPTH) {\n            this._stack.shift();\n        }\n        this._stack.push(\n            new WeakHTMLElement<HTMLElement>(this._getWindow, element)\n        );\n    }\n    /**\n     * Pop the first element from the history that satisfies the callback.\n     * The history is searched from the top to the bottom (from the most recent to the least recent).\n     *\n     * If a weak reference to the element is broken,\n     * or the element is no longer in the DOM,\n     * the element is removed from the top of the stack while popping.\n     *\n     * If no matching element is found, undefined is returned.\n     * If the stack is empty, undefined is returned.\n     */\n    pop(\n        filter: (element: HTMLElement) => boolean = () => true\n    ): HTMLElement | undefined {\n        const doc = this._getWindow().document;\n        for (let index = this._stack.length - 1; index >= 0; index--) {\n            const maybeElement = this._stack.pop()?.get();\n            if (\n                maybeElement &&\n                dom.nodeContains(\n                    doc.body,\n                    dom.getParentElement(maybeElement)\n                ) &&\n                filter(maybeElement)\n            ) {\n                return maybeElement;\n            }\n        }\n        return undefined;\n    }\n}\n\nexport class RestorerAPI implements RestorerAPIType {\n    private _tabster: TabsterCore;\n    private _history: History;\n    private _keyboardNavState: KeyboardNavigationState;\n    private _focusedElementState: FocusedElementState;\n    private _getWindow: GetWindow;\n\n    constructor(tabster: TabsterCore) {\n        this._tabster = tabster;\n        this._getWindow = tabster.getWindow;\n        this._getWindow().addEventListener(\n            RestorerRestoreFocusEventName,\n            this._onRestoreFocus\n        );\n        this._history = new History(this._getWindow);\n\n        this._keyboardNavState = tabster.keyboardNavigation;\n        this._focusedElementState = tabster.focusedElement;\n\n        this._focusedElementState.subscribe(this._onFocusIn);\n    }\n\n    dispose(): void {\n        const win = this._getWindow();\n        this._focusedElementState.unsubscribe(this._onFocusIn);\n\n        this._focusedElementState.cancelAsyncFocus(AsyncFocusSources.Restorer);\n\n        win.removeEventListener(\n            RestorerRestoreFocusEventName,\n            this._onRestoreFocus\n        );\n    }\n\n    private _onRestoreFocus = (e: Event) => {\n        this._focusedElementState.cancelAsyncFocus(AsyncFocusSources.Restorer);\n\n        // ShadowDOM will have shadowRoot as e.target.\n        const source = e.composedPath()[0] as HTMLElement | undefined;\n\n        if (source) {\n            // source id must be recovered before source is removed from DOM\n            // otherwise it'll be unreachable\n            // (as tabster on element will not be available through getTabsterOnElement)\n            const sourceId = getTabsterOnElement(\n                this._tabster,\n                source\n            )?.restorer?.getProps().id;\n\n            this._focusedElementState.requestAsyncFocus(\n                AsyncFocusSources.Restorer,\n                () => this._restoreFocus(source, sourceId),\n                0\n            );\n        }\n    };\n\n    private _onFocusIn = (element: HTMLElement | undefined) => {\n        if (!element) {\n            return;\n        }\n\n        const tabsterAttribute = getTabsterOnElement(this._tabster, element);\n        if (\n            tabsterAttribute?.restorer?.getProps().type !== RestorerTypes.Target\n        ) {\n            return;\n        }\n\n        this._history.push(element);\n    };\n\n    private _restoreFocus = (source: HTMLElement, sourceId?: string) => {\n        // don't restore focus if focus isn't lost to body\n        const doc = this._getWindow().document;\n        if (dom.getActiveElement(doc) !== doc.body) {\n            return;\n        }\n        if (\n            // clicking on any empty space focuses body - this is can be a false positive\n            !this._keyboardNavState.isNavigatingWithKeyboard() &&\n            // Source no longer exists on DOM - always restore focus\n            dom.nodeContains(doc.body, source)\n        ) {\n            return;\n        }\n\n        const getId = (element: HTMLElement) => {\n            const restorerProps = getTabsterOnElement(\n                this._tabster,\n                element\n            )?.restorer?.getProps();\n            // We return id or undefined if there is actual restorer on the element,\n            // and null otherwise. To filter out elements that had restorers in their lifetime\n            // but don't have them anymore.\n            return restorerProps ? restorerProps.id : null;\n        };\n\n        // sourceId is undefined or string, if there is no Restorer on the target, the element will\n        // be filtered out because getId() will return null.\n        this._history.pop((target) => sourceId === getId(target))?.focus();\n    };\n\n    public createRestorer(element: HTMLElement, props: RestorerProps) {\n        const restorer = new Restorer(this._tabster, element, props);\n        // Focus might already be on a restorer target when it gets created so the focusin will not do anything\n        if (\n            props.type === RestorerTypes.Target &&\n            dom.getActiveElement(element.ownerDocument) === element\n        ) {\n            this._history.push(element);\n        }\n\n        return restorer;\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport function getActiveElement(doc: Document): Element | null {\n    let activeElement = doc.activeElement;\n\n    while (activeElement?.shadowRoot?.activeElement) {\n        activeElement = activeElement.shadowRoot.activeElement;\n    }\n\n    return activeElement;\n}\n\nexport function nodeContains(\n    node: Node | null | undefined,\n    otherNode: Node | null | undefined\n): boolean {\n    if (!node || !otherNode) {\n        return false;\n    }\n\n    let currentNode: HTMLElement | Node | null | undefined = otherNode;\n\n    while (currentNode) {\n        if (currentNode === node) {\n            return true;\n        }\n\n        if (\n            typeof (currentNode as HTMLSlotElement).assignedElements !==\n                \"function\" &&\n            (currentNode as HTMLElement).assignedSlot?.parentNode\n        ) {\n            // Element is slotted\n            currentNode = (currentNode as HTMLElement).assignedSlot?.parentNode;\n        } else if (currentNode.nodeType === document.DOCUMENT_FRAGMENT_NODE) {\n            // Element is in shadow root\n            currentNode = (currentNode as ShadowRoot).host;\n        } else {\n            currentNode = currentNode.parentNode;\n        }\n    }\n\n    return false;\n}\n\nexport function getParentNode(\n    node: Node | null | undefined\n): ParentNode | null {\n    if (!node) {\n        return null;\n    }\n\n    if (\n        node.nodeType === Node.DOCUMENT_FRAGMENT_NODE &&\n        (node as ShadowRoot).host\n    ) {\n        return (node as ShadowRoot).host;\n    }\n\n    return node.parentNode;\n}\n\nexport function getParentElement(\n    element: HTMLElement | null | undefined\n): HTMLElement | null {\n    for (\n        let parentNode = getParentNode(element);\n        parentNode;\n        parentNode = getParentNode(parentNode)\n    ) {\n        if (parentNode.nodeType === Node.ELEMENT_NODE) {\n            return parentNode as HTMLElement;\n        }\n    }\n\n    return null;\n}\n\nexport function getFirstChild(node: Node | null | undefined): ChildNode | null {\n    if (!node) {\n        return null;\n    }\n\n    if ((node as Element).shadowRoot) {\n        const child = getFirstChild((node as Element).shadowRoot);\n\n        if (child) {\n            return child;\n        }\n\n        // If the attached shadowRoot has no children, just try ordinary children,\n        // that might come after.\n    }\n\n    return node.firstChild;\n}\n\nexport function getLastChild(node: Node | null | undefined): ChildNode | null {\n    if (!node) {\n        return null;\n    }\n\n    if (!node.lastChild && (node as Element).shadowRoot) {\n        return getLastChild((node as Element).shadowRoot);\n    }\n\n    return node.lastChild;\n}\n\nexport function getNextSibling(\n    node: Node | null | undefined\n): ChildNode | null {\n    return node?.nextSibling || null;\n}\n\nexport function getPreviousSibling(\n    node: Node | null | undefined\n): ChildNode | null {\n    if (!node) {\n        return null;\n    }\n\n    let sibling = node.previousSibling;\n\n    if (!sibling && node.parentElement?.shadowRoot) {\n        sibling = getLastChild(node.parentElement.shadowRoot);\n    }\n\n    return sibling;\n}\n\nexport function getFirstElementChild(\n    element: Element | null | undefined\n): Element | null {\n    let child = getFirstChild(element);\n\n    while (child && child.nodeType !== Node.ELEMENT_NODE) {\n        child = getNextSibling(child);\n    }\n\n    return child as Element | null;\n}\n\nexport function getLastElementChild(\n    element: Element | null | undefined\n): Element | null {\n    let child = getLastChild(element);\n\n    while (child && child.nodeType !== Node.ELEMENT_NODE) {\n        child = getPreviousSibling(child);\n    }\n\n    return child as Element | null;\n}\n\nexport function getNextElementSibling(\n    element: Element | null | undefined\n): Element | null {\n    let sibling = getNextSibling(element);\n\n    while (sibling && sibling.nodeType !== Node.ELEMENT_NODE) {\n        sibling = getNextSibling(sibling);\n    }\n\n    return sibling as Element | null;\n}\n\nexport function getPreviousElementSibling(\n    element: Element | null | undefined\n): Element | null {\n    let sibling = getPreviousSibling(element);\n\n    while (sibling && sibling.nodeType !== Node.ELEMENT_NODE) {\n        sibling = getPreviousSibling(sibling);\n    }\n\n    return sibling as Element | null;\n}\n\nexport function appendChild(parent: Node, child: Node): Node {\n    const shadowRoot = (parent as Element).shadowRoot;\n    return shadowRoot\n        ? shadowRoot.appendChild(child)\n        : parent.appendChild(child);\n}\n\nexport function insertBefore(\n    parent: Node,\n    child: Node,\n    referenceChild: Node | null\n): Node {\n    const shadowRoot = (parent as Element).shadowRoot;\n    return shadowRoot\n        ? shadowRoot.insertBefore(child, referenceChild)\n        : parent.insertBefore(child, referenceChild);\n}\n\ninterface ShadowRootWithGetSelection extends ShadowRoot {\n    getSelection?: typeof Window.prototype.getSelection;\n}\n\nexport function getSelection(ref: Node): Selection | null {\n    const win = ref.ownerDocument?.defaultView;\n\n    if (!win) {\n        return null;\n    }\n\n    for (let el: Node | null = ref; el; el = el.parentNode) {\n        if (el.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n            const tmp = el as ShadowRootWithGetSelection;\n\n            // ShadowRoot.getSelection() exists only in Chrome.\n            if (tmp.getSelection) {\n                return tmp.getSelection() || null;\n            }\n\n            break;\n        }\n    }\n\n    return win.getSelection() || null;\n}\n\nexport function getElementsByName(\n    referenceElement: HTMLElement,\n    name: string\n): NodeListOf<HTMLElement> {\n    for (let el: Node | null = referenceElement; el; el = el.parentNode) {\n        if (el.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n            // Shadow root doesn't have getElementsByName()...\n            return (el as ShadowRoot).querySelectorAll(`[name=${name}]`);\n        }\n    }\n\n    return referenceElement.ownerDocument.getElementsByName(name);\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { getLastElementChild, nodeContains } from \"./DOMFunctions\";\n\nfunction getLastChild(container: HTMLElement): HTMLElement | undefined {\n    let lastChild: HTMLElement | null = null;\n\n    for (\n        let i = getLastElementChild(container);\n        i;\n        i = getLastElementChild(i)\n    ) {\n        lastChild = i as HTMLElement;\n    }\n\n    return lastChild || undefined;\n}\n\nexport class ShadowTreeWalker implements TreeWalker {\n    public readonly filter: NodeFilter | null;\n    public readonly root: Node;\n    public readonly whatToShow: number;\n\n    private _doc: Document;\n    private _walkerStack: TreeWalker[] = [];\n    private _currentNode: Node;\n    private _currentSetFor: Set<TreeWalker> = new Set();\n\n    constructor(\n        doc: Document,\n        root: Node,\n        whatToShow?: number,\n        filter?: NodeFilter | null\n    ) {\n        this._doc = doc;\n        this.root = root;\n        this.filter = filter ?? null;\n        this.whatToShow = whatToShow ?? NodeFilter.SHOW_ALL;\n        this._currentNode = root;\n\n        this._walkerStack.unshift(\n            doc.createTreeWalker(root, whatToShow, this._acceptNode)\n        );\n\n        const shadowRoot = (root as Element).shadowRoot;\n\n        if (shadowRoot) {\n            const walker = this._doc.createTreeWalker(\n                shadowRoot,\n                this.whatToShow,\n                { acceptNode: this._acceptNode }\n            );\n\n            this._walkerStack.unshift(walker);\n        }\n    }\n\n    private _acceptNode = (node: Node): number => {\n        if (node.nodeType === Node.ELEMENT_NODE) {\n            const shadowRoot = (node as Element).shadowRoot;\n\n            if (shadowRoot) {\n                const walker = this._doc.createTreeWalker(\n                    shadowRoot,\n                    this.whatToShow,\n                    { acceptNode: this._acceptNode }\n                );\n\n                this._walkerStack.unshift(walker);\n\n                return NodeFilter.FILTER_ACCEPT;\n            } else {\n                if (typeof this.filter === \"function\") {\n                    return this.filter(node);\n                } else if (this.filter?.acceptNode) {\n                    return this.filter.acceptNode(node);\n                } else if (this.filter === null) {\n                    return NodeFilter.FILTER_ACCEPT;\n                }\n            }\n        }\n\n        return NodeFilter.FILTER_SKIP;\n    };\n\n    public get currentNode(): Node {\n        return this._currentNode;\n    }\n\n    public set currentNode(node: Node) {\n        if (!nodeContains(this.root, node)) {\n            throw new Error(\n                \"Cannot set currentNode to a node that is not contained by the root node.\"\n            );\n        }\n\n        const walkers: TreeWalker[] = [];\n        let curNode: Node | null | undefined = node;\n        let currentWalkerCurrentNode = node;\n\n        this._currentNode = node;\n\n        while (curNode && curNode !== this.root) {\n            if (curNode.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n                const shadowRoot = curNode as ShadowRoot;\n\n                const walker = this._doc.createTreeWalker(\n                    shadowRoot,\n                    this.whatToShow,\n                    { acceptNode: this._acceptNode }\n                );\n\n                walkers.push(walker);\n\n                walker.currentNode = currentWalkerCurrentNode;\n\n                this._currentSetFor.add(walker);\n\n                curNode = currentWalkerCurrentNode = shadowRoot.host;\n            } else {\n                curNode = curNode.parentNode;\n            }\n        }\n\n        const walker = this._doc.createTreeWalker(this.root, this.whatToShow, {\n            acceptNode: this._acceptNode,\n        });\n\n        walkers.push(walker);\n\n        walker.currentNode = currentWalkerCurrentNode;\n\n        this._currentSetFor.add(walker);\n\n        this._walkerStack = walkers;\n    }\n\n    public firstChild(): Node | null {\n        if (__DEV__) {\n            throw new Error(\"Method not implemented.\");\n        }\n\n        return null;\n    }\n\n    public lastChild(): Node | null {\n        if (__DEV__) {\n            throw new Error(\"Method not implemented.\");\n        }\n\n        return null;\n    }\n\n    public nextNode(): Node | null {\n        const nextNode = this._walkerStack[0].nextNode();\n\n        if (nextNode) {\n            const shadowRoot = (nextNode as Element).shadowRoot;\n\n            if (shadowRoot) {\n                let nodeResult: number | undefined;\n\n                if (typeof this.filter === \"function\") {\n                    nodeResult = this.filter(nextNode);\n                } else if (this.filter?.acceptNode) {\n                    nodeResult = this.filter.acceptNode(nextNode);\n                }\n\n                if (nodeResult === NodeFilter.FILTER_ACCEPT) {\n                    return nextNode;\n                }\n\n                // _acceptNode should have added new walker for this shadow,\n                // go in recursively.\n                return this.nextNode();\n            }\n\n            return nextNode;\n        } else {\n            if (this._walkerStack.length > 1) {\n                this._walkerStack.shift();\n\n                return this.nextNode();\n            } else {\n                return null;\n            }\n        }\n    }\n\n    public previousNode(): Node | null {\n        const currentWalker = this._walkerStack[0];\n\n        if (currentWalker.currentNode === currentWalker.root) {\n            if (this._currentSetFor.has(currentWalker)) {\n                this._currentSetFor.delete(currentWalker);\n\n                if (this._walkerStack.length > 1) {\n                    this._walkerStack.shift();\n                    return this.previousNode();\n                } else {\n                    return null;\n                }\n            }\n\n            const lastChild = getLastChild(currentWalker.root as HTMLElement);\n\n            if (lastChild) {\n                currentWalker.currentNode = lastChild;\n\n                let nodeResult: number | undefined;\n\n                if (typeof this.filter === \"function\") {\n                    nodeResult = this.filter(lastChild);\n                } else if (this.filter?.acceptNode) {\n                    nodeResult = this.filter.acceptNode(lastChild);\n                }\n\n                if (nodeResult === NodeFilter.FILTER_ACCEPT) {\n                    return lastChild;\n                }\n            }\n        }\n\n        const previousNode = currentWalker.previousNode();\n\n        if (previousNode) {\n            const shadowRoot = (previousNode as Element).shadowRoot;\n\n            if (shadowRoot) {\n                let nodeResult: number | undefined;\n\n                if (typeof this.filter === \"function\") {\n                    nodeResult = this.filter(previousNode);\n                } else if (this.filter?.acceptNode) {\n                    nodeResult = this.filter.acceptNode(previousNode);\n                }\n\n                if (nodeResult === NodeFilter.FILTER_ACCEPT) {\n                    return previousNode;\n                }\n\n                // _acceptNode should have added new walker for this shadow,\n                // go in recursively.\n                return this.previousNode();\n            }\n\n            return previousNode;\n        } else {\n            if (this._walkerStack.length > 1) {\n                this._walkerStack.shift();\n\n                return this.previousNode();\n            } else {\n                return null;\n            }\n        }\n    }\n\n    public nextSibling(): Node | null {\n        if (__DEV__) {\n            throw new Error(\"Method not implemented.\");\n        }\n\n        return null;\n    }\n\n    public previousSibling(): Node | null {\n        if (__DEV__) {\n            throw new Error(\"Method not implemented.\");\n        }\n\n        return null;\n    }\n\n    public parentNode(): Node | null {\n        if (__DEV__) {\n            throw new Error(\"Method not implemented.\");\n        }\n\n        return null;\n    }\n}\n\nexport function createShadowTreeWalker(\n    doc: Document,\n    root: Node,\n    whatToShow?: number,\n    filter?: NodeFilter | null\n) {\n    return new ShadowTreeWalker(doc, root, whatToShow, filter);\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { nodeContains } from \"./DOMFunctions\";\n\ninterface OverridenAttachShadow {\n    __origAttachShadow?: typeof Element.prototype.attachShadow;\n}\n\nexport class ShadowMutationObserver implements MutationObserver {\n    private static _shadowObservers: Set<ShadowMutationObserver> = new Set();\n\n    private _root?: Node;\n    private _options?: MutationObserverInit;\n    private _callback: MutationCallback;\n    private _observer: MutationObserver;\n    private _subObservers: Map<Node, MutationObserver>;\n    private _isObserving = false;\n\n    private static _overrideAttachShadow(\n        win: Window & typeof globalThis\n    ): void {\n        const origAttachShadow = win.Element.prototype.attachShadow;\n\n        if ((origAttachShadow as OverridenAttachShadow).__origAttachShadow) {\n            return;\n        }\n\n        Element.prototype.attachShadow = function (\n            this: Element,\n            options?: ShadowRootInit\n        ): ShadowRoot {\n            const shadowRoot = origAttachShadow.call(this, options);\n\n            for (const shadowObserver of ShadowMutationObserver._shadowObservers) {\n                shadowObserver._addSubObserver(shadowRoot);\n            }\n\n            return shadowRoot;\n        };\n\n        (\n            Element.prototype.attachShadow as OverridenAttachShadow\n        ).__origAttachShadow = origAttachShadow;\n    }\n\n    constructor(callback: MutationCallback) {\n        this._callback = callback;\n        this._observer = new MutationObserver(this._callbackWrapper);\n        this._subObservers = new Map();\n    }\n\n    private _callbackWrapper = (\n        mutations: MutationRecord[],\n        observer: MutationObserver\n    ): void => {\n        for (const mutation of mutations) {\n            if (mutation.type === \"childList\") {\n                const removed = mutation.removedNodes;\n                const added = mutation.addedNodes;\n\n                for (let i = 0; i < removed.length; i++) {\n                    this._walkShadows(removed[i], true);\n                }\n\n                for (let i = 0; i < added.length; i++) {\n                    this._walkShadows(added[i]);\n                }\n            }\n        }\n\n        this._callback(mutations, observer);\n    };\n\n    private _addSubObserver(shadowRoot: ShadowRoot): void {\n        if (\n            !this._options ||\n            !this._callback ||\n            this._subObservers.has(shadowRoot)\n        ) {\n            return;\n        }\n\n        if (this._options.subtree && nodeContains(this._root, shadowRoot)) {\n            const subObserver = new MutationObserver(this._callbackWrapper);\n\n            this._subObservers.set(shadowRoot, subObserver);\n\n            if (this._isObserving) {\n                subObserver.observe(shadowRoot, this._options);\n            }\n\n            this._walkShadows(shadowRoot);\n        }\n    }\n\n    public disconnect(): void {\n        this._isObserving = false;\n\n        delete this._options;\n\n        ShadowMutationObserver._shadowObservers.delete(this);\n\n        for (const subObserver of this._subObservers.values()) {\n            subObserver.disconnect();\n        }\n\n        this._subObservers.clear();\n\n        this._observer.disconnect();\n    }\n\n    public observe(target: Node, options?: MutationObserverInit): void {\n        const doc =\n            target.nodeType === Node.DOCUMENT_NODE\n                ? (target as Document)\n                : target.ownerDocument;\n        const win = doc?.defaultView as Window & typeof globalThis;\n\n        if (!doc || !win) {\n            return;\n        }\n\n        ShadowMutationObserver._overrideAttachShadow(win);\n        ShadowMutationObserver._shadowObservers.add(this);\n\n        this._root = target;\n        this._options = options;\n\n        this._isObserving = true;\n\n        this._observer.observe(target, options);\n\n        this._walkShadows(target);\n    }\n\n    private _walkShadows(target: Node, remove?: boolean): void {\n        const doc =\n            target.nodeType === Node.DOCUMENT_NODE\n                ? (target as Document)\n                : target.ownerDocument;\n\n        if (!doc) {\n            return;\n        }\n\n        if (target === doc) {\n            target = doc.body;\n        } else {\n            const shadowRoot = (target as Element).shadowRoot;\n\n            if (shadowRoot) {\n                this._addSubObserver(shadowRoot);\n                return;\n            }\n        }\n\n        const walker = doc.createTreeWalker(target, NodeFilter.SHOW_ELEMENT, {\n            acceptNode: (node) => {\n                if (node.nodeType === Node.ELEMENT_NODE) {\n                    if (remove) {\n                        const subObserver = this._subObservers.get(node);\n\n                        if (subObserver) {\n                            subObserver.disconnect();\n                            this._subObservers.delete(node);\n                        }\n                    } else {\n                        const shadowRoot = (node as Element).shadowRoot;\n\n                        if (shadowRoot) {\n                            this._addSubObserver(shadowRoot);\n                        }\n                    }\n                }\n\n                return NodeFilter.FILTER_SKIP;\n            },\n        });\n\n        walker.nextNode();\n    }\n\n    public takeRecords(): MutationRecord[] {\n        const records = this._observer.takeRecords();\n\n        for (const subObserver of this._subObservers.values()) {\n            records.push(...subObserver.takeRecords());\n        }\n\n        return records;\n    }\n}\n\nexport function createShadowMutationObserver(\n    callback: MutationCallback\n): MutationObserver {\n    return new ShadowMutationObserver(callback);\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nfunction shadowQuerySelector(\n    node: ParentNode,\n    selector: string,\n    all: boolean\n): Element[] {\n    // TODO: This is probably slow. Optimize to use each shadowRoot's querySelector/querySelectorAll\n    //       instead of walking the tree.\n\n    const elements: Element[] = [];\n\n    walk(node, selector);\n\n    return elements;\n\n    function walk(from: Node, selector: string): void {\n        let el: Element | null = null;\n\n        const walker = document.createTreeWalker(\n            from,\n            NodeFilter.SHOW_ELEMENT,\n            {\n                acceptNode: (n) => {\n                    if (n.nodeType === Node.ELEMENT_NODE) {\n                        if ((n as Element).matches(selector)) {\n                            el = n as Element;\n                            elements.push(el);\n                            return all\n                                ? NodeFilter.FILTER_SKIP\n                                : NodeFilter.FILTER_ACCEPT;\n                        }\n\n                        const shadowRoot = (n as Element).shadowRoot;\n\n                        if (shadowRoot) {\n                            walk(shadowRoot, selector);\n                            return !all && elements.length\n                                ? NodeFilter.FILTER_ACCEPT\n                                : NodeFilter.FILTER_SKIP;\n                        }\n                    }\n                    return NodeFilter.FILTER_SKIP;\n                },\n            }\n        );\n\n        walker.nextNode();\n    }\n}\n\nexport function querySelectorAll(\n    node: ParentNode,\n    selector: string\n): Element[] {\n    return shadowQuerySelector(node, selector, true);\n}\n\nexport function querySelector(\n    node: ParentNode,\n    selector: string\n): Element | null {\n    return shadowQuerySelector(node, selector, false)[0] || null;\n}\n\nexport function getElementById(doc: Document, id: string): HTMLElement | null {\n    return querySelector(doc, \"#\" + id) as HTMLElement | null;\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n// TODO: The functions below do not consider Shadow DOM slots yet. We will be adding\n// support for slots as the need arises.\n\nexport { createShadowTreeWalker as createTreeWalker } from \"./ShadowTreeWalker\";\nexport { createShadowMutationObserver as createMutationObserver } from \"./ShadowMutationObserver\";\nexport {\n    appendChild,\n    getActiveElement,\n    getFirstChild,\n    getFirstElementChild,\n    getLastChild,\n    getLastElementChild,\n    getNextElementSibling,\n    getNextSibling,\n    getParentElement,\n    getParentNode,\n    getPreviousElementSibling,\n    getPreviousSibling,\n    getSelection,\n    getElementsByName,\n    insertBefore,\n    nodeContains,\n} from \"./DOMFunctions\";\nexport {\n    getElementById,\n    querySelector,\n    querySelectorAll,\n} from \"./querySelector\";\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { CrossOriginAPI } from \"./CrossOrigin\";\nimport { DeloserAPI } from \"./Deloser\";\nimport { FocusableAPI } from \"./Focusable\";\nimport { FocusedElementState } from \"./State/FocusedElement\";\nimport { GroupperAPI } from \"./Groupper\";\nimport { getTabsterOnElement, updateTabsterByAttribute } from \"./Instance\";\nimport { KeyboardNavigationState } from \"./State/KeyboardNavigation\";\nimport { ModalizerAPI } from \"./Modalizer\";\nimport { MoverAPI } from \"./Mover\";\nimport { observeMutations } from \"./MutationEvent\";\nimport { ObservedElementAPI } from \"./State/ObservedElement\";\nimport { OutlineAPI } from \"./Outline\";\nimport { RootAPI, WindowWithTabsterInstance } from \"./Root\";\nimport * as Types from \"./Types\";\nimport { TABSTER_ATTRIBUTE_NAME } from \"./Consts\";\nimport { UncontrolledAPI } from \"./Uncontrolled\";\nimport {\n    cleanupFakeWeakRefs,\n    clearElementCache,\n    createElementTreeWalker,\n    createWeakMap,\n    disposeInstanceContext,\n    DummyInputObserver,\n    getDummyInputContainer,\n    startFakeWeakRefsCleanup,\n    stopFakeWeakRefsCleanupAndClearStorage,\n} from \"./Utils\";\nimport { RestorerAPI } from \"./Restorer\";\nimport { dom, setDOMAPI } from \"./DOMAPI\";\nimport * as shadowDOMAPI from \"./Shadowdomize\";\n\nexport { getDummyInputContainer };\n\nclass Tabster implements Types.Tabster {\n    keyboardNavigation: Types.KeyboardNavigationState;\n    focusedElement: Types.FocusedElementState;\n    focusable: Types.FocusableAPI;\n    root: Types.RootAPI;\n    uncontrolled: Types.UncontrolledAPI;\n    core: Types.TabsterCore;\n\n    constructor(tabster: Types.TabsterCore) {\n        this.keyboardNavigation = tabster.keyboardNavigation;\n        this.focusedElement = tabster.focusedElement;\n        this.focusable = tabster.focusable;\n        this.root = tabster.root;\n        this.uncontrolled = tabster.uncontrolled;\n        this.core = tabster;\n    }\n}\n\n/**\n * Extends Window to include an internal Tabster instance.\n */\nclass TabsterCore implements Types.TabsterCore {\n    private _storage: WeakMap<HTMLElement, Types.TabsterElementStorage>;\n    private _unobserve: (() => void) | undefined;\n    private _win: WindowWithTabsterInstance | undefined;\n    private _forgetMemorizedTimer: number | undefined;\n    private _forgetMemorizedElements: HTMLElement[] = [];\n    private _wrappers: Set<Tabster> = new Set<Tabster>();\n    private _initTimer: number | undefined;\n    private _initQueue: (() => void)[] = [];\n\n    _version: string = __VERSION__;\n    _noop = false;\n    controlTab: boolean;\n    rootDummyInputs: boolean;\n\n    // Core APIs\n    keyboardNavigation: Types.KeyboardNavigationState;\n    focusedElement: Types.FocusedElementState;\n    focusable: Types.FocusableAPI;\n    root: Types.RootAPI;\n    uncontrolled: Types.UncontrolledAPI;\n    internal: Types.InternalAPI;\n    _dummyObserver: Types.DummyInputObserver;\n\n    // Extended APIs\n    groupper?: Types.GroupperAPI;\n    mover?: Types.MoverAPI;\n    outline?: Types.OutlineAPI;\n    deloser?: Types.DeloserAPI;\n    modalizer?: Types.ModalizerAPI;\n    observedElement?: Types.ObservedElementAPI;\n    crossOrigin?: Types.CrossOriginAPI;\n    restorer?: Types.RestorerAPI;\n    getParent: (el: Node) => Node | null;\n\n    constructor(win: Window, props?: Types.TabsterCoreProps) {\n        this._storage = createWeakMap(win);\n        this._win = win;\n\n        const getWindow = this.getWindow;\n\n        if (props?.DOMAPI) {\n            setDOMAPI({ ...props.DOMAPI });\n        }\n\n        this.keyboardNavigation = new KeyboardNavigationState(getWindow);\n        this.focusedElement = new FocusedElementState(this, getWindow);\n        this.focusable = new FocusableAPI(this);\n        this.root = new RootAPI(this, props?.autoRoot);\n        this.uncontrolled = new UncontrolledAPI(\n            // TODO: Remove checkUncontrolledTrappingFocus in the next major version.\n            props?.checkUncontrolledCompletely ||\n                props?.checkUncontrolledTrappingFocus\n        );\n        this.controlTab = props?.controlTab ?? true;\n        this.rootDummyInputs = !!props?.rootDummyInputs;\n\n        this._dummyObserver = new DummyInputObserver(getWindow);\n\n        this.getParent = props?.getParent ?? dom.getParentNode;\n\n        this.internal = {\n            stopObserver: (): void => {\n                if (this._unobserve) {\n                    this._unobserve();\n                    delete this._unobserve;\n                }\n            },\n\n            resumeObserver: (syncState: boolean): void => {\n                if (!this._unobserve) {\n                    const doc = getWindow().document;\n                    this._unobserve = observeMutations(\n                        doc,\n                        this,\n                        updateTabsterByAttribute,\n                        syncState\n                    );\n                }\n            },\n        };\n\n        startFakeWeakRefsCleanup(getWindow);\n\n        // Gives a tick to the host app to initialize other tabster\n        // APIs before tabster starts observing attributes.\n        this.queueInit(() => {\n            this.internal.resumeObserver(true);\n        });\n    }\n\n    /**\n     * Merges external props with the current props. Not all\n     * props can/should be mergeable, so let's add more as we move on.\n     * @param props Tabster props\n     */\n    private _mergeProps(props?: Types.TabsterCoreProps) {\n        if (!props) {\n            return;\n        }\n\n        this.getParent = props.getParent ?? this.getParent;\n    }\n\n    createTabster(\n        noRefCount?: boolean,\n        props?: Types.TabsterCoreProps\n    ): Types.Tabster {\n        const wrapper = new Tabster(this);\n\n        if (!noRefCount) {\n            this._wrappers.add(wrapper);\n        }\n\n        this._mergeProps(props);\n\n        return wrapper;\n    }\n\n    disposeTabster(wrapper: Types.Tabster, allInstances?: boolean) {\n        if (allInstances) {\n            this._wrappers.clear();\n        } else {\n            this._wrappers.delete(wrapper);\n        }\n\n        if (this._wrappers.size === 0) {\n            this.dispose();\n        }\n    }\n\n    dispose(): void {\n        this.internal.stopObserver();\n\n        const win = this._win;\n\n        win?.clearTimeout(this._initTimer);\n        delete this._initTimer;\n        this._initQueue = [];\n\n        this._forgetMemorizedElements = [];\n\n        if (win && this._forgetMemorizedTimer) {\n            win.clearTimeout(this._forgetMemorizedTimer);\n            delete this._forgetMemorizedTimer;\n        }\n\n        this.outline?.dispose();\n        this.crossOrigin?.dispose();\n        this.deloser?.dispose();\n        this.groupper?.dispose();\n        this.mover?.dispose();\n        this.modalizer?.dispose();\n        this.observedElement?.dispose();\n        this.restorer?.dispose();\n\n        this.keyboardNavigation.dispose();\n        this.focusable.dispose();\n        this.focusedElement.dispose();\n        this.root.dispose();\n\n        this._dummyObserver.dispose();\n\n        stopFakeWeakRefsCleanupAndClearStorage(this.getWindow);\n        clearElementCache(this.getWindow);\n\n        this._storage = new WeakMap();\n        this._wrappers.clear();\n\n        if (win) {\n            disposeInstanceContext(win);\n            delete win.__tabsterInstance;\n            delete this._win;\n        }\n    }\n\n    storageEntry(\n        element: HTMLElement,\n        addremove?: boolean\n    ): Types.TabsterElementStorageEntry | undefined {\n        const storage = this._storage;\n        let entry = storage.get(element);\n\n        if (entry) {\n            if (addremove === false && Object.keys(entry).length === 0) {\n                storage.delete(element);\n            }\n        } else if (addremove === true) {\n            entry = {};\n            storage.set(element, entry);\n        }\n\n        return entry;\n    }\n\n    getWindow = () => {\n        if (!this._win) {\n            throw new Error(\"Using disposed Tabster.\");\n        }\n\n        return this._win;\n    };\n\n    forceCleanup(): void {\n        if (!this._win) {\n            return;\n        }\n\n        this._forgetMemorizedElements.push(this._win.document.body);\n\n        if (this._forgetMemorizedTimer) {\n            return;\n        }\n\n        this._forgetMemorizedTimer = this._win.setTimeout(() => {\n            delete this._forgetMemorizedTimer;\n\n            for (\n                let el: HTMLElement | undefined =\n                    this._forgetMemorizedElements.shift();\n                el;\n                el = this._forgetMemorizedElements.shift()\n            ) {\n                clearElementCache(this.getWindow, el);\n                FocusedElementState.forgetMemorized(this.focusedElement, el);\n            }\n        }, 0);\n\n        cleanupFakeWeakRefs(this.getWindow, true);\n    }\n\n    queueInit(callback: () => void): void {\n        if (!this._win) {\n            return;\n        }\n\n        this._initQueue.push(callback);\n\n        if (!this._initTimer) {\n            this._initTimer = this._win?.setTimeout(() => {\n                delete this._initTimer;\n                this.drainInitQueue();\n            }, 0);\n        }\n    }\n\n    drainInitQueue(): void {\n        if (!this._win) {\n            return;\n        }\n\n        const queue = this._initQueue;\n        // Resetting the queue before calling the callbacks to avoid recursion.\n        this._initQueue = [];\n        queue.forEach((callback) => callback());\n    }\n}\n\nexport function forceCleanup(tabster: Types.Tabster): void {\n    // The only legit case for calling this method is when you've completely removed\n    // the application DOM and not going to add the new one for a while.\n    const tabsterCore = tabster.core;\n    tabsterCore.forceCleanup();\n}\n\n/**\n * Creates an instance of Tabster, returns the current window instance if it already exists.\n */\nexport function createTabster(\n    win: Window,\n    props?: Types.TabsterCoreProps\n): Types.Tabster {\n    let tabster = getCurrentTabster(win as WindowWithTabsterInstance);\n\n    if (tabster) {\n        return tabster.createTabster(false, props);\n    }\n\n    tabster = new TabsterCore(win, props);\n\n    (win as WindowWithTabsterInstance).__tabsterInstance = tabster;\n\n    return tabster.createTabster();\n}\n\n/**\n * Returns an instance of Tabster if it was created before or null.\n */\nexport function getTabster(win: Window): Types.Tabster | null {\n    const tabster = getCurrentTabster(win as WindowWithTabsterInstance);\n\n    return tabster ? tabster.createTabster(true) : null;\n}\n\nexport function getShadowDOMAPI(): Types.DOMAPI {\n    return shadowDOMAPI;\n}\n\n/**\n * Creates a new groupper instance or returns an existing one\n * @param tabster Tabster instance\n */\nexport function getGroupper(tabster: Types.Tabster): Types.GroupperAPI {\n    const tabsterCore = tabster.core;\n\n    if (!tabsterCore.groupper) {\n        tabsterCore.groupper = new GroupperAPI(\n            tabsterCore,\n            tabsterCore.getWindow\n        );\n    }\n\n    return tabsterCore.groupper;\n}\n\n/**\n * Creates a new mover instance or returns an existing one\n * @param tabster Tabster instance\n */\nexport function getMover(tabster: Types.Tabster): Types.MoverAPI {\n    const tabsterCore = tabster.core;\n\n    if (!tabsterCore.mover) {\n        tabsterCore.mover = new MoverAPI(tabsterCore, tabsterCore.getWindow);\n    }\n\n    return tabsterCore.mover;\n}\n\nexport function getOutline(tabster: Types.Tabster): Types.OutlineAPI {\n    const tabsterCore = tabster.core;\n\n    if (!tabsterCore.outline) {\n        tabsterCore.outline = new OutlineAPI(tabsterCore);\n    }\n\n    return tabsterCore.outline;\n}\n\n/**\n * Creates a new new deloser instance or returns an existing one\n * @param tabster Tabster instance\n * @param props Deloser props\n */\nexport function getDeloser(\n    tabster: Types.Tabster,\n    props?: { autoDeloser: Types.DeloserProps }\n): Types.DeloserAPI {\n    const tabsterCore = tabster.core;\n\n    if (!tabsterCore.deloser) {\n        tabsterCore.deloser = new DeloserAPI(tabsterCore, props);\n    }\n\n    return tabsterCore.deloser;\n}\n\n/**\n * Creates a new modalizer instance or returns an existing one\n * @param tabster Tabster instance\n * @param alwaysAccessibleSelector When Modalizer is active, we put\n * aria-hidden to everything else to hide it from screen readers. This CSS\n * selector allows to exclude some elements from this behaviour. For example,\n * this could be used to exclude aria-live region with the application-wide\n * status announcements.\n * @param accessibleCheck An optional callback that will be called when\n * active Modalizer wants to hide an element that doesn't belong to it from\n * the screen readers by setting aria-hidden. Similar to alwaysAccessibleSelector\n * but allows to address the elements programmatically rather than with a selector.\n * If the callback returns true, the element will not receive aria-hidden.\n */\nexport function getModalizer(\n    tabster: Types.Tabster,\n    // @deprecated use accessibleCheck.\n    alwaysAccessibleSelector?: string,\n    accessibleCheck?: Types.ModalizerElementAccessibleCheck\n): Types.ModalizerAPI {\n    const tabsterCore = tabster.core;\n\n    if (!tabsterCore.modalizer) {\n        tabsterCore.modalizer = new ModalizerAPI(\n            tabsterCore,\n            alwaysAccessibleSelector,\n            accessibleCheck\n        );\n    }\n\n    return tabsterCore.modalizer;\n}\n\nexport function getObservedElement(\n    tabster: Types.Tabster\n): Types.ObservedElementAPI {\n    const tabsterCore = tabster.core;\n\n    if (!tabsterCore.observedElement) {\n        tabsterCore.observedElement = new ObservedElementAPI(tabsterCore);\n    }\n\n    return tabsterCore.observedElement;\n}\n\nexport function getCrossOrigin(tabster: Types.Tabster): Types.CrossOriginAPI {\n    const tabsterCore = tabster.core;\n    if (!tabsterCore.crossOrigin) {\n        getDeloser(tabster);\n        getModalizer(tabster);\n        getMover(tabster);\n        getGroupper(tabster);\n        getOutline(tabster);\n        getObservedElement(tabster);\n        tabsterCore.crossOrigin = new CrossOriginAPI(tabsterCore);\n    }\n\n    return tabsterCore.crossOrigin;\n}\n\nexport function getInternal(tabster: Types.Tabster): Types.InternalAPI {\n    const tabsterCore = tabster.core;\n    return tabsterCore.internal;\n}\n\nexport function getRestorer(tabster: Types.Tabster): Types.RestorerAPI {\n    const tabsterCore = tabster.core;\n    if (!tabsterCore.restorer) {\n        tabsterCore.restorer = new RestorerAPI(tabsterCore);\n    }\n\n    return tabsterCore.restorer;\n}\n\nexport function disposeTabster(\n    tabster: Types.Tabster,\n    allInstances?: boolean\n): void {\n    tabster.core.disposeTabster(tabster, allInstances);\n}\n\n/**\n * Returns an instance of Tabster if it already exists on the window .\n * @param win window instance that could contain an Tabster instance.\n */\nexport function getCurrentTabster(win: Window): Types.TabsterCore | undefined {\n    return (win as WindowWithTabsterInstance).__tabsterInstance;\n}\n\n/**\n * Allows to make Tabster non operational. Intended for performance debugging (and other\n * kinds of debugging), you can switch Tabster off without changing the application code\n * that consumes it.\n * @param tabster a reference created by createTabster().\n * @param noop true if you want to make Tabster noop, false if you want to turn it back.\n */\nexport function makeNoOp(tabster: Types.Tabster, noop: boolean): void {\n    const core = tabster.core;\n\n    if (core._noop !== noop) {\n        core._noop = noop;\n\n        const processNode = (element: HTMLElement): number => {\n            if (!element.getAttribute) {\n                return NodeFilter.FILTER_SKIP;\n            }\n\n            if (\n                getTabsterOnElement(core, element) ||\n                element.hasAttribute(TABSTER_ATTRIBUTE_NAME)\n            ) {\n                updateTabsterByAttribute(core, element);\n            }\n\n            return NodeFilter.FILTER_SKIP;\n        };\n\n        const doc = core.getWindow().document;\n        const body = doc.body;\n\n        processNode(body);\n\n        const walker = createElementTreeWalker(doc, body, processNode);\n\n        if (walker) {\n            while (walker.nextNode()) {\n                /* Iterating for the sake of calling processNode() callback. */\n            }\n        }\n    }\n}\n\nexport function isNoOp(tabster: Types.TabsterCore): boolean {\n    return (tabster as TabsterCore)._noop;\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport type { TABSTER_ATTRIBUTE_NAME } from \"./Consts\";\n\nexport interface HTMLElementWithTabsterFlags extends HTMLElement {\n    __tabsterElementFlags?: {\n        /**\n         * @deprecated This option is added to support interop between Fluent UI V9 and Fluent UI V8.\n         * Once Fluent UI V8 is not supported anymore, this option should be removed.\n         */\n        noDirectAriaHidden?: boolean; // When Modalizer sets aria-hidden on everything outside of the modal,\n        // do not set aria-hidden directly on this element, go inside and check its children,\n        // and set aria-hidden on the children. This is to be set on a container that hosts\n        // elements which have the active modal dialog as virtual parent.\n    };\n}\n\nexport interface TabsterDOMAttribute {\n    [TABSTER_ATTRIBUTE_NAME]: string | undefined;\n}\n\nexport interface TabsterCoreProps {\n    autoRoot?: RootProps;\n    /**\n     * Allows all tab key presses under the tabster root to be controlled by tabster\n     * @default true\n     */\n    controlTab?: boolean;\n    /**\n     * When controlTab is false, Root doesn't have dummy inputs by default.\n     * This option allows to enable dummy inputs on Root.\n     */\n    rootDummyInputs?: boolean;\n    /**\n     * A callback that will be called for the uncontrolled areas when Tabster wants\n     * to know is the uncontrolled element wants complete control (for example it\n     * is trapping focus) and Tabster should not interfere with handling Tab.\n     * If the callback returns undefined, then the default behaviour is to return\n     * the uncontrolled.completely value from the element. If the callback returns\n     * non-undefined value, the callback's value will dominate the element's\n     * uncontrolled.completely value.\n     */\n    checkUncontrolledCompletely?: (\n        element: HTMLElement,\n        completely: boolean // A uncontrolled.completely value from the element.\n    ) => boolean | undefined;\n    /**\n     * @deprecated use checkUncontrolledCompletely.\n     */\n    checkUncontrolledTrappingFocus?: (element: HTMLElement) => boolean;\n    /**\n     * Custom getter for parent elements. Defaults to the default .parentElement call\n     * Currently only used to detect tabster contexts\n     */\n    getParent?(el: Node): Node | null;\n    /**\n     * Ability to redefine all DOM API calls used by Tabster. For example, for\n     * ShadowDOM support.\n     */\n    DOMAPI?: Partial<DOMAPI>;\n}\n\nexport interface DOMAPI {\n    createMutationObserver: (callback: MutationCallback) => MutationObserver;\n    createTreeWalker(\n        doc: Document,\n        root: Node,\n        whatToShow?: number,\n        filter?: NodeFilter | null\n    ): TreeWalker;\n    getParentNode(node: Node | null | undefined): ParentNode | null;\n    getParentElement(\n        element: HTMLElement | null | undefined\n    ): HTMLElement | null;\n    nodeContains(\n        parent: Node | null | undefined,\n        child: Node | null | undefined\n    ): boolean;\n    getActiveElement(doc: Document): Element | null;\n    querySelector(element: ParentNode, selector: string): Element | null;\n    querySelectorAll(element: ParentNode, selector: string): Element[];\n    getElementById(doc: Document, id: string): HTMLElement | null;\n    getFirstChild(node: Node | null | undefined): ChildNode | null;\n    getLastChild(node: Node | null | undefined): ChildNode | null;\n    getNextSibling(node: Node | null | undefined): ChildNode | null;\n    getPreviousSibling(node: Node | null | undefined): ChildNode | null;\n    getFirstElementChild(element: Element | null | undefined): Element | null;\n    getLastElementChild(element: Element | null | undefined): Element | null;\n    getNextElementSibling(element: Element | null | undefined): Element | null;\n    getPreviousElementSibling(\n        element: Element | null | undefined\n    ): Element | null;\n    appendChild(parent: Node, child: Node): Node;\n    insertBefore(parent: Node, child: Node, referenceChild: Node | null): Node;\n    getSelection(ref: Node): Selection | null;\n    getElementsByName(\n        referenceElement: HTMLElement,\n        name: string\n    ): NodeListOf<HTMLElement>;\n}\n\nexport type GetTabster = () => TabsterCore;\nexport type GetWindow = () => Window;\n\nexport type SubscribableCallback<A, B = undefined> = (\n    val: A,\n    detail: B\n) => void;\n\nexport interface Disposable {\n    /** @internal */\n    dispose(): void;\n}\n\nexport interface Subscribable<A, B = undefined> {\n    subscribe(callback: SubscribableCallback<A, B>): void;\n    /** @internal */\n    subscribeFirst(callback: SubscribableCallback<A, B>): void;\n    unsubscribe(callback: SubscribableCallback<A, B>): void;\n}\n\nexport interface KeyboardNavigationState\n    extends Subscribable<boolean>,\n        Disposable {\n    isNavigatingWithKeyboard(): boolean;\n    setNavigatingWithKeyboard(isNavigatingWithKeyboard: boolean): void;\n}\n\nexport interface FocusedElementDetail {\n    relatedTarget?: HTMLElement;\n    isFocusedProgrammatically?: boolean;\n    modalizerId?: string;\n}\n\nimport { AsyncFocusSources as _AsyncFocusSources } from \"./Consts\";\nexport type AsyncFocusSources = typeof _AsyncFocusSources;\n\nexport type AsyncFocusSource = AsyncFocusSources[keyof AsyncFocusSources];\n\nexport interface FocusedElementState\n    extends Subscribable<HTMLElement | undefined, FocusedElementDetail>,\n        Disposable {\n    getFocusedElement(): HTMLElement | undefined;\n    getLastFocusedElement(): HTMLElement | undefined;\n    focus(\n        element: HTMLElement,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean,\n        preventScroll?: boolean\n    ): boolean;\n    focusDefault(container: HTMLElement): boolean;\n    /** @internal */\n    getFirstOrLastTabbable(\n        isFirst: boolean,\n        props: Pick<FindFocusableProps, \"container\" | \"ignoreAccessibility\">\n    ): HTMLElement | undefined;\n    focusFirst(props: FindFirstProps): boolean;\n    focusLast(props: FindFirstProps): boolean;\n    resetFocus(container: HTMLElement): boolean;\n    /**\n     * When Tabster wants to move focus asynchronously, it it should call this method to register its intent.\n     * This is a way to avoid conflicts between different parts that might want to move focus asynchronously\n     * at the same moment (for example when both Deloser and Restorer want to move focus when the focused element\n     * is removed from DOM).\n     */\n    /** @internal */\n    requestAsyncFocus(\n        source: AsyncFocusSource,\n        callback: () => void,\n        delay: number\n    ): void;\n    /** @internal */\n    cancelAsyncFocus(source: AsyncFocusSource): void;\n}\n\nexport interface WeakHTMLElement<D = undefined> {\n    get(): HTMLElement | undefined;\n    getData(): D | undefined;\n}\n\nexport interface TabsterPart<P> {\n    readonly id: string;\n    getElement(): HTMLElement | undefined;\n    getProps(): P;\n    setProps(props: P): void;\n}\n\nexport interface TabsterPartWithFindNextTabbable {\n    findNextTabbable(\n        current?: HTMLElement,\n        reference?: HTMLElement,\n        isBackward?: boolean,\n        ignoreAccessibility?: boolean\n    ): NextTabbable | null;\n}\n\nexport interface TabsterPartWithAcceptElement {\n    acceptElement(\n        element: HTMLElement,\n        state: FocusableAcceptElementState\n    ): number | undefined;\n}\n\nexport interface ObservedElementProps {\n    names: string[];\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    details?: any;\n}\n\nexport interface ObservedElementDetails extends ObservedElementProps {\n    accessibility?: ObservedElementAccessibility;\n}\n\nimport { ObservedElementAccessibilities as _ObservedElementAccessibilities } from \"./Consts\";\nexport type ObservedElementAccessibilities =\n    typeof _ObservedElementAccessibilities;\n\nexport type ObservedElementAccessibility =\n    ObservedElementAccessibilities[keyof ObservedElementAccessibilities];\n\nimport { ObservedElementRequestStatuses as _ObservedElementRequestStatuses } from \"./Consts\";\nexport type ObservedElementRequestStatuses =\n    typeof _ObservedElementRequestStatuses;\n\nexport type ObservedElementRequestStatus =\n    ObservedElementRequestStatuses[keyof ObservedElementRequestStatuses];\n\nexport interface ObservedElementAsyncRequest<T> {\n    result: Promise<T>;\n    cancel(): void;\n    status?: ObservedElementRequestStatus; // Making status optional for the interface backwards compatibility.\n}\n\ninterface ObservedElementAPIInternal {\n    /** @internal */\n    onObservedElementUpdate(element: HTMLElement): void;\n}\n\nexport interface ObservedElementAPI\n    extends Subscribable<HTMLElement, ObservedElementDetails>,\n        Disposable,\n        ObservedElementAPIInternal {\n    getElement(\n        observedName: string,\n        accessibility?: ObservedElementAccessibility\n    ): HTMLElement | null;\n    waitElement(\n        observedName: string,\n        timeout: number,\n        accessibility?: ObservedElementAccessibility\n    ): ObservedElementAsyncRequest<HTMLElement | null>;\n    requestFocus(\n        observedName: string,\n        timeout: number,\n        options?: Pick<FocusOptions, \"preventScroll\">\n    ): ObservedElementAsyncRequest<boolean>;\n}\n\nexport interface CrossOriginElement {\n    readonly uid: string;\n    readonly ownerId: string;\n    readonly id?: string;\n    readonly rootId?: string;\n    readonly observedName?: string;\n    readonly observedDetails?: string;\n    focus(\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean>;\n}\n\nexport interface CrossOriginSentTo {\n    [id: string]: true;\n}\n\nexport interface CrossOriginTransactionTypes {\n    Bootstrap: 1;\n    FocusElement: 2;\n    State: 3;\n    GetElement: 4;\n    RestoreFocusInDeloser: 5;\n    Ping: 6;\n}\nexport type CrossOriginTransactionType =\n    CrossOriginTransactionTypes[keyof CrossOriginTransactionTypes];\n\nexport interface CrossOriginTransactionData<I, O> {\n    transaction: string;\n    type: CrossOriginTransactionType;\n    isResponse: boolean;\n    timestamp: number;\n    owner: string;\n    sentto: CrossOriginSentTo;\n    timeout?: number;\n    target?: string;\n    beginData?: I;\n    endData?: O;\n}\n\nexport type CrossOriginTransactionSend = (\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    data: CrossOriginTransactionData<any, any>\n) => void;\n\nexport interface CrossOriginMessage {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    data: CrossOriginTransactionData<any, any>;\n    send: CrossOriginTransactionSend;\n}\n\nexport interface CrossOriginFocusedElementState\n    extends Subscribable<CrossOriginElement | undefined, FocusedElementDetail>,\n        Disposable {\n    focus(\n        element: CrossOriginElement,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean>;\n    focusById(\n        elementId: string,\n        rootId?: string,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean>;\n    focusByObservedName(\n        observedName: string,\n        timeout?: number,\n        rootId?: string,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean>;\n}\n\nexport interface CrossOriginObservedElementState\n    extends Subscribable<CrossOriginElement, ObservedElementProps>,\n        Disposable {\n    getElement(\n        observedName: string,\n        accessibility?: ObservedElementAccessibility\n    ): Promise<CrossOriginElement | null>;\n    waitElement(\n        observedName: string,\n        timeout: number,\n        accessibility?: ObservedElementAccessibility\n    ): Promise<CrossOriginElement | null>;\n    requestFocus(observedName: string, timeout: number): Promise<boolean>;\n}\n\nexport interface CrossOriginAPI {\n    focusedElement: CrossOriginFocusedElementState;\n    observedElement: CrossOriginObservedElementState;\n\n    setup(\n        sendUp?: CrossOriginTransactionSend | null\n    ): (msg: CrossOriginMessage) => void;\n    isSetUp(): boolean;\n    dispose(): void;\n}\n\nexport interface OutlineProps {\n    areaClass: string;\n    outlineClass: string;\n    outlineColor: string;\n    outlineWidth: number;\n    zIndex: number;\n}\n\nexport interface OutlinedElementProps {\n    isIgnored?: boolean;\n}\n\nexport interface OutlineAPI extends Disposable {\n    setup(props?: Partial<OutlineProps>): void;\n}\n\nexport interface DeloserElementActions {\n    focusDefault: () => boolean;\n    focusFirst: () => boolean;\n    resetFocus: () => boolean;\n    clearHistory: (preserveExisting?: boolean) => void;\n    setSnapshot: (index: number) => void;\n    isActive: () => boolean;\n}\n\nimport { RestoreFocusOrders as _RestoreFocusOrders } from \"./Consts\";\nexport type RestoreFocusOrders = typeof _RestoreFocusOrders;\n\nexport type RestoreFocusOrder = RestoreFocusOrders[keyof RestoreFocusOrders];\n\nimport { DeloserStrategies as _DeloserStrategies } from \"./Consts\";\nexport type DeloserStrategies = typeof _DeloserStrategies;\n\nexport type DeloserStrategy = DeloserStrategies[keyof DeloserStrategies];\n\nexport interface DeloserProps {\n    restoreFocusOrder?: RestoreFocusOrder;\n    noSelectorCheck?: boolean;\n    strategy?: DeloserStrategy;\n}\n\nexport interface Deloser extends TabsterPart<DeloserProps> {\n    readonly uid: string;\n    readonly strategy: DeloserStrategy;\n    dispose(): void;\n    isActive(): boolean;\n    setActive(active: boolean): void;\n    getActions(): DeloserElementActions;\n    setSnapshot(index: number): void;\n    focusFirst(): boolean;\n    unshift(element: HTMLElement): void;\n    focusDefault(): boolean;\n    resetFocus(): boolean;\n    findAvailable(): HTMLElement | null;\n    clearHistory(preserveExisting?: boolean): void;\n    customFocusLostHandler(element: HTMLElement): boolean;\n}\n\nexport type DeloserConstructor = (\n    element: HTMLElement,\n    props: DeloserProps\n) => Deloser;\n\ninterface DeloserInterfaceInternal {\n    /** @internal */\n    createDeloser(element: HTMLElement, props: DeloserProps): Deloser;\n}\n\nexport interface DeloserAPI extends DeloserInterfaceInternal, Disposable {\n    getActions(element: HTMLElement): DeloserElementActions | undefined;\n    pause(): void;\n    resume(restore?: boolean): void;\n}\n\nexport interface FocusableProps {\n    isDefault?: boolean;\n    isIgnored?: boolean;\n    /**\n     * Do not determine an element's focusability based on aria-disabled.\n     */\n    ignoreAriaDisabled?: boolean;\n    /**\n     * Exclude element (and all subelements) from Mover navigation.\n     */\n    excludeFromMover?: boolean;\n    /**\n     * Prevents tabster from handling the keydown event\n     */\n    ignoreKeydown?: {\n        Tab?: boolean;\n        Escape?: boolean;\n        Enter?: boolean;\n        ArrowUp?: boolean;\n        ArrowDown?: boolean;\n        ArrowLeft?: boolean;\n        ArrowRight?: boolean;\n        PageUp?: boolean;\n        PageDown?: boolean;\n        Home?: boolean;\n        End?: boolean;\n    };\n}\n\nexport interface RadioButtonGroup {\n    name: string;\n    buttons: Set<HTMLInputElement>;\n    checked?: HTMLInputElement;\n}\n\nexport interface FocusableAcceptElementState {\n    container: HTMLElement;\n    modalizerUserId?: string;\n    currentCtx?: TabsterContext;\n    from: HTMLElement;\n    fromCtx?: TabsterContext;\n    isBackward?: boolean;\n    found?: boolean;\n    foundElement?: HTMLElement;\n    foundBackward?: HTMLElement;\n    rejectElementsFrom?: HTMLElement;\n    uncontrolled?: HTMLElement;\n    acceptCondition: (el: HTMLElement) => boolean;\n    hasCustomCondition?: boolean;\n    includeProgrammaticallyFocusable?: boolean;\n    ignoreAccessibility?: boolean;\n    cachedGrouppers: {\n        [id: string]: {\n            isActive: boolean | undefined;\n            first?: HTMLElement | null;\n        };\n    };\n    cachedRadioGroups: {\n        [name: string]: RadioButtonGroup;\n    };\n    isFindAll?: boolean;\n    /**\n     * A flag that indicates that some focusable elements were skipped\n     * during the search and the found element is not the one the browser\n     * would normally focus if the user pressed Tab.\n     */\n    skippedFocusable?: boolean;\n}\n\nexport interface FindFocusableProps {\n    /**\n     * The container used for the search.\n     */\n    container: HTMLElement;\n    /**\n     * The elemet to start from.\n     */\n    currentElement?: HTMLElement;\n    /**\n     * See `referenceElement` of GetTabsterContextOptions for description.\n     */\n    referenceElement?: HTMLElement;\n    /**\n     * Includes elements that can be focused programmatically.\n     */\n    includeProgrammaticallyFocusable?: boolean;\n    /**\n     * Ignore accessibility check.\n     */\n    ignoreAccessibility?: boolean;\n    /**\n     * Take active modalizer into account when searching for elements\n     * (the elements out of active modalizer will not be returned).\n     */\n    useActiveModalizer?: boolean;\n    /**\n     * Search withing the specified modality, null for everything outside of modalizers, string within\n     * a specific id, undefined for search within the current application state.\n     */\n    modalizerId?: string | null;\n    /**\n     * If true, find previous element instead of the next one.\n     */\n    isBackward?: boolean;\n    /**\n     * @param el element visited.\n     * @returns if an element should be accepted.\n     */\n    acceptCondition?(el: HTMLElement): boolean;\n    /**\n     * A callback that will be called for every focusable element found during findAll().\n     * If false is returned from this callback, the search will stop.\n     */\n    onElement?: FindElementCallback;\n}\n\nexport interface FindFocusableOutputProps {\n    /**\n     * An output parameter. Will be true after the findNext/findPrev() call if some focusable\n     * elements were skipped during the search and the result element not immediately next\n     * focusable after the currentElement.\n     */\n    outOfDOMOrder?: boolean;\n    /**\n     * An output parameter. Will be true if the found element is uncontrolled.\n     */\n    uncontrolled?: HTMLElement | null;\n}\n\nexport type FindFirstProps = Pick<\n    FindFocusableProps,\n    | \"container\"\n    | \"modalizerId\"\n    | \"includeProgrammaticallyFocusable\"\n    | \"useActiveModalizer\"\n    | \"ignoreAccessibility\"\n>;\n\nexport type FindNextProps = Pick<\n    FindFocusableProps,\n    | \"currentElement\"\n    | \"referenceElement\"\n    | \"container\"\n    | \"modalizerId\"\n    | \"includeProgrammaticallyFocusable\"\n    | \"useActiveModalizer\"\n    | \"ignoreAccessibility\"\n>;\n\nexport type FindDefaultProps = Pick<\n    FindFocusableProps,\n    | \"container\"\n    | \"modalizerId\"\n    | \"includeProgrammaticallyFocusable\"\n    | \"useActiveModalizer\"\n    | \"ignoreAccessibility\"\n>;\n\nexport type FindAllProps = Pick<\n    FindFocusableProps,\n    | \"container\"\n    | \"modalizerId\"\n    | \"currentElement\"\n    | \"isBackward\"\n    | \"includeProgrammaticallyFocusable\"\n    | \"useActiveModalizer\"\n    | \"acceptCondition\"\n    | \"ignoreAccessibility\"\n    | \"onElement\"\n>;\n\n/**\n * A callback that is called for every found element during search. Returning false stops search.\n */\nexport type FindElementCallback = (element: HTMLElement) => boolean;\n\nexport interface FocusableAPI extends Disposable {\n    getProps(element: HTMLElement): FocusableProps;\n\n    isFocusable(\n        element: HTMLElement,\n        includeProgrammaticallyFocusable?: boolean,\n        noVisibleCheck?: boolean,\n        noAccessibleCheck?: boolean\n    ): boolean;\n    isVisible(element: HTMLElement): boolean;\n    isAccessible(element: HTMLElement): boolean;\n    // find* return null when there is no element and undefined when there is an uncontrolled area.\n    findFirst(\n        options: FindFirstProps,\n        out?: FindFocusableOutputProps\n    ): HTMLElement | null | undefined;\n    findLast(\n        options: FindFirstProps,\n        out?: FindFocusableOutputProps\n    ): HTMLElement | null | undefined;\n    findNext(\n        options: FindNextProps,\n        out?: FindFocusableOutputProps\n    ): HTMLElement | null | undefined;\n    findPrev(\n        options: FindNextProps,\n        out?: FindFocusableOutputProps\n    ): HTMLElement | null | undefined;\n    findDefault(\n        options: FindDefaultProps,\n        out?: FindFocusableOutputProps\n    ): HTMLElement | null;\n    /**\n     * @returns All focusables in a given context that satisfy an given condition\n     */\n    findAll(options: FindAllProps): HTMLElement[];\n    findElement(\n        options: FindFocusableProps,\n        out?: FindFocusableOutputProps\n    ): HTMLElement | null | undefined;\n}\n\nexport interface DummyInputManager {\n    moveOut: (backwards: boolean) => void;\n    moveOutWithDefaultAction: (\n        backwards: boolean,\n        relatedEvent: KeyboardEvent\n    ) => void;\n}\n\nimport { Visibilities as _Visibilities } from \"./Consts\";\nexport type Visibilities = typeof _Visibilities;\n\nexport type Visibility = Visibilities[keyof Visibilities];\n\nexport interface MoverElementState {\n    isCurrent: boolean | undefined; // Tri-state bool. Undefined when there is no current in the container.\n    visibility: Visibility;\n}\n\nimport { RestorerTypes as _RestorerTypes } from \"./Consts\";\nexport type RestorerTypes = typeof _RestorerTypes;\n\nexport type RestorerType = RestorerTypes[keyof RestorerTypes];\n\nimport { MoverDirections as _MoverDirections } from \"./Consts\";\nexport type MoverDirections = typeof _MoverDirections;\n\nexport type MoverDirection = MoverDirections[keyof MoverDirections];\n\nexport interface NextTabbable {\n    element: HTMLElement | null | undefined;\n    uncontrolled?: HTMLElement | null;\n    outOfDOMOrder?: boolean;\n}\n\nexport interface MoverProps {\n    direction?: MoverDirection;\n    memorizeCurrent?: boolean;\n    tabbable?: boolean;\n    /**\n     * Whether to allow cyclic navigation in the mover\n     * Can only be applied if navigationType is MoverKeys.Arrows\n     *\n     * @defaultValue false\n     */\n    cyclic?: boolean;\n    /**\n     * In case we need a rich state of the elements inside a Mover,\n     * we can track it. It takes extra resourses and might affect\n     * performance when a Mover has many elements inside, so make sure\n     * you use this prop when it is really needed.\n     */\n    trackState?: boolean;\n    /**\n     * When set to Visibility.Visible or Visibility.PartiallyVisible,\n     * uses the visibility part of the trackState prop to be able to\n     * go to first/last visible element (instead of first/last focusable\n     * element in DOM) when tabbing from outside of the mover.\n     */\n    visibilityAware?: Visibility;\n    /**\n     * When true, Mover will try to locate a focusable with Focusable.isDefault\n     * property as a prioritized element to focus. True by default.\n     */\n    hasDefault?: boolean;\n    /**\n     * A value between 0 and 1 that specifies the tolerance allowed\n     * when testing for visibility.\n     *\n     * @example\n     * an element of height 100px has 10px that are above the viewport\n     * hidden by scroll. This element is a valid visible element to focus.\n     *\n     * @default 0.8\n     */\n    visibilityTolerance?: number;\n}\n\nexport interface Mover\n    extends TabsterPart<MoverProps>,\n        TabsterPartWithFindNextTabbable,\n        TabsterPartWithAcceptElement {\n    readonly id: string;\n    readonly dummyManager: DummyInputManager | undefined;\n    readonly visibilityTolerance: NonNullable<\n        MoverProps[\"visibilityTolerance\"]\n    >;\n    dispose(): void;\n    setCurrent(element: HTMLElement | undefined): void;\n    getCurrent(): HTMLElement | null;\n    getState(element: HTMLElement): MoverElementState | undefined;\n}\n\nexport type MoverConstructor = (\n    tabster: TabsterCore,\n    element: HTMLElement,\n    props: MoverProps\n) => Mover;\n\ninterface MoverAPIInternal {\n    /** @internal */\n    createMover(\n        element: HTMLElement,\n        props: MoverProps,\n        sys: SysProps | undefined\n    ): Mover;\n}\n\nimport { MoverKeys as _MoverKeys } from \"./Consts\";\nexport type MoverKeys = typeof _MoverKeys;\n\nexport type MoverKey = MoverKeys[keyof MoverKeys];\n\nexport interface MoverAPI extends MoverAPIInternal, Disposable {\n    /** @internal (will likely be exposed once the API is fully stable) */\n    moveFocus(fromElement: HTMLElement, key: MoverKey): HTMLElement | null;\n}\n\nimport { GroupperTabbabilities as _GroupperTabbabilities } from \"./Consts\";\nexport type GroupperTabbabilities = typeof _GroupperTabbabilities;\n\nexport type GroupperTabbability =\n    GroupperTabbabilities[keyof GroupperTabbabilities];\n\nexport interface GroupperProps {\n    tabbability?: GroupperTabbability;\n    delegated?: boolean; // This allows to tweak the groupper behaviour for the cases when\n    // the groupper container is not focusable and groupper has Limited or LimitedTrapFocus\n    // tabbability. By default, the groupper will automatically become active once the focus\n    // goes to first focusable element inside the groupper during tabbing. When true, the\n    // groupper will become active only after Enter is pressed on first focusable element\n    // inside the groupper.\n}\n\nexport interface Groupper\n    extends TabsterPart<GroupperProps>,\n        TabsterPartWithFindNextTabbable,\n        TabsterPartWithAcceptElement {\n    readonly id: string;\n    readonly dummyManager: DummyInputManager | undefined;\n    dispose(): void;\n    makeTabbable(isUnlimited: boolean): void;\n    isActive(noIfFirstIsFocused?: boolean): boolean | undefined; // Tri-state boolean, undefined when parent is not active, false when parent is active.\n    setFirst(element: HTMLElement | undefined): void;\n    getFirst(orContainer: boolean): HTMLElement | undefined;\n}\n\nexport type GroupperConstructor = (\n    tabster: TabsterCore,\n    element: HTMLElement,\n    props: GroupperProps\n) => Groupper;\n\nexport interface GroupperAPIInternal {\n    /** @internal */\n    createGroupper(\n        element: HTMLElement,\n        props: GroupperProps,\n        sys: SysProps | undefined\n    ): Groupper;\n    /** @internal */\n    handleKeyPress(\n        element: HTMLElement,\n        event: KeyboardEvent,\n        fromModalizer?: boolean\n    ): void;\n}\n\nimport { GroupperMoveFocusActions as _GroupperMoveFocusActions } from \"./Consts\";\nexport type GroupperMoveFocusActions = typeof _GroupperMoveFocusActions;\n\nexport type GroupperMoveFocusAction =\n    GroupperMoveFocusActions[keyof GroupperMoveFocusActions];\n\nexport interface GroupperAPI extends GroupperAPIInternal, Disposable {\n    /** @internal (will likely be exposed once the API is fully stable) */\n    moveFocus(\n        element: HTMLElement,\n        action: GroupperMoveFocusAction\n    ): HTMLElement | null;\n}\n\nexport interface GroupperAPIInternal {\n    forgetCurrentGrouppers(): void;\n}\n\nexport interface ModalizerProps {\n    id: string;\n    isOthersAccessible?: boolean;\n    isAlwaysAccessible?: boolean;\n    isNoFocusFirst?: boolean;\n    isNoFocusDefault?: boolean;\n    /** A focus trap variant, keeps focus inside the modal when tabbing */\n    isTrapped?: boolean;\n}\n\nexport interface Modalizer\n    extends TabsterPart<ModalizerProps>,\n        TabsterPartWithFindNextTabbable {\n    readonly userId: string;\n    readonly dummyManager: DummyInputManager | undefined;\n    /**\n     * @returns - Whether the element is inside the modalizer\n     */\n    contains(element: HTMLElement): boolean;\n    dispose(): void;\n    isActive(): boolean;\n    makeActive(isActive: boolean): void;\n    focused(noIncrement?: boolean): number;\n}\n\nexport type ModalizerConstructor = (\n    tabster: TabsterCore,\n    element: HTMLElement,\n    props: ModalizerProps\n) => Modalizer;\n\nexport interface RootProps {\n    restoreFocusOrder?: RestoreFocusOrder;\n}\n\nexport interface Root extends TabsterPart<RootProps> {\n    /**@internal*/\n    addDummyInputs(): void;\n\n    readonly uid: string;\n    dispose(): void;\n    moveOutWithDefaultAction(\n        backwards: boolean,\n        relatedEvent: KeyboardEvent\n    ): void;\n}\n\nexport type RootConstructor = (\n    tabster: TabsterCore,\n    element: HTMLElement,\n    props: RootProps\n) => Root;\n\nimport { SysDummyInputsPositions as _SysDummyInputsPositions } from \"./Consts\";\nexport type SysDummyInputsPositions = typeof _SysDummyInputsPositions;\n\nexport type SysDummyInputsPosition =\n    SysDummyInputsPositions[keyof SysDummyInputsPositions];\n\n/**\n * Ability to fine-tune Tabster internal behaviour in rare cases of need.\n * Normally, should not be used. A deep understanding of the intention and the effect\n * is required.\n */\nexport interface SysProps {\n    /**\n     * Force dummy input position outside or inside of the element.\n     * By default (when undefined), the position is determined dynamically\n     * (for example inside for <li> elements and outside for <table> elements,\n     * plus a default Groupper/Mover/Modalizer implementation position).\n     * Setting to true will force the dummy inputs to be always outside of the element,\n     * setting to false will force the dummy inputs to be always inside.\n     */\n    dummyInputsPosition?: SysDummyInputsPosition;\n}\n\nexport interface GetTabsterContextOptions {\n    /**\n     * Should visit **all** element ancestors to verify if `dir='rtl'` is set\n     */\n    checkRtl?: boolean;\n    /**\n     * The element to start computing the context from. Useful when dealing\n     * with nested structures. For example, if we have an element inside a groupper\n     * inside another groupper, the `groupper` prop in this element's contexts will\n     * be the inner groupper, but when we pass the inner groupper's parent element\n     * as `referenceElement`, the context groupper will be the outer one. Having\n     * this option simplifies searching for the next tabbable element in the\n     * environment of nested movers and grouppers.\n     */\n    referenceElement?: HTMLElement;\n}\n\nexport type TabsterContextMoverGroupper =\n    | { isMover: true; mover: Mover }\n    | { isMover: false; groupper: Groupper };\n\nexport interface TabsterContext {\n    root: Root;\n    modalizer?: Modalizer;\n    groupper?: Groupper;\n    mover?: Mover;\n    groupperBeforeMover?: boolean;\n    modalizerInGroupper?: Groupper;\n    /**\n     * Whether `dir='rtl'` is set on an ancestor\n     */\n    rtl?: boolean;\n    excludedFromMover?: boolean;\n    uncontrolled?: HTMLElement | null;\n    ignoreKeydown: (e: KeyboardEvent) => boolean;\n}\n\ninterface RootAPIInternal {\n    /**@internal*/\n    createRoot(\n        element: HTMLElement,\n        props: RootProps,\n        sys: SysProps | undefined\n    ): Root;\n    /**@internal*/\n    onRoot(root: Root, removed?: boolean): void;\n    /**@internal*/\n    addDummyInputs(): void;\n}\n\nexport interface RootAPI extends Disposable, RootAPIInternal {}\n\nexport interface UncontrolledAPI {\n    isUncontrolledCompletely(\n        element: HTMLElement,\n        completely: boolean\n    ): boolean;\n}\n\ninterface ModalizerAPIInternal extends TabsterPartWithAcceptElement {\n    /** @internal */\n    activeId: string | undefined; // currently active Modalizer user id.\n    /** @internal */\n    currentIsOthersAccessible: boolean | undefined; // isOthersAccessible value of the currently active Modalizer.\n    /** @internal */\n    activeElements: WeakHTMLElement<HTMLElement>[];\n    /** @internal */\n    createModalizer(\n        element: HTMLElement,\n        props: ModalizerProps,\n        sys: SysProps | undefined\n    ): Modalizer;\n    /**\n     * Sets active modalizers.\n     * When active, everything outside of the modalizers with the specific user\n     * defined id gets `aria-hidden`.\n     *\n     * @param userId user defined identifier or undefined (if nothing is modal).\n     */\n    /** @internal */\n    setActive(modalizer: Modalizer | undefined): void;\n    /** @internal */\n    hiddenUpdate(): void;\n    /** @internal */\n    isAugmented(element: HTMLElement): boolean;\n}\n\nexport interface ModalizerAPI extends ModalizerAPIInternal, Disposable {\n    /**\n     * Activates a Modalizer and focuses the first or default element within\n     *\n     * @param elementFromModalizer An element that belongs to a Modalizer\n     * @param noFocusFirst Do not focus on the first element in the Modalizer\n     * @param noFocusDefault Do not focus the default element in the Modalizre\n     */\n    focus(\n        elementFromModalizer: HTMLElement,\n        noFocusFirst?: boolean,\n        noFocusDefault?: boolean\n    ): boolean;\n\n    /**\n     * Just activates the modalizer without focusing on any element. Might be useful,\n     * when the modalizer doesn't have focusable elements yet (but you want it active\n     * already).\n     *\n     * @param modalizerElementOrContainer The element that belongs to a Modalizer or the Modalizer container,\n     * or undefined to activate main app (deactivating any active modalizer).\n     * @returns true if the modalizer was activated.\n     */\n    activate(modalizerElementOrContainer: HTMLElement | undefined): boolean;\n}\n\ninterface RestorerAPIInternal {\n    /** @internal */\n    createRestorer(element: HTMLElement, props: RestorerProps): Restorer;\n}\n\nexport interface RestorerAPI extends RestorerAPIInternal, Disposable {}\n\nexport interface Restorer extends Disposable, TabsterPart<RestorerProps> {}\n/**\n * A signature for the accessibleCheck callback from getModalizer().\n * It is called when active Modalizer sets aria-hidden on elements outsidef of it.\n *\n * @param element The element that is about to receive aria-hidden.\n * @param activeModalizerElements The container elements of the active modalizer.\n * @returns true if the element should remain accessible and should not receive\n * aria-hidden.\n */\nexport type ModalizerElementAccessibleCheck = (\n    element: HTMLElement,\n    activeModalizerElements?: HTMLElement[]\n) => boolean;\n\nexport interface UncontrolledProps {\n    // Normally, even uncontrolled areas should not be completely uncontrolled\n    // to be able to interact with the rest of the application properly.\n    // For example, if an uncontrolled area implements something like\n    // roving tabindex, it should be uncontrolled inside the area, but it\n    // still should be able to be an organic part of the application.\n    // However, in some cases, third party component might want to be able\n    // to gain full control of the area, for example, if it implements\n    // some custom trap focus logic.\n    // `completely` indicates that uncontrolled area must gain full control over\n    // Tab handling. If not set, Tabster might still handle Tab in the\n    // uncontrolled area, when, for example, there is an inactive Modalizer\n    // (that needs to be skipped) after the last focusable element of the\n    // uncontrolled area.\n    // WARNING: Use with caution, as it might break the normal keyboard navigation\n    // between the uncontrolled area and the rest of the application.\n    completely?: boolean;\n}\n\nexport interface DeloserOnElement {\n    deloser: Deloser;\n}\n\nexport interface RootOnElement {\n    root: Root;\n}\n\nexport interface ModalizerOnElement {\n    modalizer: Modalizer;\n}\n\nexport interface RestorerOnElement {\n    restorer: Restorer;\n}\n\nexport interface FocusableOnElement {\n    focusable: FocusableProps;\n}\n\nexport interface MoverOnElement {\n    mover: Mover;\n}\n\nexport interface GroupperOnElement {\n    groupper: Groupper;\n}\n\nexport interface UncontrolledOnElement {\n    uncontrolled: UncontrolledProps;\n}\n\nexport interface ObservedOnElement {\n    observed: ObservedElementProps;\n}\n\nexport interface OutlineOnElement {\n    outline: OutlinedElementProps;\n}\n\nexport interface SysOnElement {\n    sys: SysProps;\n}\n\nexport interface RestorerProps {\n    type: RestorerType;\n    id?: string;\n}\n\nexport type TabsterAttributeProps = Partial<{\n    deloser: DeloserProps;\n    root: RootProps;\n    uncontrolled: UncontrolledProps;\n    modalizer: ModalizerProps;\n    focusable: FocusableProps;\n    groupper: GroupperProps;\n    mover: MoverProps;\n    observed: ObservedElementProps;\n    outline: OutlinedElementProps;\n    sys: SysProps;\n    restorer: RestorerProps;\n}>;\n\nexport interface TabsterAttributeOnElement {\n    string: string;\n    object: TabsterAttributeProps;\n}\n\nexport interface TabsterAugmentedAttributes {\n    [name: string]: string | null;\n}\n\nexport type TabsterOnElement = Partial<\n    RootOnElement &\n        DeloserOnElement &\n        ModalizerOnElement &\n        FocusableOnElement &\n        MoverOnElement &\n        GroupperOnElement &\n        ObservedOnElement &\n        OutlineOnElement &\n        UncontrolledOnElement &\n        SysOnElement &\n        RestorerOnElement\n>;\n\nexport interface OutlineElements {\n    container: HTMLDivElement;\n    left: HTMLDivElement;\n    top: HTMLDivElement;\n    right: HTMLDivElement;\n    bottom: HTMLDivElement;\n}\n\nexport interface TabsterElementStorageEntry {\n    tabster?: TabsterOnElement;\n    attr?: TabsterAttributeOnElement;\n    aug?: TabsterAugmentedAttributes;\n}\n\nexport interface TabsterElementStorage {\n    [uid: string]: TabsterElementStorageEntry;\n}\n\nexport type DisposeFunc = () => void;\n\nexport interface InternalAPI {\n    stopObserver(): void;\n    resumeObserver(syncState: boolean): void;\n}\n\nexport interface DummyInputObserver {\n    add(dummy: HTMLElement, callback: () => void): void;\n    remove(dummy: HTMLElement): void;\n    dispose(): void;\n    domChanged?(parent: HTMLElement): void;\n    updatePositions(\n        compute: (\n            scrollTopLeftCache: Map<\n                HTMLElement,\n                { scrollTop: number; scrollLeft: number } | null\n            >\n        ) => () => void\n    ): void;\n}\n\ninterface TabsterCoreInternal {\n    /** @internal */\n    groupper?: GroupperAPI;\n    /** @internal */\n    mover?: MoverAPI;\n    /** @internal */\n    outline?: OutlineAPI;\n    /** @internal */\n    deloser?: DeloserAPI;\n    /** @internal */\n    modalizer?: ModalizerAPI;\n    /** @internal */\n    observedElement?: ObservedElementAPI;\n    /** @internal */\n    crossOrigin?: CrossOriginAPI;\n    /** @internal */\n    internal: InternalAPI;\n    /** @internal */\n    restorer?: RestorerAPI;\n\n    /** @internal */\n    _dummyObserver: DummyInputObserver;\n\n    // The version of the tabster package this instance is on\n    /** @internal */\n    _version: string;\n\n    // No operation flag for the debugging purposes\n    /** @internal */\n    _noop: boolean;\n\n    /** @internal */\n    storageEntry(\n        element: HTMLElement,\n        addremove?: boolean\n    ): TabsterElementStorageEntry | undefined;\n    /** @internal */\n    getWindow: GetWindow;\n\n    /** @internal */\n    createTabster(noRefCount?: boolean, props?: TabsterCoreProps): Tabster;\n    /** @internal */\n    disposeTabster(wrapper: Tabster, allInstances?: boolean): void;\n    /** @internal */\n    forceCleanup(): void;\n\n    /** @internal */\n    queueInit(callback: () => void): void;\n    /** @internal */\n    drainInitQueue(): void;\n    /** @internal */\n    getParent: (el: Node) => Node | null;\n}\n\nexport interface Tabster {\n    keyboardNavigation: KeyboardNavigationState;\n    focusedElement: FocusedElementState;\n    focusable: FocusableAPI;\n    root: RootAPI;\n    uncontrolled: UncontrolledAPI;\n\n    /** @internal */\n    core: TabsterCore;\n}\n\nexport interface TabsterCore\n    extends Pick<TabsterCoreProps, \"controlTab\" | \"rootDummyInputs\">,\n        Disposable,\n        TabsterCoreInternal,\n        Omit<Tabster, \"core\"> {}\n\nexport interface TabsterCompat {\n    attributeTransform?: <P>(old: P) => TabsterAttributeProps;\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport * as Types from \"./Types\";\n\nexport interface TabsterMoveFocusEventDetail {\n    by: \"mover\" | \"groupper\" | \"modalizer\" | \"root\" | \"deloser\";\n    owner: HTMLElement; // Mover, Groupper, Modalizer or Root, the initiator.\n    next: HTMLElement | null; // Next element to focus or null if Tabster wants to go outside of Root (i.e. to the address bar of the browser).\n    relatedEvent?: KeyboardEvent; // The original keyboard event that triggered the move.\n}\n\nexport interface MoverMoveFocusEventDetail {\n    key: Types.MoverKey;\n}\n\nexport interface MoverMemorizedElementEventDetail {\n    memorizedElement: HTMLElement | undefined;\n}\n\nexport interface GroupperMoveFocusEventDetail {\n    action: Types.GroupperMoveFocusAction;\n}\n\nexport interface ModalizerEventDetail {\n    id: string;\n    element: HTMLElement;\n}\n\nexport interface RootFocusEventDetail {\n    element: HTMLElement;\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { GroupperMoveFocusAction, MoverKey } from \"./Types\";\nimport {\n    GroupperMoveFocusEvent,\n    MoverMoveFocusEvent,\n    MoverMemorizedElementEvent,\n} from \"./Events\";\n\n/** @deprecated This function is obsolete, use native element.dispatchEvent(new GroupperMoveFocusEvent(...)). */\nexport function dispatchGroupperMoveFocusEvent(\n    target: HTMLElement,\n    action: GroupperMoveFocusAction\n) {\n    return target.dispatchEvent(new GroupperMoveFocusEvent({ action }));\n}\n\n/** @deprecated This function is obsolete, use native element.dispatchEvent(new MoverMoveFocusEvent(...)). */\nexport function dispatchMoverMoveFocusEvent(\n    target: HTMLElement,\n    key: MoverKey\n) {\n    return target.dispatchEvent(new MoverMoveFocusEvent({ key }));\n}\n\n/** @deprecated This function is obsolete, use native element.dispatchEvent(new MoverMemorizedElementEvent(...)). */\nexport function dispatchMoverMemorizedElementEvent(\n    target: HTMLElement,\n    memorizedElement: HTMLElement | undefined\n) {\n    return target.dispatchEvent(\n        new MoverMemorizedElementEvent({ memorizedElement })\n    );\n}\n"],"names":["TABSTER_ATTRIBUTE_NAME","TABSTER_DUMMY_INPUT_ATTRIBUTE_NAME","FOCUSABLE_SELECTOR","join","AsyncFocusSources","EscapeGroupper","Restorer","Deloser","ObservedElementAccessibilities","Any","Accessible","Focusable","ObservedElementRequestStatuses","Waiting","Succeeded","Canceled","TimedOut","RestoreFocusOrders","History","DeloserDefault","RootDefault","DeloserFirst","RootFirst","DeloserStrategies","Auto","Manual","Visibilities","Invisible","PartiallyVisible","Visible","RestorerTypes","Source","Target","MoverDirections","Both","Vertical","Horizontal","Grid","GridLinear","MoverKeys","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","PageUp","PageDown","Home","End","GroupperTabbabilities","Unlimited","Limited","LimitedTrapFocus","GroupperMoveFocusActions","Enter","Escape","SysDummyInputsPositions","Inside","Outside","getTabsterOnElement","tabster","element","_a","storageEntry","updateTabsterByAttribute","dispose","newAttrValue","_noop","undefined","getAttribute","entry","newAttr","attr","string","newValue","JSON","parse","Error","object","e","__DEV__","console","error","tabsterOnElement","oldTabsterProps","_b","newTabsterProps","key","Object","keys","root","onRoot","part","observedElement","onObservedElementUpdate","sys","deloser","setProps","createDeloser","createRoot","modalizer","createModalizer","restorer","createRestorer","focusable","groupper","createGroupper","mover","createMover","observed","uncontrolled","outline","length","TabsterFocusInEventName","TabsterFocusOutEventName","TabsterMoveFocusEventName","DeloserFocusLostEventName","DeloserRestoreFocusEventName","ModalizerActiveEventName","ModalizerInactiveEventName","ModalizerFocusInEventName","ModalizerFocusOutEventName","MoverStateEventName","MoverMoveFocusEventName","MoverMemorizedElementEventName","GroupperMoveFocusEventName","RestorerRestoreFocusEventName","RootFocusEventName","RootBlurEventName","CustomEvent_","CustomEvent","TabsterCustomEvent","constructor","type","detail","bubbles","cancelable","composed","details","TabsterFocusInEvent","TabsterFocusOutEvent","TabsterMoveFocusEvent","MoverStateEvent","MoverMoveFocusEvent","MoverMemorizedElementEvent","GroupperMoveFocusEvent","ModalizerActiveEvent","ModalizerInactiveEvent","DeloserFocusLostEvent","DeloserRestoreFocusEvent","RestorerRestoreFocusEvent","RootFocusEvent","RootBlurEvent","_createMutationObserver","callback","MutationObserver","_createTreeWalker","doc","whatToShow","filter","createTreeWalker","_getParentNode","node","parentNode","_getParentElement","parentElement","_nodeContains","parent","child","contains","_getActiveElement","activeElement","_querySelector","selector","querySelector","_querySelectorAll","Array","prototype","slice","call","querySelectorAll","_getElementById","id","getElementById","_getFirstChild","firstChild","_getLastChild","lastChild","_getNextSibling","nextSibling","_getPreviousSibling","previousSibling","_getFirstElementChild","firstElementChild","_getLastElementChild","lastElementChild","_getNextElementSibling","nextElementSibling","_getPreviousElementSibling","previousElementSibling","_appendChild","appendChild","_insertBefore","referenceChild","insertBefore","_getSelection","ref","ownerDocument","getSelection","_getElementsByName","referenceElement","name","getElementsByName","dom","createMutationObserver","getParentNode","getParentElement","nodeContains","getActiveElement","getFirstChild","getLastChild","getNextSibling","getPreviousSibling","getFirstElementChild","getLastElementChild","getNextElementSibling","getPreviousElementSibling","setDOMAPI","domapi","_isBrokenIE11","_DOMRect","DOMRect","x","y","width","height","left","top","right","bottom","_uidCounter","document","NodeFilter","SHOW_ELEMENT","_updateDummyInputsTimeout","getInstanceContext","getWindow","win","ctx","__tabsterInstanceContext","elementByUId","basics","Promise","WeakRef","containerBoundingRectCache","lastContainerBoundingRectCacheId","fakeWeakRefs","fakeWeakRefsStarted","disposeInstanceContext","containerBoundingRectCacheTimer","clearTimeout","fakeWeakRefsTimer","createWeakMap","WeakMap","hasSubFocusable","FakeWeakRef","target","_target","deref","cleanup","fwr","forceRemove","documentContains","WeakHTMLElement","data","context","push","_ref","_data","get","getData","cleanupFakeWeakRefs","startFakeWeakRefsCleanup","getWeakRef","setTimeout","stopFakeWeakRefsCleanupAndClearStorage","createElementTreeWalker","acceptNode","nodeType","Node","ELEMENT_NODE","getBoundingRect","cacheId","__tabsterCacheId","cached","rect","scrollingElement","documentElement","clientWidth","clientHeight","r","getBoundingClientRect","Math","max","min","window","cId","isElementVerticallyVisibleInContainer","tolerance","container","getScrollableContainer","containerRect","elementRect","intersectionTolerance","topIntersection","bottomIntersection","totalIntersection","scrollIntoView","alignToTop","scrollTop","el","scrollWidth","scrollHeight","makeFocusIgnored","__shouldIgnoreFocus","shouldIgnoreFocus","getUId","wnd","rnd","Uint32Array","crypto","getRandomValues","msCrypto","i","random","srnd","toString","Date","now","getElementUId","uid","__tabsterElementUID","getWindowUId","__tabsterCrossOriginWindowUID","clearElementCache","wel","body","matchesSelector","matches","msMatchesSelector","webkitMatchesSelector","getPromise","_lastTabsterPartId","TabsterPart","props","_tabster","_element","_props","getElement","getProps","DummyInput","isOutside","fixedTarget","_focusIn","_fixedTarget","nativeFocus","input","onFocusIn","relatedTarget","_isBackward","_focusOut","useDefaultAction","onFocusOut","createElement","tabIndex","setAttribute","style","position","opacity","zIndex","setProperty","isFirst","_isPhantom","isPhantom","addEventListener","__tabsterDummyContainer","_disposeTimer","_clearDisposeTimeout","removeEventListener","removeChild","setTopLeft","isIn","current","previous","compareDocumentPosition","DOCUMENT_POSITION_FOLLOWING","DummyInputManagerPriorities","Root","Modalizer","Mover","Groupper","DummyInputManager","priority","outsideByDefault","callForDefaultAction","_instance","DummyInputManagerCore","_setHandlers","_onFocusIn","_onFocusOut","moveOut","backwards","moveOutWithDefaultAction","relatedEvent","getHandler","setTabbable","tabbable","moveWithPhantomDummy","moveOutOfElement","isBackward","dummy","tagName","isFocusable","potentialDummy","dummyFor","getDummyInputContainer","dispatchEvent","by","owner","next","addPhantomDummyWithTarget","sourceElement","targetElement","dummyParent","setDummyInputDebugValue","wrappers","what","map","w","DummyInputObserver","_updateQueue","Set","_lastUpdateQueueTime","_changedParents","WeakSet","_dummyElements","_dummyCallbacks","_domChanged","has","add","_updateDummyInputsTimer","_win","dummyElement","set","domChanged","remove","delete","_updateTimer","clear","updatePositions","compute","_scheduledUpdatePositions","scrollTopLeftCache","Map","setTopLeftCallbacks","manager","_wrappers","_isOutside","_transformElements","dummyInput","_onFocus","first","_firstDummy","last","_lastDummy","_ensurePosition","firstInput","lastInput","toFocus","wrapper","_getCurrent","_addDummyInputs","_addTimer","_getWindow","_addTransformOffsets","_dummyObserver","_computeTransformOffsets","from","transformElements","newTransformElements","scrollLeft","scrollTopLeft","transform","getComputedStyle","_callForDefaultAction","instance","__tabsterDummy","forcedDummyPosition","dummyInputsPosition","force","_c","_d","sort","a","b","firstDummyInput","lastDummyInput","elementParent","getAdjacentElement","prev","cur","adjacent","augmentAttribute","value","ret","aug","origVal","removeAttribute","origValue","isDisplayNone","elementDocument","computedStyle","defaultView","offsetParent","visibility","display","isRadio","getRadioButtonGroup","radioButtons","checked","buttons","getTabsterAttribute","plain","stringify","mergeTabsterProps","newProps","setTabsterAttribute","update","_setInformativeStyle","weakElement","removeProperty","RootDummyManager","setFocused","_onDummyInputFocus","_setFocused","keyboardNavigation","setNavigatingWithKeyboard","focusedElement","getFirstOrLastTabbable","ignoreAccessibility","blur","onDispose","_isFocused","hasFocused","_setFocusedTimer","_dummyManager","event","getParent","rootElement","curElement","composedPath","_onDispose","_sys","controlTab","rootDummyInputs","addDummyInputs","KEYBORG_FOCUSIN","KEYBORG_FOCUSOUT","_add","_remove","dummyManager","RootAPI","autoRoot","_autoRootWaiting","_roots","_forceDummy","rootById","_autoRootCreate","_autoRootUnwait","_autoRoot","_onRootDispose","queueInit","forEach","rootId","newRoot","roots","getRootByUId","__tabsterInstance","getTabsterContext","options","checkRtl","drainInitQueue","excludedFromMover","groupperBeforeMover","modalizerInGroupper","dirRightToLeft","ignoreKeydown","dir","toLowerCase","isVisible","excludeFromMover","curModalizer","curGroupper","curMover","isActive","tabbability","userId","activeId","assign","rootAPI","shouldIgnoreKeydown","rtl","getRoot","removed","_containerHistoryLength","DeloserItemBase","DeloserItem","_deloser","belongsTo","unshift","focusAvailable","available","findAvailable","deloserElement","focus","resetFocus","resolve","DeloserHistoryByRootBase","rootUId","_history","getLength","removeDeloser","c","hasDeloser","some","d","DeloserHistoryByRoot","unshiftToDeloser","item","splice","skip","result","resetQueue","DeloserHistory","process","DeloserAPI","getDeloser","historyByRoot","make","createInstance","hbr","h","snapshotIndex","buildElementSelector","withClass","withIndex","escapeRegExp","escapeReplaceValue","elementId","replace","className","split","cls","trim","index","buildSelector","DOCUMENT_FRAGMENT_NODE","isBody","_isActive","_snapshotIndex","setSnapshot","focusFirst","focusDefault","clearHistory","preserveExisting","we","strategy","setActive","active","getActions","pop","restoreFocusOrder","findDefault","_findFirst","availableInHistory","_findInHistory","availableDefault","availableFirst","customFocusLostHandler","noSelectorCheck","els","isNavigatingWithKeyboard","findFirst","useActiveModalizer","_inDeloser","_isRestoringFocus","_isPaused","_onRestoreFocus","stopImmediatePropagation","_restoreFocusTimer","_scheduleRestoreFocus","_activate","_deactivate","_onDeloserDispose","subscribe","autoDeloser","_autoDeloser","_autoDeloserInstance","unsubscribe","_curDeloser","getFocusedElement","pause","resume","restore","curDeloser","restoreFocus","lastFocused","getLastFocusedElement","isManual","curDeloserElement","deloserAPI","autoDeloserProps","getHistory","forceRestoreFocus","Subscribable","_callbacks","_val","callbacks","indexOf","subscribeFirst","setVal","val","_callCallbacks","getVal","trigger","_transactionTimeout","_pingTimeout","_targetIdUp","CrossOriginTransactionTypes","Bootstrap","FocusElement","State","GetElement","RestoreFocusInDeloser","Ping","CrossOriginDeloserItem","trasactions","_transactions","deloserUId","reset","beginTransaction","RestoreFocusInDeloserTransaction","then","CrossOriginDeloserHistoryByRoot","transactions","CrossOriginTransaction","getOwner","knownTargets","timeout","sentTo","targetId","sendUp","_inProgress","_isDone","_isSelfResponding","_sentCount","ownerId","beginData","_knownTargets","_sentTo","_promise","reject","_resolve","_reject","getTargets","send","begin","selfResponse","targets","transaction","isResponse","timestamp","sentto","endData","end","_send","onResponse","inProgressId","BootstrapTransaction","shouldForward","makeResponse","FocusElementTransaction","shouldSelfRespond","GetElementTransaction","findElement","forwardResult","CrossOriginStates","Focused","Blurred","Observed","DeadWindow","KeyboardNavigation","Outline","StateTransaction","state","isSelfResponse","_makeFocusedResponse","_makeBlurredResponse","_makeObservedResponse","_makeDeadWindowResponse","_makeKeyboardNavigationResponse","_makeOutlineResponse","CrossOriginElement","ownerUId","observedName","observedDetails","focusOwner","focusOwnerTimestamp","history","historyItem","CrossOriginFocusedElementState","crossOrigin","isFocusedProgrammatically","CrossOriginObservedElementState","names","deadUId","removeTarget","ignoreKeyboardNavigationStateUpdate","origOutlineSetup","accessibility","getElementData","getDeloserUID","dataOut","isWaitElementResolved","isForwardResolved","isResolved","waitElement","forwardRet","deloserByUId","PingTransaction","CrossOriginTransactions","_isDefaultSendUp","isSetUp","_onMessage","_ownerUId","transactionId","knownTarget","t","Transaction","_getTransactionClass","forwardTransaction","_owner","response","_onPageHide","_dead","_onBrowserMessage","source","postMessage","setup","setSendUp","_ping","_pingTimer","_deadPromise","timer","withReject","_beginTransaction","catch","finally","deadWindows","all","focused","noFocusedProgrammaticallyFlag","noAccessibleCheck","_focus","focusById","focusByObservedName","elementData","_lastRequestFocusId","requestFocus","requestId","CrossOriginAPI","_init","_onKeyboardNavigationStateChanged","_onObserved","_ctx","_outlineSetup","_blurTimer","FocusableAPI","includeProgrammaticallyFocusable","noVisibleCheck","isAccessible","_isHidden","ignoreDisabled","ignoreAriaDisabled","_isDisabled","hasAttribute","attrVal","isAugmented","out","findLast","findNext","findPrev","acceptCondition","isDefault","findAll","_findElements","found","isFindAll","currentElement","modalizerId","onElement","elements","hasCustomCondition","acceptElementState","modalizerUserId","cachedGrouppers","cachedRadioGroups","walker","_acceptElement","prepareForNextElement","shouldContinueIfNotFound","foundElement","foundBackward","fromCtx","outOfDOMOrder","currentNode","FILTER_ACCEPT","skippedFocusable","previousNode","nextNode","FILTER_SKIP","FILTER_REJECT","rejectElementsFrom","currentCtx","fromMover","acceptElement","groupperElement","fromMoverElement","moverElement","radioGroupName","radioGroup","Keys","Tab","Space","getUncontrolledCompletelyContainer","uncontrolledOnElement","isUncontrolledCompletely","completely","AsyncFocusIntentPriorityBySource","FocusedElementState","_onKeyDown","_setFocusedElement","_onChanged","originalEvent","_validateFocusedElement","ctrlKey","contentEditable","shiftKey","findNextTabbable","nextElement","uncontrolledCompletelyContainer","nextUncontrolled","preventDefault","_lastVal","lastCtx","asyncFocus","_asyncFocus","_lastResetElement","_nextVal","forgetMemorized","preventScroll","_focusFirstOrLast","focusLast","prevTabIndex","prevAriaHidden","_setOrRemoveAttribute","requestAsyncFocus","delay","currentAsyncFocus","cancelAsyncFocus","lastResetElement","nextVal","actualContainer","isTabbingTimer","_isTabbingTimer","isTabbing","callFindNext","parentCtx","currentScopeElement","newCurrent","findProps","findPropsOut","GroupperDummyManager","_shouldTabInside","makeTabbable","_first","currentIsDummy","groupperFirstFocusable","getFirst","isTabbable","noIfFirstIsFocused","isParentActive","g","orContainer","setFirst","parentCtxGroupper","parentGroupper","parentGroupperElement","getIsActive","GroupperAPI","_current","_grouppers","_onMouseDown","_onMoveFocus","_onGroupperDispose","_updateCurrent","altKey","metaKey","handleKeyPress","action","defaultPrevented","_enterGroupper","_escapeGroupper","groupperId","newGroupper","forgetCurrentGrouppers","newIds","delegated","fromModalizer","moveFocus","KeyboardNavigationState","_onChange","_keyborg","createKeyborg","disposeKeyborg","_wasFocusedCounter","_ariaHidden","internalId","wasFocused","ModalizerDummyManager","dummyContainer","activeElements","_wasFocused","_activeElements","makeActive","_dispatchEvent","noIncrement","modalizerElement","isTrapped","allElements","eventDetail","ModalizerAPI","alwaysAccessibleSelector","accessibleCheck","_onModalizerDispose","_parts","_modalizers","activationHistory","_activationHistory","cleanActivationHistory","prevHistoryItem","modalizerUserIdFromHistory","prevActiveId","prevActive","values","focusedSince","m","f","augmentedMap","_augMap","tabsterOnFocusedElement","modalizerOnFocusedElement","parentModalizer","currentIsOthersAccessible","isOthersAccessible","isAlwaysAccessible","_restoreModalizerFocusTimer","_restoreModalizerFocus","_aug","_alwaysAccessibleSelector","_accessibleCheck","_hiddenUpdateTimer","hiddenUpdate","_hiddenUpdate","elementFromModalizer","noFocusFirst","noFocusDefault","modalizerRoot","isNoFocusFirst","isNoFocusDefault","activate","modalizerElementOrContainer","modalizerToActivate","currentModalizer","parts","visibleElements","hiddenElements","alwaysAccessibleElements","activeModalizerElements","modalizerParts","allVisibleElements","newAugmented","newAugmentedMap","toggle","hide","walk","containsModalizer","containedByModalizer","elParent","__tabsterElementFlags","noDirectAriaHidden","outsideElement","focusedElementModalizer","DOCUMENT_POSITION_PRECEDING","_inputSelector","MoverDummyManager","getMemorized","_onFocusDummyInput","memorized","_getMemorized","_moverUpdateAdd","_moverUpdateAttr","_moverUpdateRemove","_visible","_onIntersection","entries","newVisibility","fullyVisible","_fullyVisible","intersectionRatio","getState","visibilityTolerance","trackState","visibilityAware","_intersectionObserver","IntersectionObserver","threshold","_observeState","memorizeCurrent","disconnect","_allElements","_unobserve","_setCurrentTimer","setCurrent","changed","_prevCurrent","weak","getCurrent","hasDefault","tabsterFocusable","updateQueue","observer","mutations","mutation","removedNodes","added","addedNodes","attributeName","requestUpdate","setElement","unobserve","observe","updateElement","addNewElements","getMoverGroupper","removeWalk","toe","childList","subtree","attributes","attributeFilter","isCurrent","getDistance","ax1","ay1","ax2","ay2","bx1","by1","bx2","by2","xDistance","yDistance","sqrt","MoverAPI","_onMemorizedElement","_onMoverDispose","_movers","currentFocusableElement","deepestFocusableElement","_ignoredInputTimer","_ignoredInputResolve","moverKey","_isIgnoredInput","_moveFocus","memorizedElement","moverId","newMover","fromElement","moverProps","direction","isBoth","isVertical","isHorizontal","isGridLinear","isGrid","isCyclic","cyclic","scrollIntoViewArg","focusedElementRect","focusedElementX1","focusedElementX2","ceil","floor","nextElementX1","nextElementX2","firstColumnX1","lastColumnX1","lastDistance","lastIntersection","xIntersectionWidth","minWidth","intersection","distance","selectionStart","selectionEnd","textLength","asyncRet","selection","initialLength","modify","selStart","anchorNode","prevAnchorNode","focusNode","prevFocusNode","anchorOffset","prevAnchorOffset","focusOffset","prevFocusOffset","textContent","anchorFound","addOffsets","nodeText","len","stop","observeMutations","syncState","onMutation","removedNode","updateTabsterElements","_e","processNode","_conditionCheckTimeout","ObservedElementAPI","_waiting","_observedById","_observedByName","_currentRequestTimestamp","_currentRequest","delta","settleTime","cancel","info","observedNames","prevNames","_isObservedNamesUpdated","prevName","obn","_waitConditional","_rejectWaiting","shouldResolve","conditionTimer","o","status","prefix","request","promise","currentRequestFocus","waitingElementKey","waitingAccessibleElementKey","waitingFocusableElementKey","waitingElement","waitingAccessibleElement","waitingFocusableElement","waiting","includes","resolveAccessible","resolveFocusable","defaultProps","areaClass","outlineClass","outlineColor","outlineWidth","OutlinePosition","equalsTo","other","clone","OutlineAPI","_isVisible","_allOutlineElements","_onScroll","_fullScreenEventName","_onFullScreenChanged","_fullScreenElementName","outlineElements","_getDOM","fsElement","_fullScreenElement","_updateElement","_setVisibility","_outlinedElement","_isParentChild","_curPos","_setOutlinePosition","__tabsterOutline","appendStyles","classList","_removeDOM","_curOutlineElements","_shouldShowCustomOutline","isIgnored","inputType","outlinedInputTypes","button","checkbox","file","image","radio","range","submit","_updateOutline","visible","boundingRect","p","hasAbsolutePositionedParent","hasFixedPositionedParent","overflow","allRect","allWidth","allHeight","ow","leftBorderNode","topBorderNode","rightBorderNode","bottomBorderNode","sx","pageXOffset","sy","pageYOffset","background","contextElement","DOCUMENT_POSITION_CONTAINED_BY","createTextNode","getOutlineStyles","head","UncontrolledAPI","_isUncontrolledCompletely","_hasFocus","_stack","DEPTH","shift","maybeElement","RestorerAPI","_focusedElementState","sourceId","_restoreFocus","tabsterAttribute","_keyboardNavState","getId","restorerProps","shadowRoot","otherNode","assignedElements","assignedSlot","host","sibling","tmp","ShadowTreeWalker","_walkerStack","_currentSetFor","_acceptNode","_doc","SHOW_ALL","_currentNode","walkers","curNode","currentWalkerCurrentNode","nodeResult","currentWalker","createShadowTreeWalker","ShadowMutationObserver","_overrideAttachShadow","origAttachShadow","Element","attachShadow","__origAttachShadow","shadowObserver","_shadowObservers","_addSubObserver","_isObserving","_callbackWrapper","_walkShadows","_callback","_observer","_subObservers","_options","_root","subObserver","DOCUMENT_NODE","takeRecords","records","createShadowMutationObserver","shadowQuerySelector","n","Tabster","core","TabsterCore","_forgetMemorizedElements","_initQueue","_version","__VERSION__","_storage","DOMAPI","checkUncontrolledCompletely","checkUncontrolledTrappingFocus","internal","stopObserver","resumeObserver","_mergeProps","createTabster","noRefCount","disposeTabster","allInstances","size","_initTimer","_forgetMemorizedTimer","_f","_g","_h","addremove","storage","forceCleanup","queue","tabsterCore","getCurrentTabster","getTabster","getShadowDOMAPI","shadowDOMAPI","getGroupper","getMover","getOutline","getModalizer","getObservedElement","getCrossOrigin","getInternal","getRestorer","makeNoOp","noop","isNoOp","dispatchGroupperMoveFocusEvent","dispatchMoverMoveFocusEvent","dispatchMoverMemorizedElementEvent"],"mappings":"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"}