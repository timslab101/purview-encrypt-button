{"version":3,"file":"billingAccount.js","sourceRoot":"","sources":["../../../src/operations/billingAccount.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAGH,OAAO,KAAK,UAAU,MAAM,oBAAoB,CAAC;AACjD,OAAO,KAAK,OAAO,MAAM,sBAAsB,CAAC;AAChD,OAAO,KAAK,UAAU,MAAM,yBAAyB,CAAC;AAOtD,kDAAkD;AAClD,MAAM,OAAO,kBAAkB;IACZ,MAAM,CAAqB;IAE5C;;;OAGG;IACH,YAAY,MAA0B;QACpC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IAED;;;;OAIG;IACH,SAAS,CACP,gBAAwB,EACxB,OAA+C;QAE/C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,gBAAgB,EAAE,OAAO,EAAE,EAC7B,sBAAsB,CACvB,CAAC;IACJ,CAAC;CACF;AACD,2BAA2B;AAC3B,MAAM,UAAU,GAAG,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;AAE3E,MAAM,sBAAsB,GAA6B;IACvD,IAAI,EACF,mHAAmH;IACrH,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,8BAA8B;SACnD;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,iBAAiB;SACtC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,WAAW,CAAC;IACzC,aAAa,EAAE,CAAC,UAAU,CAAC,KAAK,EAAE,UAAU,CAAC,gBAAgB,CAAC;IAC9D,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { BillingAccount } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport { SubscriptionClient } from \"../subscriptionClient.js\";\nimport {\n  BillingAccountGetPolicyOptionalParams,\n  BillingAccountGetPolicyResponse\n} from \"../models/index.js\";\n\n/** Class containing BillingAccount operations. */\nexport class BillingAccountImpl implements BillingAccount {\n  private readonly client: SubscriptionClient;\n\n  /**\n   * Initialize a new instance of the class BillingAccount class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SubscriptionClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get Billing Account Policy.\n   * @param billingAccountId Billing Account Id.\n   * @param options The options parameters.\n   */\n  getPolicy(\n    billingAccountId: string,\n    options?: BillingAccountGetPolicyOptionalParams\n  ): Promise<BillingAccountGetPolicyResponse> {\n    return this.client.sendOperationRequest(\n      { billingAccountId, options },\n      getPolicyOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getPolicyOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.Subscription/policies/default\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BillingAccountPoliciesResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponseBody\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [Parameters.$host, Parameters.billingAccountId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n"]}