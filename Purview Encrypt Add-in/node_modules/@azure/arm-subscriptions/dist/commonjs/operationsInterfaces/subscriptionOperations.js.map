{"version":3,"file":"subscriptionOperations.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/subscriptionOperations.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PollerLike, PollOperationState } from \"@azure/core-lro\";\nimport {\n  SubscriptionCancelOptionalParams,\n  SubscriptionCancelResponse,\n  SubscriptionName,\n  SubscriptionRenameOptionalParams,\n  SubscriptionRenameResponse,\n  SubscriptionEnableOptionalParams,\n  SubscriptionEnableResponse,\n  AcceptOwnershipRequest,\n  SubscriptionAcceptOwnershipOptionalParams,\n  SubscriptionAcceptOwnershipResponse,\n  SubscriptionAcceptOwnershipStatusOptionalParams,\n  SubscriptionAcceptOwnershipStatusResponse\n} from \"../models/index.js\";\n\n/** Interface representing a SubscriptionOperations. */\nexport interface SubscriptionOperations {\n  /**\n   * The operation to cancel a subscription\n   * @param subscriptionId Subscription Id.\n   * @param options The options parameters.\n   */\n  cancel(\n    subscriptionId: string,\n    options?: SubscriptionCancelOptionalParams\n  ): Promise<SubscriptionCancelResponse>;\n  /**\n   * The operation to rename a subscription\n   * @param subscriptionId Subscription Id.\n   * @param body Subscription Name\n   * @param options The options parameters.\n   */\n  rename(\n    subscriptionId: string,\n    body: SubscriptionName,\n    options?: SubscriptionRenameOptionalParams\n  ): Promise<SubscriptionRenameResponse>;\n  /**\n   * The operation to enable a subscription\n   * @param subscriptionId Subscription Id.\n   * @param options The options parameters.\n   */\n  enable(\n    subscriptionId: string,\n    options?: SubscriptionEnableOptionalParams\n  ): Promise<SubscriptionEnableResponse>;\n  /**\n   * Accept subscription ownership.\n   * @param subscriptionId Subscription Id.\n   * @param body The parameters required to accept subscription ownership.\n   * @param options The options parameters.\n   */\n  beginAcceptOwnership(\n    subscriptionId: string,\n    body: AcceptOwnershipRequest,\n    options?: SubscriptionAcceptOwnershipOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<SubscriptionAcceptOwnershipResponse>,\n      SubscriptionAcceptOwnershipResponse\n    >\n  >;\n  /**\n   * Accept subscription ownership.\n   * @param subscriptionId Subscription Id.\n   * @param body The parameters required to accept subscription ownership.\n   * @param options The options parameters.\n   */\n  beginAcceptOwnershipAndWait(\n    subscriptionId: string,\n    body: AcceptOwnershipRequest,\n    options?: SubscriptionAcceptOwnershipOptionalParams\n  ): Promise<SubscriptionAcceptOwnershipResponse>;\n  /**\n   * Accept subscription ownership status.\n   * @param subscriptionId Subscription Id.\n   * @param options The options parameters.\n   */\n  acceptOwnershipStatus(\n    subscriptionId: string,\n    options?: SubscriptionAcceptOwnershipStatusOptionalParams\n  ): Promise<SubscriptionAcceptOwnershipStatusResponse>;\n}\n"]}