{"version":3,"file":"subscriptionPolicy.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/subscriptionPolicy.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport {\n  GetTenantPolicyResponse,\n  SubscriptionPolicyListPolicyForTenantOptionalParams,\n  PutTenantPolicyRequestProperties,\n  SubscriptionPolicyAddUpdatePolicyForTenantOptionalParams,\n  SubscriptionPolicyAddUpdatePolicyForTenantResponse,\n  SubscriptionPolicyGetPolicyForTenantOptionalParams,\n  SubscriptionPolicyGetPolicyForTenantResponse\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a SubscriptionPolicy. */\nexport interface SubscriptionPolicy {\n  /**\n   * Get the subscription tenant policy for the user's tenant.\n   * @param options The options parameters.\n   */\n  listPolicyForTenant(\n    options?: SubscriptionPolicyListPolicyForTenantOptionalParams\n  ): PagedAsyncIterableIterator<GetTenantPolicyResponse>;\n  /**\n   * Create or Update Subscription tenant policy for user's tenant.\n   * @param body Put tenant policy request properties.\n   * @param options The options parameters.\n   */\n  addUpdatePolicyForTenant(\n    body: PutTenantPolicyRequestProperties,\n    options?: SubscriptionPolicyAddUpdatePolicyForTenantOptionalParams\n  ): Promise<SubscriptionPolicyAddUpdatePolicyForTenantResponse>;\n  /**\n   * Get the subscription tenant policy for the user's tenant.\n   * @param options The options parameters.\n   */\n  getPolicyForTenant(\n    options?: SubscriptionPolicyGetPolicyForTenantOptionalParams\n  ): Promise<SubscriptionPolicyGetPolicyForTenantResponse>;\n}\n"]}